
#Область Переменные

// Форма - владелец текущей формы (для краткости и наглядности вместо "ЭтаФорма.ВладелецФормы")
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;

&НаКлиенте
Перем ПредыдущийТип;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	// Если форма открыта под внешним управлением, то не вся функциональность
	// должна работать
	Если Параметры.ФормаОткрытаПодВнешнимУправлением Тогда
		
		ФормаОткрытаПодВнешнимУправлением = Истина;
		
		Элементы.ВыбратьОбъектИБ.Доступность                                = Ложь;
		
	КонецЕсли;
	///
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	// Заполнение списка выбора
	СписокВыбораТипа = Элементы.ТипРеквизита.СписокВыбора;
	СписокВыбораТипа.Добавить("Число"                  , НСтр("ru = 'Число'"));
	СписокВыбораТипа.Добавить("Строка"                 , НСтр("ru = 'Строка'"));
	СписокВыбораТипа.Добавить("Дата"                   , НСтр("ru = 'Дата'"));
	СписокВыбораТипа.Добавить("Булево"                 , НСтр("ru = 'Булево'"));
	СписокВыбораТипа.Добавить("Предопределенное"       , НСтр("ru = 'Предопределенное значение'"));
	СписокВыбораТипа.Добавить("Ссылка"                 , НСтр("ru = 'Ссылка (Идентификатор)'"));
	СписокВыбораТипа.Добавить("УникальныйИдентификатор", НСтр("ru = 'Уникальный идентификатор'"));
	СписокВыбораТипа.Добавить("СистемноеПеречисление"  , НСтр("ru = 'Системное перечисление'"));
	СписокВыбораТипа.Добавить("Параметр"               , НСтр("ru = 'Имя параметра'"));
	
	ИмяРеквизита      = Параметры.Имя;
	СинонимРевизита   = Параметры.Синоним;
	ТипРеквизита      = Параметры.ТипРеквизита;
	ЗначениеРеквизита = Параметры.Значение;
	Представление     = Параметры.Представление;
	
	АдресТаблицыКлючей = Параметры.АдресТаблицыКлючей;
	
	Если ТипРеквизита = "Ссылка" Тогда
		Элементы.СтраницыКнопок.ТекущаяСтраница = Элементы.СтраницыКнопок_СКнопками;
	Иначе
		Элементы.СтраницыКнопок.ТекущаяСтраница = Элементы.СтраницыКнопок_Пустая;
	КонецЕсли;
	
	ПредыдущийТип = ТипРеквизита;
	
	МТИ = Параметры.МТИ;
	
	Для каждого СтрИ Из МТИ Цикл
		
		НоваяСтрока = ТаблицаСсылокШага.Добавить();
		НоваяСтрока.СтрокаИдентификатора = СтрИ.СтрокаИдентификатора;
		НоваяСтрока.Представление        = СтрИ.Представление;
		НоваяСтрока.ТипМД                = СтрИ.ТипМД;
		НоваяСтрока.ИмяМД                = СтрИ.ИмяМД;
		НоваяСтрока.СинонимМД       = СтрИ.СинонимМД;
		НоваяСтрока.ПоискПоЗапросу       = СтрИ.ПоискПоЗапросу;
		НоваяСтрока.ТекстЗапроса         = СтрИ.ТекстЗапроса;
		
		Для каждого СИ Из СтрИ.СтруктураИдентификации Цикл
			
			НовСтр = НоваяСтрока.СтруктураИдентификации.Добавить();
			
			НовСтр.Имя             = СИ.Имя;
			НовСтр.Представление   = СИ.Представление;
			НовСтр.Значение        = СИ.Значение;
			НовСтр.СокрТипЗначения = СИ.СокрТипЗначения;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Сохранить изменения?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСохранении", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Если НЕ ЗавершениеРаботы Тогда
			
			ТекстВопроса = НСтр("ru = 'Сохранить изменения?'");
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСохранении", ЭтотОбъект);
			
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Сведения об ячейке таблицы изменены. При закрытии изменения будут утеряны.'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Применить(Команда)
	
	СтруктураОтвета = ПодготовитьСтруктуруВозвращаемыхДанных();
	
	Если СтруктураОтвета <> Неопределено Тогда
		Модифицированность = Ложь;
		Закрыть(СтруктураОтвета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОбъектИБ(Команда)
	
	ТипМД     = "";
	ИмяМД     = "";
	СинонимМД = "";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СцТ_ПослеВыбораОбъектаИБ", ЭтотОбъект);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипМД"           , ТипМД);
	ПараметрыФормы.Вставить("ИмяМД"           , ИмяМД);
	ПараметрыФормы.Вставить("СинонимМД"       , СинонимМД);
	ПараметрыФормы.Вставить("ПутьКФормам"     , ПутьКФормам);
	ПараметрыФормы.Вставить("ВыбиратьОбъектМД", Истина);
	
	
	Если ТипРеквизита = "Предопределенное" И ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		ПараметрыФормы.Вставить("Предопределенное", ЗначениеРеквизита);
		
	ИначеЕсли ТипРеквизита = "Ссылка" И ЗначениеЗаполнено(ЗначениеРеквизита) Тогда
		
		СтруктураПоиска = Новый Структура("СтрокаИдентификатора", ЗначениеРеквизита);
		НайденныеСтроки = ТаблицаСсылокШага.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НужнаяСтрока = НайденныеСтроки[0];
			ПараметрыФормы.ТипМД     = НужнаяСтрока.ТипМД;
			ПараметрыФормы.ИмяМД     = НужнаяСтрока.ИмяМД;
			ПараметрыФормы.СинонимМД = НужнаяСтрока.СинонимМД;
			
			ПараметрыФормы.Вставить("СтруктураИдентификации", НужнаяСтрока.СтруктураИдентификации);
			
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбораОбъектаИБ = ОткрытьФорму(ПутьКФормам + "ВыборОбъектовИБ", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);
	
	ФормаВыбораОбъектаИБ.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	ФормаВыбораОбъектаИБ.Активизировать();
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураИдентификации(Команда)
	
	СтруктураПоиска = Новый Структура("СтрокаИдентификатора", ЗначениеРеквизита);
	НайденныеСтроки = ТаблицаСсылокШага.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
		л_ТипМД                  = НайденныеСтроки[0].ТипМД;
		л_ИмяМД                  = НайденныеСтроки[0].ИмяМД;
		л_СинонимМД              = НайденныеСтроки[0].СинонимМД;
		л_Представление          = НайденныеСтроки[0].Представление;
		л_Идентификатор          = НайденныеСтроки[0].СтрокаИдентификатора;
		л_СтруктураИдентификации = НайденныеСтроки[0].СтруктураИдентификации;
		л_ПоискПоЗапросу         = НайденныеСтроки[0].ПоискПоЗапросу;
		л_ТекстЗапроса           = НайденныеСтроки[0].ТекстЗапроса;
	Иначе
		л_ТипМД                  = "";
		л_ИмяМД                  = "";
		л_СинонимМД              = "";
		л_Представление          = Представление;
		л_Идентификатор          = ЗначениеРеквизита;
		л_СтруктураИдентификации = Неопределено;
		л_ПоискПоЗапросу         = Ложь;
		л_ТекстЗапроса           = "";
	КонецЕсли;
	
	ПараметрыФормыИдентификации = Новый Структура;
	ПараметрыФормыИдентификации.Вставить("ТипМД"                 , л_ТипМД);
	ПараметрыФормыИдентификации.Вставить("ИмяМД"                 , л_ИмяМД);
	ПараметрыФормыИдентификации.Вставить("Идентификатор"         , л_Идентификатор);
	ПараметрыФормыИдентификации.Вставить("СинонимМД"             , л_СинонимМД);
	ПараметрыФормыИдентификации.Вставить("Представление"         , л_Представление);
	ПараметрыФормыИдентификации.Вставить("СтруктураИдентификации", л_СтруктураИдентификации);
	ПараметрыФормыИдентификации.Вставить("АдресТаблицыКлючей"    , СцТ_ГлавнаяФорма.АдресТаблицыКлючей);
	ПараметрыФормыИдентификации.Вставить("ПоискПоЗапросу"        , л_ПоискПоЗапросу);
	ПараметрыФормыИдентификации.Вставить("ТекстЗапроса"          , л_ТекстЗапроса);
	ПараметрыФормыИдентификации.Вставить("СтруктураПараметров"   , СцТ_ГлавнаяФорма.ГлобальныеПараметры);
	
	ПараметрыФормыИдентификации.Вставить("РежимСовместимости838" , СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ПараметрыФормыИдентификации.Вставить("ФормаОткрытаПодВнешнимУправлением", ФормаОткрытаПодВнешнимУправлением);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеИзмененияСтруктурыИдентификации", ЭтотОбъект);
	
	ФормаИдентификации = ОткрытьФорму(ПутьКФормам + "КлючиИдентификации",
		ПараметрыФормыИдентификации,
		ЭтотОбъект,,,,
		ОписаниеОповещения);
		
	ФормаИдентификации.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	ФормаИдентификации.Активизировать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ТипРеквизитаПриИзменении(Элемент)
	
	Если ТипРеквизита = "Ссылка" Тогда
		Элементы.СтраницыКнопок.ТекущаяСтраница = Элементы.СтраницыКнопок_СКнопками;
	Иначе
		Элементы.СтраницыКнопок.ТекущаяСтраница = Элементы.СтраницыКнопок_Пустая;
	КонецЕсли;
	
	Если ПредыдущийТип <> ТипРеквизита Тогда
		УстановитьТипЗначенияПоля(ТипРеквизита);
		
		Если ТипРеквизита = "Ссылка" Тогда
			// Ссылки еще нет, так как пользователь только еще выбрал тип ссылка
			
			ПараметрыФормыИдентификации = Новый Структура;
			ПараметрыФормыИдентификации.Вставить("ТипМД"                 , "");
			ПараметрыФормыИдентификации.Вставить("ИмяМД"                 , "");
			ПараметрыФормыИдентификации.Вставить("Идентификатор"         , ЗначениеРеквизита);
			ПараметрыФормыИдентификации.Вставить("СинонимМД"             , "");
			ПараметрыФормыИдентификации.Вставить("Представление"         , Представление);
			ПараметрыФормыИдентификации.Вставить("СтруктураИдентификации", Неопределено);
			ПараметрыФормыИдентификации.Вставить("АдресТаблицыКлючей"    , СцТ_ГлавнаяФорма.АдресТаблицыКлючей);
			ПараметрыФормыИдентификации.Вставить("ПоискПоЗапросу"        , Ложь);
			ПараметрыФормыИдентификации.Вставить("ТекстЗапроса"          , "");
			ПараметрыФормыИдентификации.Вставить("СтруктураПараметров"   , СцТ_ГлавнаяФорма.ГлобальныеПараметры);
			
			ПараметрыФормыИдентификации.Вставить("РежимСовместимости838" , СцТ_ГлавнаяФорма.РежимСовместимости838);
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеИзмененияСтруктурыИдентификацииВТаблице", ЭтотОбъект);
			
			ФормаНастройкиИдентификации = ОткрытьФорму(ПутьКФормам + "КлючиИдентификации",
				ПараметрыФормыИдентификации,
				ЭтотОбъект,,,,
				ОписаниеОповещения);
				
			ФормаНастройкиИдентификации.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
			ФормаНастройкиИдентификации.Активизировать();
			
		ИначеЕсли ТипРеквизита = "УникальныйИдентификатор" Тогда
			ЗначениеРеквизита = Строка(Новый УникальныйИдентификатор);
		КонецЕсли;
		
		ПредыдущийТип = ТипРеквизита;
	КонецЕсли;
	
	//СписокВыбораТипа.Добавить("Число"                  , НСтр("ru = 'Число'"));
	//СписокВыбораТипа.Добавить("Строка"                 , НСтр("ru = 'Строка'"));
	//СписокВыбораТипа.Добавить("Дата"                   , НСтр("ru = 'Дата'"));
	//СписокВыбораТипа.Добавить("Булево"                 , НСтр("ru = 'Булево'"));
	//СписокВыбораТипа.Добавить("Предопределенное"       , НСтр("ru = 'Предопределенное значение'"));
	//СписокВыбораТипа.Добавить("Ссылка"                 , НСтр("ru = 'Ссылка (Идентификатор)'"));
	//СписокВыбораТипа.Добавить("УникальныйИдентификатор", НСтр("ru = 'Уникальный идентификатор'"));
	//СписокВыбораТипа.Добавить("СистемноеПеречисление"  , НСтр("ru = 'Системное перечисление'"));
	//СписокВыбораТипа.Добавить("Параметр"               , НСтр("ru = 'Имя параметра'"));

	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура ПослеОтветаНаВопросОСохранении(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// Пробуем сохранить
		СтруктураОтвета = ПодготовитьСтруктуруВозвращаемыхДанных();
		
		Если СтруктураОтвета <> Неопределено Тогда
			Модифицированность = Ложь;
			Закрыть(СтруктураОтвета);
		КонецЕсли;
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Закрытие без сохранения
		Модифицированность = Ложь;
		Закрыть();
		
	Иначе
		// Вообще ничего не делаем
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияСтруктурыИдентификацииВТаблице(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение данных этой формы
	Представление     = Результат.Представление;
	ЗначениеРеквизита = Результат.Идентификатор;
	
	// Регистрация в структуре идентификации
	СтруктураПоиска = Новый Структура("СтрокаИдентификатора", Результат.Идентификатор);
	НайденныеСтроки = ТаблицаСсылокШага.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НужнаяСтрока = НайденныеСтроки[0];
	Иначе
		НужнаяСтрока = ТаблицаСсылокШага.Добавить();
		НужнаяСтрока.СтрокаИдентификатора = Результат.Идентификатор;
	КонецЕсли;
	
	НужнаяСтрока.ТипМД          = Результат.ТипМД;
	НужнаяСтрока.ИмяМД          = Результат.ИмяМД;
	НужнаяСтрока.СинонимМД = Результат.СинонимМД;
	НужнаяСтрока.Представление  = Результат.Представление;
	
	НужнаяСтрока.СтруктураИдентификации.Очистить();
	Для каждого СтрИдент Из Результат.СтруктураИдентификации Цикл
		НовыйКлюч = НужнаяСтрока.СтруктураИдентификации.Добавить();
		НовыйКлюч.Имя             = СтрИдент.Имя;
		НовыйКлюч.Значение        = СтрИдент.Значение;
		НовыйКлюч.СокрТипЗначения = СтрИдент.СокрТипЗначения;
	КонецЦикла;
	
	НужнаяСтрока.ПоискПоЗапросу  = Результат.ПоискПоЗапросу;
	НужнаяСтрока.ТекстЗапроса    = Результат.ТекстЗапроса;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ПослеВыбораОбъектаИБ(ВозвращенноеЗначение, ДопПараметры) Экспорт
	
	Если ВозвращенноеЗначение <> Неопределено Тогда
		СтруктураДанных = ОбработатьВыборНаСервере(ВозвращенноеЗначение);
		
		ТипРеквизита      = СтруктураДанных.ТипЗначения;
		ЗначениеРеквизита = СтруктураДанных.Значение;
		Представление     = СтруктураДанных.Представление;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеИзмененияСтруктурыИдентификации(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение данных этой формы
	Представление     = Результат.Представление;
	ЗначениеРеквизита = Результат.Идентификатор;
	
	// Регистрация в структуре идентификации
	СтруктураПоиска = Новый Структура("СтрокаИдентификатора", Результат.Идентификатор);
	НайденныеСтроки = ТаблицаСсылокШага.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
		НужнаяСтрока = НайденныеСтроки[0];
	Иначе
		НужнаяСтрока = ТаблицаСсылокШага.Добавить();
		НужнаяСтрока.СтрокаИдентификатора = Результат.Идентификатор;
	КонецЕсли;
	
	НужнаяСтрока.ТипМД          = Результат.ТипМД;
	НужнаяСтрока.ИмяМД          = Результат.ИмяМД;
	НужнаяСтрока.СинонимМД = Результат.СинонимМД;
	НужнаяСтрока.Представление  = Результат.Представление;
	
	НужнаяСтрока.СтруктураИдентификации.Очистить();
	Для каждого СтрИдент Из Результат.СтруктураИдентификации Цикл
		НовыйКлюч = НужнаяСтрока.СтруктураИдентификации.Добавить();
		НовыйКлюч.Имя             = СтрИдент.Имя;
		НовыйКлюч.Значение        = СтрИдент.Значение;
		НовыйКлюч.СокрТипЗначения = СтрИдент.СокрТипЗначения;
	КонецЦикла;
	
	НужнаяСтрока.ПоискПоЗапросу  = Результат.ПоискПоЗапросу;
	НужнаяСтрока.ТекстЗапроса    = Результат.ТекстЗапроса;
	
	// При необходимости нужно изменить представление
	Представление = Результат.Представление;
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаКлиенте
Функция ПодготовитьСтруктуруВозвращаемыхДанных()
	
	СтруктураОтвета = Новый Структура;
	
	СтруктураОтвета.Вставить("Имя"          , ИмяРеквизита);
	СтруктураОтвета.Вставить("Синоним"      , СинонимРевизита);
	СтруктураОтвета.Вставить("ТипРеквизита" , ТипРеквизита);
	СтруктураОтвета.Вставить("Значение"     , ЗначениеРеквизита);
	СтруктураОтвета.Вставить("Представление", Представление);
	СтруктураОтвета.Вставить("МТИ", УпаковатьТаблицуСсылокШага());
	
	Возврат СтруктураОтвета;
	
КонецФункции

&НаКлиенте
Функция УпаковатьТаблицуСсылокШага()
	
	// МТИ - массив таблицы идентификации
	МТИ = Новый Массив;
	
	Для каждого СтрТабл Из ТаблицаСсылокШага Цикл
		
		// МСИ - массив структур идентификации
		МСИ = Новый Массив;
		СтрТабл.СтруктураИдентификации.Сортировать("Имя");
		Для каждого СтрИдентификации Из СтрТабл.СтруктураИдентификации Цикл
			// СИ - структура идентификации
			СИ = Новый Структура;
			СИ.Вставить("Имя"            , СтрИдентификации.Имя);
			СИ.Вставить("Представление"  , СтрИдентификации.Представление);
			СИ.Вставить("Значение"       , СтрИдентификации.Значение);
			СИ.Вставить("СокрТипЗначения", СтрИдентификации.СокрТипЗначения);
			МСИ.Добавить(СИ);
		КонецЦикла;
		
		СтрСсылки = Новый Структура;
		СтрСсылки.Вставить("СтруктураИдентификации", МСИ);
		СтрСсылки.Вставить("СтрокаИдентификатора"  , СтрТабл.СтрокаИдентификатора);
		СтрСсылки.Вставить("Представление"         , СтрТабл.Представление);
		СтрСсылки.Вставить("ТипМД"                 , СтрТабл.ТипМД);
		СтрСсылки.Вставить("ИмяМД"                 , СтрТабл.ИмяМД);
		СтрСсылки.Вставить("СинонимМД"        , СтрТабл.СинонимМД);
		СтрСсылки.Вставить("ПоискПоЗапросу"        , СтрТабл.ПоискПоЗапросу);
		СтрСсылки.Вставить("ТекстЗапроса"          , СтрТабл.ТекстЗапроса);
		
		МТИ.Добавить(СтрСсылки);
		
	КонецЦикла;
	
	Возврат МТИ;
	
КонецФункции

&НаКлиенте
Процедура УстановитьТипЗначенияПоля(ТекущийТип)
	
	Если ТекущийТип = "Число" Тогда
		ОписаниеТипов = Новый ОписаниеТипов("Число");
		
	ИначеЕсли ТекущийТип = "Дата" Тогда
		ОписаниеТипов = Новый ОписаниеТипов("Дата");
		
	ИначеЕсли ТекущийТип = "Булево" Тогда
		ОписаниеТипов = Новый ОписаниеТипов("Булево");
		
	Иначе
		
		ОписаниеТипов = Новый ОписаниеТипов("Строка");
		
	КонецЕсли;
	
	ЗначениеРеквизита = ОписаниеТипов.ПривестиЗначение(ЗначениеРеквизита);
	
	Элементы.ЗначениеРеквизита.ОграничениеТипа = ОписаниеТипов;
	
	Элементы.ЗначениеРеквизита.ВыбиратьТип     = Ложь;
	Элементы.ЗначениеРеквизита.КнопкаВыбора    = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьВыборНаСервере(ВозвращеннаяСтруктураДанных)
	
	СтруктураСтроки = Новый Структура;
	
	Если ВозвращеннаяСтруктураДанных.ТипМД = "Перечисления" Тогда
		
		МассивЗначений = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().ЗначенияПеречисления;
		НужноеИмя = "";
		Для каждого ЗначениеПеречисления Из МассивЗначений ЦИкл
			ПолноеИмяПредопределенного = "Перечисление." + ВозвращеннаяСтруктураДанных.ИмяМД + "." + ЗначениеПеречисления.Имя;
			Если ПредопределенноеЗначение(ПолноеИмяПредопределенного) = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение Тогда
				НужноеИмя = ПолноеИмяПредопределенного;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураСтроки.Вставить("ТипЗначения"  , "Предопределенное");
		СтруктураСтроки.Вставить("Значение"     , НужноеИмя);
		СтруктураСтроки.Вставить("Представление", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
		
	Иначе
		Попытка
			Предопределенное = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Предопределенное;
		Исключение
			Предопределенное = Ложь;
		КонецПопытки;
		
		Если Предопределенное Тогда
			
			ИмяМ = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().Имя;
			
			
			Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "Справочник";
				
			ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "Документ";
				
			ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "ПланСчетов";
				
			ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "ПланВидовХарактеристик";
				
			ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "ПланВидовРасчета";
				
			ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "Перечисление";
				
			ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "БизнесПроцесс";
				
			ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
				ТМД = "Задача";
				
			Иначе
				ТМД = "";
				
			КонецЕсли;
			
			Если ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Пустая() Тогда
				ВнутрЗначение = ТМД + "." + ИмяМ + ".ПустоеЗначение";
			Иначе
				МассивИменПредопределенных = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().ПолучитьИменаПредопределенных();
				НужноеИмя = "";
				Для каждого ИмяПредопределенного Из МассивИменПредопределенных ЦИкл
					ПолноеИмяПредопределенного = ТМД + "." + ИмяМ + "." + ИмяПредопределенного;
					Если ПредопределенноеЗначение(ПолноеИмяПредопределенного) = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение Тогда
						НужноеИмя = ПолноеИмяПредопределенного;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				ВнутрЗначение = НужноеИмя;
			КонецЕсли;
			ТипЗначения = "Предопределенное";
			
			СтруктураСтроки.Вставить("ТипЗначения"  , "Предопределенное");
			СтруктураСтроки.Вставить("Значение"     , ВнутрЗначение);
			СтруктураСтроки.Вставить("Представление", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
			
		Иначе
			МодульОбработки = РеквизитФормыВЗначение("Объект");
			
			ИдентификаторСсылки = Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.УникальныйИдентификатор());
			МассивИдентификации = МодульОбработки.СцТ_ПреобразоватьДанныеФормыТаблицыСсылокШагаВСтруктуру(ТаблицаСсылокШага);
			МодульОбработки.СцТ_ДобавитьИлиИзменитьСтруктуруИдентификации(
				ВозвращеннаяСтруктураДанных.ВыбранноеЗначение,
				МассивИдентификации,
				ВозвращеннаяСтруктураДанных.ТипМД,
				ВозвращеннаяСтруктураДанных.ИмяМД,
				ВозвращеннаяСтруктураДанных.СинонимМД,
				АдресТаблицыКлючей);
				
			МодульОбработки.СцТ_ЗаполнитьТаблицуИдентификацииФормыПоДаннымМассива(ТаблицаСсылокШага, МассивИдентификации);
				
			СтруктураСтроки.Вставить("ТипЗначения"  , "Ссылка");
			СтруктураСтроки.Вставить("Значение"     , ИдентификаторСсылки);
			СтруктураСтроки.Вставить("Представление", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураСтроки;
	
КонецФункции

#КонецОбласти





