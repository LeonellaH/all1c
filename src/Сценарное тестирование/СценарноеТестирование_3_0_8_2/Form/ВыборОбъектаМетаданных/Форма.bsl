
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	ЗаполнитьДерево_НаСервере();
	
	НужнаяСтрока = Неопределено;
	Если НЕ ПустаяСтрока(Параметры.ТипМД) Тогда
		Для каждого УзелТипов Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
			Если УзелТипов.ТипМД = Параметры.ТипМД Тогда
				НужнаяСтрока = УзелТипов;
				Прервать;
			КонецЕсли;
		КонецЦИкла;
		
		Если НужнаяСтрока <> Неопределено И НЕ ПустаяСтрока(Параметры.ИмяМД) Тогда
			Для каждого УзелОМД Из НужнаяСтрока.ПолучитьЭлементы() Цикл
				Если УзелОМД.ИмяМД = Параметры.ИмяМД Тогда
					НужнаяСтрока = УзелОМД;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если НужнаяСтрока <> Неопределено Тогда
			Элементы.ДеревоМетаданных.ТекущаяСтрока = НужнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.ДеревоМетаданных.ТекущаяСтрока <> Неопределено Тогда
		Элементы.ДеревоМетаданных.Развернуть(Элементы.ДеревоМетаданных.ТекущаяСтрока);
	КонецЕсли;
	
	ТекущийЭлемент = Элементы.ДеревоМетаданных;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоМетаданныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = ДеревоМетаданных.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОбработкаВыбора(ДанныеСтроки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура РаскрытьВсеУзлы(Команда)
	
	Для каждого УзелДерева Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
		Элементы.ДеревоМетаданных.Развернуть(УзелДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеУзлы(Команда)
	
	Для каждого УзелДерева Из ДеревоМетаданных.ПолучитьЭлементы() Цикл
		Элементы.ДеревоМетаданных.Свернуть(УзелДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьМД(Команда)
	
	ТекДанные = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаВыбора(ТекДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДерево_НаСервере()
	
	ТаблицаОбъектовМетаданных = Новый ТаблицаЗначений;
	ТаблицаОбъектовМетаданных.Колонки.Добавить("Имя"     , Новый ОписаниеТипов("Строка"));
	ТаблицаОбъектовМетаданных.Колонки.Добавить("Синоним" , Новый ОписаниеТипов("Строка"));
	ТаблицаОбъектовМетаданных.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Число"));
	
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "Справочники"            , "Справочники"             , 0);
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "Документы"              , "Документы"               , 1);
	
	Если Параметры.ОтображатьПеречисления Тогда
		ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "Перечисления"       , "Перечисления"            , 2);
	КонецЕсли;
	
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "ПланыВидовХарактеристик", "Планы видов харктеристик", 3);
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "ПланыСчетов"            , "Планы счетов"            , 4);
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "ПланыВидовРасчета"      , "Планы видов расчета"     , 5);
	
	Если Параметры.ОтображатьРегистры Тогда
		ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "РегистрыСведений"   , "Регистры сведений"       , 6);
	КонецЕсли;
	
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "БизнесПроцессы"         , "Бизнес-процессы"         , 7);
	ДобавитьВТаблицу(ТаблицаОбъектовМетаданных, "Задачи"                 , "Задачи"                  , 8);
	
	// У дерева формы нет метода сортировки
	ДеревоНаСервере = РеквизитФормыВЗначение("ДеревоМетаданных");
	ДеревоНаСервере.Строки.Очистить();
	
	Для каждого СтрТаблицы Из ТаблицаОбъектовМетаданных Цикл
		УзелМД = ДобавитьУзелДерева(ДеревоНаСервере, СтрТаблицы.Имя, "", СтрТаблицы.Синоним, СтрТаблицы.Картинка, Истина);
		
		Для каждого ОМ Из Метаданные[СтрТаблицы.Имя] Цикл
			Узел = ДобавитьУзелДерева(УзелМД, СтрТаблицы.Имя, ОМ.Имя, ОМ.Синоним, СтрТаблицы.Картинка);
			
			Если СтрТаблицы.Имя = "РегистрыСведений" И ОМ.РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
				Узел.ПодчиненРегистратору = Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		УзелМД.Строки.Сортировать("ОбъектМетаданных");
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоНаСервере, "ДеревоМетаданных");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьВТаблицу(Таблица, Имя, Синоним, НомерКартинки)
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.Имя      = Имя;
	НоваяСтрока.Синоним  = Синоним;
	НоваяСтрока.Картинка = НомерКартинки;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьУзелДерева(УзелДерева, ТипМД, ИмяМД, Синоним, Картинка, ЭтоУзел = Ложь)
	
	НовыйУзел = УзелДерева.Строки.Добавить();
	НовыйУзел.ОбъектМетаданных = Синоним;
	НовыйУзел.ТипМД            = ТипМД;
	НовыйУзел.ИмяМД            = ИмяМД;
	НовыйУзел.СинонимМД        = Синоним;
	НовыйУзел.ЭтоУзел          = ЭтоУзел;
	НовыйУзел.Картинка         = Картинка;
	
	Возврат НовыйУзел;
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	// Оформление групп
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоМетаданных");

	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоМетаданных.ЭтоУзел");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Элементы.ДеревоМетаданных.Шрифт,,, Истина));
	ЭлементОформления.Использование = Истина;
	
	// Оформление подчиненных регистратору
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ДеревоМетаданных");

	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДеревоМетаданных.ПодчиненРегистратору");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", Новый Цвет(125,125,125));
	ЭлементОформления.Использование = Истина;

	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаВыбора(ДанныеСтроки)
	
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ЭтоУзел Тогда
		ТекстПредупреждения = НСтр("ru = 'Уточните свой выбор, выберите объект, а не группу'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ДанныеСтроки.ПодчиненРегистратору Тогда
		ТекстПредупреждения = НСтр("ru = 'Для работы с регистрами сведений, подчиненными регистратору используются другие механизмы, например проверка движений.
										 |Выберите другой регистр сведений");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("ТипМД"    , ДанныеСтроки.ТипМД);
	ВозвращаемаяСтруктура.Вставить("ИмяМД"    , ДанныеСтроки.ИмяМД);
	ВозвращаемаяСтруктура.Вставить("СинонимМД", ДанныеСтроки.СинонимМД);
	
	Закрыть(ВозвращаемаяСтруктура);
	
КонецПроцедуры


#КонецОбласти

