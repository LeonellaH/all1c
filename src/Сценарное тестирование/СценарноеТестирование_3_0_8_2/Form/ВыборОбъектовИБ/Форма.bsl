

#Область Переменные

// Форма - владелец текущей формы (для краткости и наглядности вместо "ЭтаФорма.ВладелецФормы")
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;

#КонецОбласти


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	ТипМД     = Параметры.ТипМД;
	ИмяМД     = Параметры.ИмяМД;
	СинонимМД = Параметры.СинонимМД;
	
	ЗначениеСсылки = Неопределено;
	
	// Определение параметров по предопределенному значению
	Если Параметры.Свойство("Предопределенное") Тогда
		Попытка
			ЗначениеСсылки = ПредопределенноеЗначение(Параметры.Предопределенное);
		Исключение
		КонецПопытки;
		
		Если ЗначениеСсылки <> Неопределено Тогда
			Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "Справочники";
				
			ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "Документы";
				
			ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "ПланыСчетов";
				
			ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "ПланыВидовХарактеристик";
				
			ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "ПланыВидовРасчета";
				
			ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "Перечисления";
				
			ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "БизнесПроцессы";
				
			ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипЗнч(ЗначениеСсылки)) Тогда
				ТипМД = "Задачи";
				
			Иначе
				ТМД = "";
				
			КонецЕсли;
			
			ИмяМД     = ЗначениеСсылки.Метаданные().Имя;
			СинонимМД = ЗначениеСсылки.Метаданные().Синоним;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Определение текущего значения по запросу
	Если Параметры.Свойство("СтруктураИдентификации") Тогда
		ОбъектНаСервере = РеквизитФормыВЗначение("Объект");
		
		ТекстЗапроса = ОбъектНаСервере.СцТ_ПолучитьТекстЗапросПоТаблицеИдентификации(
			ТМД,
			ИмяМД,
			Параметры.СтруктураИдентификации.Выгрузить());
			
		ТаблицаНайденныхСсылок = ОбъектНаСервере.СцТ_ПолучитьОбъектыПоТаблицеИдентификации(
			ТекстЗапроса);
		
		Если ТаблицаНайденныхСсылок <> Неопределено И ТаблицаНайденныхСсылок.Количество() > 0 Тогда
			ЗначениеСсылки = ТаблицаНайденныхСсылок[0].Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	// Определение текущего значения по ссылке
	Если Параметры.Свойство("ТекущаяСсылка") Тогда
		ЗначениеСсылки = Параметры.ТекущаяСсылка;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(СинонимМД) Тогда
		ПредставлениеОбъектаМД = СинонимМД;
	ИначеЕсли НЕ ПустаяСтрока(ИмяМД) Тогда
		ПредставлениеОбъектаМД = ИмяМД;
	Иначе
		ПредставлениеОбъектаМД = НСтр("ru = 'Объект метаданных еще не выбран'");
	КонецЕсли;
	
	Элементы.ИзменитьОбъектМД.Доступность = Параметры.ВыбиратьОбъектМД;
	
	// Для совместимости с предыдущими версиями
	Если Параметры.Свойство("ЗначениеПеречисления") Тогда
		Если ТипЗнч(Параметры.ЗначениеПеречисления) = Тип("Строка") Тогда
			
			Попытка
				ПроверочнаяСсылка = ПредопределенноеЗначение(Параметры.ЗначениеПеречисления);
			Исключение
				ПроверочнаяСсылка = Неопределено;
			КонецПопытки;
				
			Если Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ПроверочнаяСсылка)) Тогда
				
				ТипМД     = "Перечисления";
				ИмяМД     = ПроверочнаяСсылка.Метаданные().Имя;
				СинонимМД = ПроверочнаяСсылка.Метаданные().Синоним;
				
				ЗначениеСсылки = ПроверочнаяСсылка;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	
	ОтобразитьДанные_НаСервере();
	
	Если ЗначениеСсылки <> Неопределено Тогда
		Элементы.Список.ТекущаяСтрока = ЗначениеСсылки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СцТ_Выбрать(Команда)
	
	Если ПустаяСтрока(ТипМД) ИЛИ ПустаяСтрока(ИмяМд) Тогда
		// Переопределениие действия, если еще не выбран объект МД
		// Выбирать можно также только ссылки
		ИнициализироватьВыборОбъектаМД();
		
	Иначе
		// Штатное действие
		Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выбрано значение'"));
			Возврат;
		КонецЕсли;
		
		ВыполнитьВыбор(Элементы.Список.ТекущаяСтрока);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ОбновитьОтображениеДанныхНаФорме();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьОбъектМД(Команда)
	
	// Когда выбираются записи регистров сведений, то эта кнопка недоступна
	
	ИнициализироватьВыборОбъектаМД();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьВыбор(ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти


&НаСервере
Процедура ОтобразитьДанные_НаСервере()
	
	Если ПустаяСтрока(ТипМД) ИЛИ ПустаяСтрока(ИмяМд) Тогда
		Элементы.СтраницыСписка.ТекущаяСтраница = Элементы.СтраницыСписка_Пустая;
		//Элементы.ИзменитьОбъектМД.Заголовок = НСтр("ru = 'Выбрать объект метаданных'");
		
	Иначе
		
		Элементы.СтраницыСписка.ТекущаяСтраница = Элементы.СтраницыСписка_Заполненная;
		//Элементы.ИзменитьОбъектМД.Заголовок = НСтр("ru = 'Изменить'");
		
		ЗаполнитьТаблицуРеквизитов();
		ОчиститьОтборыИСортировки();
		
		ОбновитьОтображениеДанныхНаФорме();
		
		Если ТипМД = "РегистрыСведений" Тогда
			Элементы.СписокВыбратьПустуюСсылку.Видимость = Ложь;
		Иначе
			Элементы.СписокВыбратьПустуюСсылку.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРеквизитов()
	
	ОтображаемыеРеквизиты.Очистить();
	
	Если ПустаяСтрока(ТипМД) ИЛИ ПустаяСтрока(ИмяМд) Тогда
		Возврат;
	КонецЕсли;
	
	// Заполнение таблицы реквизитов значениями объекта метаданных
	МетаданныеОбъекта = Метаданные[ТипМД][ИмяМД];
	
	Если ТипМД = "Справочники" Тогда
		
		ТипМДЕдЧисло = "Справочник";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		
		Если МетаданныеОбъекта.ДлинаКода > 0 Тогда
			ДобавитьРеквизитВТаблицу("Код", НСтр("ru='Код'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.ДлинаНаименования > 0 Тогда
			ДобавитьРеквизитВТаблицу("Наименование", НСтр("ru='Наименование'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.Иерархический Тогда
			ДобавитьРеквизитВТаблицу("Родитель", НСтр("ru='Родитель'"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(МетаданныеОбъекта.Владельцы) Тогда
			ДобавитьРеквизитВТаблицу("Владелец", НСтр("ru='Владелец'"), Истина, Истина);
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "Перечисления" Тогда
		
		ТипМДЕдЧисло = "Перечисление";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		
	ИначеЕсли ТипМД = "Документы" Тогда
		
		ТипМДЕдЧисло = "Документ";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		Если МетаданныеОбъекта.ДлинаНомера > 0 Тогда
			ДобавитьРеквизитВТаблицу("Номер", НСтр("ru='Номер'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		ДобавитьРеквизитВТаблицу("Проведен"       , НСтр("ru='Проведен'"));
		ДобавитьРеквизитВТаблицу("Дата"           , НСтр("ru='Дата'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "ПланыВидовХарактеристик" Тогда
		
		ТипМДЕдЧисло = "ПланВидовХарактеристик";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		
		Если МетаданныеОбъекта.ДлинаКода > 0 Тогда
			ДобавитьРеквизитВТаблицу("Код", НСтр("ru='Код'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.ДлинаНаименования > 0 Тогда
			ДобавитьРеквизитВТаблицу("Наименование", НСтр("ru='Наименование'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.Иерархический Тогда
			ДобавитьРеквизитВТаблицу("Родитель", НСтр("ru='Родитель'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "ПланыВидовРасчета" Тогда
		
		ТипМДЕдЧисло = "ПланВидовРасчета";
		
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		Если МетаданныеОбъекта.ДлинаКода > 0 Тогда
			ДобавитьРеквизитВТаблицу("Код", НСтр("ru='Код'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.ДлинаНаименования > 0 Тогда
			ДобавитьРеквизитВТаблицу("Наименование", НСтр("ru='Наименование'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "ПланыСчетов" Тогда
		
		ТипМДЕдЧисло = "ПланСчетов";
		
		ДобавитьРеквизитВТаблицу("Ссылка", МетаданныеОбъекта.Синоним, Истина, Истина);
		Если МетаданныеОбъекта.ДлинаКода > 0 Тогда
			ДобавитьРеквизитВТаблицу("Код", НСтр("ru='Код'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.ДлинаНаименования > 0 Тогда
			ДобавитьРеквизитВТаблицу("Наименование", НСтр("ru='Наименование'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
		Для каждого ПризнакУчета Из МетаданныеОбъекта.ПризнакиУчета Цикл
			ДобавитьРеквизитВТаблицу(ПризнакУчета.Имя, ПризнакУчета.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "РегистрыСведений" Тогда
		
		ТипМДЕдЧисло = "РегистрСведений";
		
		Если МетаданныеОбъекта.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический
			И МетаданныеОбъекта.ПериодичностьРегистраСведений <> Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.ПозицияРегистратора Тогда
			ДобавитьРеквизитВТаблицу("Период", НСтр("ru='Период'"), Истина, Истина);
		КонецЕсли;
		
		Если МетаданныеОбъекта.РежимЗаписи <> Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.Независимый Тогда
			ДобавитьРеквизитВТаблицу("Регистратор", НСтр("ru='Регистратор'"), Истина, Истина);
			ДобавитьРеквизитВТаблицу("Активность" , НСтр("ru='Активность'") , Истина, Истина);
			ДобавитьРеквизитВТаблицу("НомерСтроки", НСтр("ru='НомерСтроки'"), Истина, Истина);
		КонецЕсли;
		
		Для каждого Ресурс Из МетаданныеОбъекта.Ресурсы Цикл
			ДобавитьРеквизитВТаблицу(Ресурс.Имя, Ресурс.Синоним);
		КонецЦикла;
		
		Для каждого Измерение Из МетаданныеОбъекта.Измерения Цикл
			ДобавитьРеквизитВТаблицу(Измерение.Имя, Измерение.Синоним, Истина, Истина);
		КонецЦикла;
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "РегистрыНакопления"
		ИЛИ   ТипМД = "РегистрыБухгалтерии"
		ИЛИ   ТипМД = "РегистрыРасчета" Тогда
		
		ТипМДЕдЧисло = "";
		
		ДобавитьРеквизитВТаблицу("ВидДвижения", НСтр("ru='Вид движения'"), Истина, Истина);
		ДобавитьРеквизитВТаблицу("Период"     , НСтр("ru='Период'")      , Истина, Истина);
		ДобавитьРеквизитВТаблицу("Регистратор", НСтр("ru='Регистратор'") , Истина, Истина);
		ДобавитьРеквизитВТаблицу("Активность" , НСтр("ru='Активность'")  , Истина, Истина);
		ДобавитьРеквизитВТаблицу("НомерСтроки", НСтр("ru='Номер cтроки'"), Истина, Истина);
		
		Для каждого Ресурс Из МетаданныеОбъекта.Ресурсы Цикл
			ДобавитьРеквизитВТаблицу(Ресурс.Имя, Ресурс.Синоним);
		КонецЦикла;
		
		Для каждого Измерение Из МетаданныеОбъекта.Измерения Цикл
			ДобавитьРеквизитВТаблицу(Измерение.Имя, Измерение.Синоним, Истина, Истина);
		КонецЦикла;
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "ЖурналыДокументов" Тогда
		
		ТипМДЕдЧисло = "";
		
		Для каждого Графа Из МетаданныеОбъекта.Графы Цикл
			ДобавитьРеквизитВТаблицу(Графа.Имя, Графа.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "Задачи" Тогда
		
		ТипМДЕдЧисло = "Задача";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", НСтр("ru='Ссылка'"), Истина, Истина);
		Если МетаданныеОбъекта.ДлинаНомера > 0 Тогда
			ДобавитьРеквизитВТаблицу("Номер", НСтр("ru='Номер'"));
		КонецЕсли;
		
		Если МетаданныеОбъекта.ДлинаНаименования > 0 Тогда
			ДобавитьРеквизитВТаблицу("Наименование", НСтр("ru='Наименование'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("Дата"           , НСтр("ru='Дата'"));
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		ДобавитьРеквизитВТаблицу("БизнесПроцесс"  , НСтр("ru='Бизнес-процесс'"));
		ДобавитьРеквизитВТаблицу("ТочкаМаршрута"  , НСтр("ru='Точка маршрута'"));
		ДобавитьРеквизитВТаблицу("Выполнена"      , НСтр("ru='Выполнена'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
		Для каждого Реквизит Из МетаданныеОбъекта.РеквизитыАдресации Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "БизнесПроцессы" Тогда
		
		ТипМДЕдЧисло = "БизнесПроцесс";
		
		// Свойства
		ДобавитьРеквизитВТаблицу("Ссылка", НСтр("ru='Ссылка'"), Истина, Истина);
		Если МетаданныеОбъекта.ДлинаНомера > 0 Тогда
			ДобавитьРеквизитВТаблицу("Номер", НСтр("ru='Номер'"));
		КонецЕсли;
		
		ДобавитьРеквизитВТаблицу("Дата"           , НСтр("ru='Дата'"));
		ДобавитьРеквизитВТаблицу("ПометкаУдаления", НСтр("ru='Пометка удаления'"));
		ДобавитьРеквизитВТаблицу("Стартован"      , НСтр("ru='Стартован'"));
		ДобавитьРеквизитВТаблицу("Завершен"       , НСтр("ru='Завершен'"));
		
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	ИначеЕсли ТипМД = "Отчеты"
		ИЛИ ТипМД = "Обработки" Тогда
		
		// Свойств нет
		Для каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
			ДобавитьРеквизитВТаблицу(Реквизит.Имя, Реквизит.Синоним);
		КонецЦикла;
		
	КонецЕсли;
	
	ОтображаемыеРеквизиты.Сортировать("Основной Убыв, Синоним");
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьОтборыИСортировки()
	
	ОтборыДинамическогоСписка = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Количество = ОтборыДинамическогоСписка.Количество();
	
	Если Количество > 0 Тогда
		Для ОбрИндекс = 1 По Количество Цикл
			ЭлементОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы[Количество - ОбрИндекс];
			
			ИдентификаторПользовательскойНастройки = ЭлементОтбора.ИдентификаторПользовательскойНастройки;
			Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Удалить(ЭлементОтбора);
			НастройкаВладельца =
				Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторПользовательскойНастройки);
			Если НастройкаВладельца <> Неопределено Тогда
				Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Удалить(НастройкаВладельца);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Для каждого ПользовательскаяНастройка Из Список.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Попытка
			Количество = ПользовательскаяНастройка.Элементы.Количество();
		Исключение
			Продолжить;
		КонецПопытки;
		
		Если Количество > 0 Тогда
			Для ОбрИндекс = 1 По Количество Цикл
				
				ЭлементОтбора = ПользовательскаяНастройка.Элементы[Количество - ОбрИндекс];
				
				ПользовательскаяНастройка.Элементы.Удалить(ЭлементОтбора);
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитВТаблицу(Имя, Синоним, Отметка = Ложь, Основной = Ложь)
	
	НоваяСтрока = ОтображаемыеРеквизиты.Добавить();
	НоваяСтрока.Имя      = Имя;
	НоваяСтрока.Синоним  = Синоним;
	НоваяСтрока.Отметка  = (Отметка ИЛИ Основной);
	НоваяСтрока.Основной = Основной;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтображениеДанныхНаФорме()
	
	Если ПустаяСтрока(ТипМД) ИЛИ ПустаяСтрока(ИмяМд) ИЛИ ОтображаемыеРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМД = ТипМДЕдЧисло + "." + ИмяМД;
	
	СтарыйМассивКолонок = СписокКолонок.ВыгрузитьЗначения();
	СписокКолонок.Очистить();
	Поля = "";
	
	Для каждого СтрокаТаблицы Из ОтображаемыеРеквизиты Цикл
		Если НЕ СтрокаТаблицы.Отметка Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(Поля) Тогда
			Поля = Поля + "," + " ";
		КонецЕсли;
		
		Поля = Поля + СтрокаТаблицы.Имя;
		
		СписокКолонок.Добавить(СтрокаТаблицы.Имя, СтрокаТаблицы.Синоним);
		
	КонецЦикла;
	
	Список.ОсновнаяТаблица = "";
	
	// Новый запрос
	ТекстЗапроса = "Выбрать %2 Из %1";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%1", ОбъектМД);
	Список.ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%2", Поля);
	
	// Новая основная таблица
	Список.ОсновнаяТаблица = ОбъектМД;
	
	// Удаление старых колонок таблицы
	Для каждого ИмяУдаляемогоЭлемента Из СтарыйМассивКолонок Цикл
		НайденыйЭлемент = Элементы.Найти("Сп_" + ИмяУдаляемогоЭлемента);
		Если НайденыйЭлемент <> Неопределено Тогда
			Элементы.Удалить(НайденыйЭлемент);
		КонецЕсли;
	КонецЦикла;
	
	// Удаление элемента по-умолчанию
	НайденыйЭлемент = Элементы.Найти("СписокПоле1");
	Если СписокКолонок.Количество() > 0 И НайденыйЭлемент <> Неопределено И НайденыйЭлемент.Видимость Тогда
		НайденыйЭлемент.Видимость = Ложь;
	ИначеЕсли СписокКолонок.Количество() = 0 И НайденыйЭлемент <> Неопределено И НЕ НайденыйЭлемент.Видимость Тогда
		НайденыйЭлемент.Видимость = Истина;
	КонецЕсли;
	
	// Добавление новых колонок
	Для каждого ЭлементСписка Из СписокКолонок Цикл
		КолонкаТаблицы = Элементы.Добавить("Сп_" + ЭлементСписка.Значение, Тип("ПолеФормы"), Элементы.Список);
		КолонкаТаблицы.ПутьКДанным = "Список." + ЭлементСписка.Значение;
		КолонкаТаблицы.Заголовок   = ЭлементСписка.Представление;
		
	КонецЦикла;
	
	Элементы.Список.Обновить();
	Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	
КонецПроцедуры


&НаКлиенте
Процедура ПослеВыбораОбъектаМетаданныхСсылки(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено тогда
		Возврат;
	КонецЕсли;
	
	МД_Изменены = (ТипМД <> Результат.ТипМД ИЛИ ИмяМД <> Результат.ИмяМД);
	
	ТипМД     = Результат.ТипМД;
	ИмяМД     = Результат.ИмяМД;
	СинонимМД = Результат.СинонимМД;
	
	Если МД_Изменены Тогда
		Если НЕ ПустаяСтрока(СинонимМД) Тогда
			ПредставлениеОбъектаМД = СинонимМД;
		ИначеЕсли НЕ ПустаяСтрока(ИмяМД) Тогда
			ПредставлениеОбъектаМД = ИмяМД;
		Иначе
			ПредставлениеОбъектаМД = НСтр("ru = 'Объект метаданных еще не выбран'");
		КонецЕсли;
		
		ОтобразитьДанные_НаСервере();
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыполнитьВыбор(ТекСтрока)
	
	Если ТекСтрока = НСтр("ru = '<Нет данных>'") Тогда
		Закрыть();
	КонецЕсли;
	
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("ТипМД"            , ТипМД);
	ВозвращаемаяСтруктура.Вставить("ИмяМД"            , ИмяМД);
	ВозвращаемаяСтруктура.Вставить("СинонимМД"        , СинонимМД);
	ВозвращаемаяСтруктура.Вставить("ВыбранноеЗначение", ТекСтрока);
	
	Закрыть(ВозвращаемаяСтруктура);
	
КонецПроцедуры


&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// 1
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ОтображаемыеРеквизиты");
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтображаемыеРеквизиты.Основной");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(Элементы.ОтображаемыеРеквизиты.Шрифт,,, Истина));
	ЭлементОформления.Использование = Истина;
	
	// 2
	ЭлементОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ОтображаемыеРеквизиты");
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОтображаемыеРеквизиты.Основной");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементОформления.Использование = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнициализироватьВыборОбъектаМД()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ТипМД"                 , ТипМД);
	ПараметрыФормы.Вставить("ИмяМД"                 , ИмяМД);
	ПараметрыФормы.Вставить("ОтображатьПеречисления", Истина);
	ПараметрыФормы.Вставить("ОтображатьРегистры"    , Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораОбъектаМетаданныхСсылки", ЭтотОбъект);
	ФормаВыбораОбъектаМД = ОткрытьФорму(
		ПутьКФормам + "ВыборОбъектаМетаданных",
		ПараметрыФормы,
		ЭтотОбъект,,,,
		ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПустуюСсылку(Команда)
	
	Если ПустаяСтрока(ТипМД) ИЛИ ПустаяСтрока(ИмяМД) Тогда
		СП = Новый СообщениеПользователю;
		СП.Текст = НСтр("ru = 'Не выбран объект метаданных'");
		СП.Поле ="ИзменитьОбъектМД";
		Сп.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ТипМД = "Справочники" Тогда
		ЗначениеСтрокой = "Справочник.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "Документы" Тогда
		ЗначениеСтрокой = "Документ.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "Перечисления" Тогда
		ЗначениеСтрокой = "Перечисление.%1.ПустоеЗначение";
	ИначеЕсли ТипМД = "ПланыСчетов" Тогда
		ЗначениеСтрокой = "ПланСчетов.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "ПланыВидовХарактеристик" Тогда
		ЗначениеСтрокой = "ПланВидовХарактеристик.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "ПланыВидовРасчета" Тогда
		ЗначениеСтрокой = "ПланВидовРасчета.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "БизнесПроцессы" Тогда
		ЗначениеСтрокой = "БизнесПроцесс.%1.ПустаяСсылка";
	ИначеЕсли ТипМД = "Задачи" Тогда
		ЗначениеСтрокой = "Задача.%1.ПустаяСсылка";
	Иначе
		Возврат;
	КонецЕсли;
	
	ЗначениеСтрокой = СтрЗаменить(ЗначениеСтрокой, "%1", ИмяМД);
	
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("ТипМД"            , ТипМД);
	ВозвращаемаяСтруктура.Вставить("ИмяМД"            , ИмяМД);
	ВозвращаемаяСтруктура.Вставить("СинонимМД"        , СинонимМД);
	ВозвращаемаяСтруктура.Вставить("ВыбранноеЗначение", ПредопределенноеЗначение(ЗначениеСтрокой));
	
	Закрыть(ВозвращаемаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


