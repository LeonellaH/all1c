
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	ТипМетаданных       = Параметры.ТипМетаданных;
	ИмяМетаданных       = Параметры.ИмяМетаданных;
	НаименованиеШаблона = Параметры.Наименование;
	
	МассивШаблоновШага = Параметры.МассивШаблоновШага;
	Для каждого СтруктураШаблона Из МассивШаблоновШага Цикл
		
		ШагШаблона = ШагиШаблона.Добавить();
		ШагШаблона.Наименование           = СтруктураШаблона.Наименование;
		ШагШаблона.ТипШага                = СтруктураШаблона.ТипШага;
		ШагШаблона.Описание               = СтруктураШаблона.Описание;
		ШагШаблона.НеВыводитьАвтоописание = СтруктураШаблона.НеВыводитьАвтоописание;
		ШагШаблона.Активность             = СтруктураШаблона.Активность;
		ШагШаблона.ВыполнитьВручную       = СтруктураШаблона.ВыполнитьВручную;
		ШагШаблона.Цвет                   = СтруктураШаблона.Цвет;
		ШагШаблона.Комментарий            = СтруктураШаблона.Комментарий;
		ШагШаблона.ДанныеКартинки         = СтруктураШаблона.ДанныеКартинки;
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(ШагШаблона.Значение, СтруктураШаблона.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Применить изменения?'");
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		Если НЕ ЗавершениеРаботы Тогда
			ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Применить изменения?'");
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Шаблон шагов был изменен. При закрытии изменения будут утеряны'");
		КонецЕсли;
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		// Создаем структуру и оповещаем вызвавшую форму
		СтруктураОповещения = Новый Структура;
		СтруктураОповещения.Вставить("ТипМетаданных", ТипМетаданных);
		СтруктураОповещения.Вставить("ИмяМетаданных", ИмяМетаданных);
		СтруктураОповещения.Вставить("Наименование" , НаименованиеШаблона);
		
		КолонкиДерева = Новый Массив;
		КолонкиДерева.Добавить("Имя");
		КолонкиДерева.Добавить("Синоним");
		КолонкиДерева.Добавить("Активность");
		КолонкиДерева.Добавить("Действие");
		КолонкиДерева.Добавить("Скрипт");
		КолонкиДерева.Добавить("ТипУзла");
		КолонкиДерева.Добавить("Кл");
		
		МассивШаблоновШага = Новый Массив;
		Для каждого ШагШаблона Из ШагиШаблона Цикл
			СтруктураДанныхШага = Новый Структура;
			СтруктураДанныхШага.Вставить("Наименование"          , ШагШаблона.Наименование);
			СтруктураДанныхШага.Вставить("ТипШага"               , ШагШаблона.ТипШага);
			СтруктураДанныхШага.Вставить("Описание"              , ШагШаблона.Описание);
			СтруктураДанныхШага.Вставить("НеВыводитьАвтоописание", ШагШаблона.НеВыводитьАвтоописание);
			СтруктураДанныхШага.Вставить("Активность"            , ШагШаблона.Активность);
			СтруктураДанныхШага.Вставить("ВыполнитьВручную"      , ШагШаблона.ВыполнитьВручную);
			СтруктураДанныхШага.Вставить("Цвет"                  , ШагШаблона.Цвет);
			СтруктураДанныхШага.Вставить("Комментарий"           , ШагШаблона.Комментарий);
			СтруктураДанныхШага.Вставить("ДанныеКартинки"        , ШагШаблона.ДанныеКартинки);
			СтруктураДанныхШага.Вставить("Значение",
				СцТ_ГлавнаяФорма.СцТ_ДеревоформыВДеревоСтруктур(ШагШаблона.Значение, КолонкиДерева));
			
			МассивШаблоновШага.Добавить(СтруктураДанныхШага);
			
		КонецЦикла;
		
		СтруктураОповещения.Вставить("МассивШаблоновШага" , МассивШаблоновШага);
		
		Оповестить("СцТ_ИзменениеШаблонаШага", СтруктураОповещения);
		
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Закрытие окна без сохранения
		Модифицированность = Ложь;
		Закрыть();
		
		// Иначе - не нужно закрывать окно
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_Шапка

&НаКлиенте
Процедура ШагиШаблонаОписаниеПриИзменении(Элемент)
	
	ТД = Элементы.ШагиШаблона.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Элементы.СтраницаОписание.Заголовок = НСтр("ru = 'Описание'");
		Элементы.СтраницаКомментарий.Заголовок = НСтр("ru = 'Комментарий'");
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницаОписание.Заголовок = НСтр("ru = 'Описание'") + ?(ПустаяСтрока(ТД.Описание), "", " +");
	
КонецПроцедуры

&НаКлиенте
Процедура ШагиШаблонаКомментарийПриИзменении(Элемент)
	
	ТД = Элементы.ШагиШаблона.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Элементы.СтраницаОписание.Заголовок = НСтр("ru = 'Описание'");
		Элементы.СтраницаКомментарий.Заголовок = НСтр("ru = 'Комментарий'");
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницаКомментарий.Заголовок = НСтр("ru = 'Комментарий'") + ?(ПустаяСтрока(ТД.Комментарий), "", " +");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_ШагиШаблона

&НаКлиенте
Процедура ШагиШаблонаПриАктивизацииСтроки(Элемент)
	
	ТД = Элементы.ШагиШаблона.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Элементы.СтраницаОписание.Заголовок = НСтр("ru = 'Описание'");
		Элементы.СтраницаКомментарий.Заголовок = НСтр("ru = 'Комментарий'");
		Возврат;
	КонецЕсли;
	
	Элементы.СтраницаОписание.Заголовок = НСтр("ru = 'Описание'") + ?(ПустаяСтрока(ТД.Описание), "", " +");
	Элементы.СтраницаКомментарий.Заголовок = НСтр("ru = 'Комментарий'") + ?(ПустаяСтрока(ТД.Комментарий), "", " +");
	
КонецПроцедуры


#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(
	УзелДереваФормы,
	ДеревоСтруктур)
	
	СтрокиДереваФормы = УзелДереваФормы.ПолучитьЭлементы();
	Для каждого СтрокаДереваСтруктур Из ДеревоСтруктур.ИСТЗ_Строки Цикл
		СтрокаДереваФормы = СтрокиДереваФормы.Добавить();
		Для каждого КлючЗначение Из СтрокаДереваСтруктур Цикл
			Если КлючЗначение.Ключ <> "ИСТЗ_Строки" Тогда
				СтрокаДереваФормы[КлючЗначение.Ключ] = КлючЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(СтрокаДереваФормы, СтрокаДереваСтруктур);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти
