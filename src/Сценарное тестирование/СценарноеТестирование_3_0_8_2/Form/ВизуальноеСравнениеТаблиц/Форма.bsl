#Область Переменные

&НаКлиенте
Перем ИзмененыКлючиИлиАктивность;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	БезСохраненияИзменений = Параметры.БезСохраненияИзменений;
	
	ТипОбъекта           = Параметры.ТипОбъекта;
	ИмяТаблицы           = Параметры.ИмяТаблицы;
	ПредставлениеОбъекта = Параметры.ПредставлениеОбъекта;
	
	Если ТипОбъекта = "Реквизиты" ИЛИ ТипОбъекта = "ТабличныйДокумент" Тогда
		//Элементы.КолонкиКлючевое.ТолькоПросмотр = Истина;
		Элементы.ГруппаКолонки.Видимость         = Ложь;
	КонецЕсли;
	
	МассивИсключений = ?(ТипЗнч(Параметры.МассивИсключений) = Тип("Массив"),
		Параметры.МассивИсключений,
		Новый Массив);
	МассивКлючевыхПолей = ?(ТипЗнч(Параметры.МассивКлючевыхПолей) = Тип("Массив"),
		Параметры.МассивКлючевыхПолей,
		Новый Массив);
	
	ЭталоннаяТЗ_НаСервере = ПолучитьИзВременногоХранилища(Параметры.АдресЭталоннойТЗ);
	ТестоваяТЗ_НаСервере  = ПолучитьИзВременногоХранилища(Параметры.АдресТестовойТЗ);
	
	Если ЭталоннаяТЗ_НаСервере = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МассивКолонокЭталоннойТЗ = ЭталоннаяТЗ_НаСервере.Колонки;
	МассивКолонокТестовойТЗ  = ТестоваяТЗ_НаСервере.Колонки;
	
	// Заполнение таблицы колонок
	Для каждого ЭталоннаяКолонка Из МассивКолонокЭталоннойТЗ Цикл
		
		СтрокаТаблицыКолонок = Колонки.Добавить();
		СтрокаТаблицыКолонок.Имя                 = ЭталоннаяКолонка.Имя;
		СтрокаТаблицыКолонок.Представление       = ЭталоннаяКолонка.Заголовок;
		Если ПустаяСтрока(СтрокаТаблицыКолонок.Представление) Тогда
			СтрокаТаблицыКолонок.Представление = ЭталоннаяКолонка.Имя;
		КонецЕсли;
		СтрокаТаблицыКолонок.ОтсутствуетВЭталоне = Ложь;
		
		ИндексКолонкиВМассивеКлючевыхПолей = МассивКлючевыхПолей.Найти(ЭталоннаяКолонка.Имя);
		СтрокаТаблицыКолонок.Ключевое = (ИндексКолонкиВМассивеКлючевыхПолей <> Неопределено);
		
		ИндексКолонкиВМассивеИсключений = МассивИсключений.Найти(ЭталоннаяКолонка.Имя);
		СтрокаТаблицыКолонок.Активность = (ИндексКолонкиВМассивеИсключений = Неопределено);
		Если НЕ СтрокаТаблицыКолонок.Активность И СтрокаТаблицыКолонок.Ключевое Тогда
			СтрокаТаблицыКолонок.Ключевое = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ТестоваяКолонка Из МассивКолонокТестовойТЗ Цикл
		
		ИндексКолонкиВЭталонной = МассивКолонокЭталоннойТЗ.Найти(ТестоваяКолонка.Имя);
		Если ИндексКолонкиВЭталонной = Неопределено Тогда
			СтрокаТаблицыКолонок = Колонки.Добавить();
			СтрокаТаблицыКолонок.Имя                 = ТестоваяКолонка.Имя;
			СтрокаТаблицыКолонок.Представление       = ТестоваяКолонка.Заголовок;
			Если ПустаяСтрока(СтрокаТаблицыКолонок.Представление) Тогда
				СтрокаТаблицыКолонок.Представление = ТестоваяКолонка.Имя;
			КонецЕсли;
			СтрокаТаблицыКолонок.ОтсутствуетВЭталоне = Истина;
			СтрокаТаблицыКолонок.ОтсутствуетВТестовой = Ложь;
			СтрокаТаблицыКолонок.Активность           = Ложь;
			СтрокаТаблицыКолонок.Ключевое             = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	// Конец Заполнение таблицы колонок
	
	СцТ_ЗаполнитьИсходныеТаблицыИТаблицуРезультата(ЭталоннаяТЗ_НаСервере, ТестоваяТЗ_НаСервере);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ БезСохраненияИзменений
		И (ТипОбъекта = "СравниваемаяТабличнаяЧасть" ИЛИ ТипОбъекта = "ДвиженияДокумента")
		И ИзмененыКлючиИлиАктивность = Истина Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Применить изменение состава ключей и активности колонок к шагу?'");
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ БезСохраненияИзменений
		И (ТипОбъекта = "СравниваемаяТабличнаяЧасть" ИЛИ ТипОбъекта = "ДвиженияДокумента")
		И ИзмененыКлючиИлиАктивность = Истина Тогда
		
		Если НЕ ЗавершениеРаботы Тогда
			
			ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Применить изменение состава ключей и активности колонок к шагу?'");
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
			
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Изменены состав ключей и активность колонок. При закрытии эти изменения будут утеряны'");
			
		КонецЕсли;
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		// Применение изменений
		ДанныеКлючей = Новый Структура("ИмяТаблицы,Ключи,АктивностьКолонок",
			ИмяТаблицы,
			Новый Массив,
			Новый Соответствие);
		
		Для каждого СтрКолонка Из Колонки Цикл
			
			ИмяКолонкиВРег = ВРег(СтрКолонка.Имя);
			Если СтрКолонка.Ключевое Тогда
				ДанныеКлючей.Ключи.Добавить(ИмяКолонкиВРег);
			КонецЕсли;
			
			ДанныеКлючей.АктивностьКолонок[ИмяКолонкиВРег] = СтрКолонка.Активность;
			
		КонецЦикла;
		
		Оповестить("СцТ_ИзмененСоставКлючей", ДанныеКлючей, ВладелецФормы);
		
		ИзмененыКлючиИлиАктивность = Ложь;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Закрытие окна без сохранения
		ИзмененыКлючиИлиАктивность = Ложь;
		Закрыть();
		
		// Иначе - не нужно закрывать окно
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_Колонки

&НаКлиенте
Процедура КолонкиАктивностьПриИзменении(Элемент)
	
	ТекущаяКолонка = Элементы.Колонки.ТекущиеДанные;
	Если НЕ ТекущаяКолонка.Активность И НЕ Элементы.КолонкиКлючевое.ТолькоПросмотр Тогда
		ТекущаяКолонка.Ключевое = Ложь;
	КонецЕсли;
	
	ИзмененыКлючиИлиАктивность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура КолонкиКлючевоеПриИзменении(Элемент)
	
	ТекущаяКолонка = Элементы.Колонки.ТекущиеДанные;
	Если ТекущаяКолонка.Ключевое Тогда
		ТекущаяКолонка.Активность = Истина;
	КонецЕсли;
	
	ИзмененыКлючиИлиАктивность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Сравнить(Команда)
	
	СцТ_ПерезаполнитьРезультат_НаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьКолонки(Команда)
	
	СцТ_УстановитьАктивностьВыделенныхКолонок(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеактивизироватьКолонки(Команда)
	
	СцТ_УстановитьАктивностьВыделенныхКолонок(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура КлючевыеКолонки(Команда)
	
	СцТ_УстановитьФлажкиКлючейВыделенныхКолонок(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура НеКлючевыеКолонки(Команда)
	
	СцТ_УстановитьФлажкиКлючейВыделенныхКолонок(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаСервере
Процедура СцТ_ЗаполнитьИсходныеТаблицыИТаблицуРезультата(ЭталоннаяТЗ, ТестоваяТЗ)
	
	МассивНовыхРеквизитов = Новый Массив;
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	
	ТипВсеТипы = ЭтаОбработка.СцТ_ВсеТипыЗначений();
	
	Для каждого Колонка Из ЭталоннаяТЗ.Колонки Цикл
		МассивНовыхРеквизитов.Добавить(
			Новый РеквизитФормы(Колонка.Имя,
								ТипВсеТипы,
								"ЭталоннаяТаблица",
								Колонка.Заголовок,
								Истина));
	КонецЦикла;
	
	Для каждого Колонка Из ТестоваяТЗ.Колонки Цикл
		МассивНовыхРеквизитов.Добавить(
			Новый РеквизитФормы(Колонка.Имя,
								ТипВсеТипы,
								"ТестоваяТаблица",
								Колонка.Заголовок,
								Истина));
	КонецЦикла;
	
	СцТ_СоздатьКолонкиРезультатаСравнения(МассивНовыхРеквизитов);
	
	ИзменитьРеквизиты(МассивНовыхРеквизитов);
	
	// Заполнение таблиц данными
	СцТ_ЗаполнитьБазовуюТаблицу(ЭталоннаяТаблица, ЭталоннаяТЗ);
	СцТ_ЗаполнитьБазовуюТаблицу(ТестоваяТаблица, ТестоваяТЗ);
	
	СцТ_ЗаполнитьТаблицуРезультата();
	
	// Отображение таблицы результата сравнения
	СцТ_ВизуализироватьРезультатСравнения();
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ЗаполнитьБазовуюТаблицу(ТаблицаДанныеФормы, ТаблицаНаСервере)
	
	Для каждого СтрокаНаСервере Из ТаблицаНаСервере Цикл
		СтрокаДанных = ТаблицаДанныеФормы.Добавить();
		Для каждого Колонка Из ТаблицаНаСервере.Колонки Цикл
			СтрокаДанных[Колонка.Имя] = СтрокаНаСервере[Колонка.Имя];
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ЗаполнитьТаблицуРезультата()
	
	РезультатСравнения.Очистить();
	
	Для каждого СтрДФТ Из ЭталоннаяТаблица Цикл
		СтрДФТ.ОтметкаВычерка = Ложь;
	КонецЦикла;
	
	Для каждого СтрДФТ Из ТестоваяТаблица Цикл
		СтрДФТ.ОтметкаВычерка = Ложь;
	КонецЦикла;
	
	// Заполнение таблицы результата
	Для каждого ЭталоннаяСтрока Из ЭталоннаяТаблица Цикл
		
		Отбор = Новый Структура;
		Для каждого Колонка Из Колонки Цикл
			Если Колонка.Ключевое Тогда
				Отбор.Вставить(Колонка.Имя, ЭталоннаяСтрока[Колонка.Имя]);
			КонецЕсли;
		КонецЦикла;
		
		// Выбираем только неотмеченные строки
		Отбор.Вставить("ОтметкаВычерка", Ложь);
		
		ТестовыеСтроки = ТестоваяТаблица.НайтиСтроки(Отбор);
		Если ТестовыеСтроки.Количество() = 1 Тогда
			
			ТестоваяСтрока = ТестовыеСтроки[0];
			
		ИначеЕсли ТестовыеСтроки.Количество() > 1 Тогда
			
			НомерСтр = 0;
			ТаблСовпадений = Новый ТаблицаЗначений;
			ТаблСовпадений.Колонки.Добавить("НомерСтр");
			ТаблСовпадений.Колонки.Добавить("Корреляция");
			Пока НомерСтр < ТестовыеСтроки.Количество() - 1 Цикл
				Корр = 0;
				Для каждого СтрокаКолонки Из Колонки Цикл
					Если СтрокаКолонки.Активность Тогда
					//Если МассивИсключений.Найти(Кол.Имя) = Неопределено Тогда
						Если ЭталоннаяСтрока[СтрокаКолонки.Имя] = ТестовыеСтроки[НомерСтр][СтрокаКолонки.Имя] Тогда
							Корр = Корр + 1;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				НоваяСтр = ТаблСовпадений.Добавить();
				НоваяСтр.НомерСтр = НомерСтр;
				НоваяСтр.Корреляция = Корр;
				НомерСтр = НомерСтр + 1;
			КонецЦикла;
			
			ТаблСовпадений.Сортировать("Корреляция Убыв");
			НужныйНомерСтроки = ТаблСовпадений[0].НомерСтр;
			
			ТестоваяСтрока = ТестовыеСтроки[НужныйНомерСтроки];
			
		Иначе
			
			ТестоваяСтрока = Неопределено;
			
		КонецЕсли;
		
		НоваяСтрокаРезультата = РезультатСравнения.Добавить();
		Для каждого ЭлементСписка Из Колонки Цикл
			
			Если ЭлементСписка.Активность Тогда
				
				Если ЭлементСписка.Ключевое Тогда
					НоваяСтрокаРезультата[ЭлементСписка.Имя] = ЭталоннаяСтрока[ЭлементСписка.Имя];
				ИначеЕсли НЕ ЭлементСписка.Ключевое Тогда
					НоваяСтрокаРезультата["Э_" + ЭлементСписка.Имя] = ЭталоннаяСтрока[ЭлементСписка.Имя];
					Если ТестоваяСтрока <> Неопределено Тогда
						НоваяСтрокаРезультата["Т_" + ЭлементСписка.Имя] = ТестоваяСтрока[ЭлементСписка.Имя];
					КонецЕсли;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// Вычеркиваем строки
		ЭталоннаяСтрока.ОтметкаВычерка = Истина;
		Если ТестоваяСтрока <> Неопределено Тогда
			ТестоваяСтрока.ОтметкаВычерка = Истина;
		Иначе
			НоваяСтрокаРезультата.ОтсутствиеСтроки = 1;
		КонецЕсли;
	КонецЦикла;
	
	// Теперь нужно вставить в таблицу результата строки, которые не вычеркнуты в тестовой таблице
	Отбор = Новый Структура;
	Отбор.Вставить("ОтметкаВычерка", Ложь);
	
	ТестовыеСтроки = ТестоваяТаблица.НайтиСтроки(Отбор);
	Для каждого ТестоваяСтрока Из ТестовыеСтроки Цикл
		
		НоваяСтрокаРезультата = РезультатСравнения.Добавить();
		НоваяСтрокаРезультата.ОтсутствиеСтроки = 1;
		Для каждого Колонка Из Колонки Цикл
			Если Колонка.Активность Тогда
				Если Колонка.Ключевое Тогда
					НоваяСтрокаРезультата[Колонка.Имя] = ТестоваяСтрока[Колонка.Имя];
				Иначе//Если НЕ Колонка.Ключевое Тогда
					НоваяСтрокаРезультата["Т_" + Колонка.Имя] = ТестоваяСтрока[Колонка.Имя];
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ПерезаполнитьРезультат_НаСервере()
	
	ТаблицаРезультатаНаСервере = РеквизитФормыВЗначение("РезультатСравнения");
	МассивУдаляемыхКолонок = Новый Массив;
	Для каждого Колонка Из ТаблицаРезультатаНаСервере.Колонки Цикл
		Если Колонка.Имя <> "Картинка" И Колонка.Имя <> "ОтсутствиеСтроки" Тогда
			МассивУдаляемыхКолонок.Добавить("РезультатСравнения." + Колонка.Имя);
			
			ИмяКолонки = "РезультатСравнения" + Колонка.Имя;
			Если Найти(ИмяКолонки, "РезультатСравненияЭ_") > 0 Тогда
				ИмяГруппы = СтрЗаменить(ИмяКолонки, "Э_", "Группа_");
				Элементы.Удалить(Элементы[ИмяГруппы]);
			Иначе
				Попытка
					Элементы.Удалить(Элементы[ИмяКолонки]);
				Исключение
				КонецПопытки;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	УсловноеОформление.Элементы.Очистить();
	
	МассивНовыхРеквизитов = Новый Массив;
	
	СцТ_СоздатьКолонкиРезультатаСравнения(МассивНовыхРеквизитов);
	
	ИзменитьРеквизиты(МассивНовыхРеквизитов, МассивУдаляемыхКолонок);
	
	СцТ_ЗаполнитьТаблицуРезультата();
	
	СцТ_ВизуализироватьРезультатСравнения();
	
КонецПроцедуры

&НаСервере
Процедура СцТ_СоздатьКолонкиРезультатаСравнения(МассивНовыхРеквизитов)
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	
	ТипВсеТипы = ЭтаОбработка.СцТ_ВсеТипыЗначений();
	
	Для каждого СтрокаТаблицыКолонок Из Колонки Цикл
		Если СтрокаТаблицыКолонок.Активность Тогда
			Если СтрокаТаблицыКолонок.Ключевое Тогда
				МассивНовыхРеквизитов.Добавить(
					Новый РеквизитФормы(СтрокаТаблицыКолонок.Имя,
										ТипВсеТипы,
										"РезультатСравнения",
										СтрокаТаблицыКолонок.Представление,
										Истина));
			Иначе
				МассивНовыхРеквизитов.Добавить(
					Новый РеквизитФормы("Э_" + СтрокаТаблицыКолонок.Имя,
										ТипВсеТипы,
										"РезультатСравнения",
										"Э_" + СтрокаТаблицыКолонок.Представление,
										Истина));
				МассивНовыхРеквизитов.Добавить(
					Новый РеквизитФормы("Т_" + СтрокаТаблицыКолонок.Имя,
										ТипВсеТипы,
										"РезультатСравнения",
										"Т_" + СтрокаТаблицыКолонок.Представление,
										Истина));
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ВизуализироватьРезультатСравнения()
	
	Для каждого СтрокаТаблицыКолонок Из Колонки Цикл
		
		Если СтрокаТаблицыКолонок.Активность Тогда
			
			Если СтрокаТаблицыКолонок.Ключевое Тогда
				
				НоваяКолонкаТаблицы = Элементы.Добавить("РезультатСравнения" + СтрокаТаблицыКолонок.Имя, Тип("ПолеФормы"), Элементы.РезультатСравнения);
				НоваяКолонкаТаблицы.ПутьКДанным = "РезультатСравнения." + СтрокаТаблицыКолонок.Имя;
				НоваяКолонкаТаблицы.Заголовок   = СтрокаТаблицыКолонок.Представление;
				НоваяКолонкаТаблицы.Вид         = ВидПоляФормы.ПолеВвода;
				
			Иначе
				
				НоваяГруппаТаблицы = Элементы.Добавить("РезультатСравнения" + "Группа_" + СтрокаТаблицыКолонок.Имя, Тип("ГруппаФормы"), Элементы.РезультатСравнения);
				НоваяГруппаТаблицы.Вид         = ВидГруппыФормы.ГруппаКолонок;
				НоваяГруппаТаблицы.Группировка = ГруппировкаКолонок.Вертикальная;
				
				НоваяКолонкаТаблицы = Элементы.Добавить("РезультатСравнения" + "Э_" + СтрокаТаблицыКолонок.Имя, Тип("ПолеФормы"), НоваяГруппаТаблицы);
				НоваяКолонкаТаблицы.ПутьКДанным = "РезультатСравнения." + "Э_" + СтрокаТаблицыКолонок.Имя;
				НоваяКолонкаТаблицы.Заголовок   = "Э - " + СтрокаТаблицыКолонок.Представление;
				НоваяКолонкаТаблицы.Вид         = ВидПоляФормы.ПолеВвода;
				
				НоваяКолонкаТаблицы = Элементы.Добавить("РезультатСравнения" + "Т_" + СтрокаТаблицыКолонок.Имя, Тип("ПолеФормы"), НоваяГруппаТаблицы);
				НоваяКолонкаТаблицы.ПутьКДанным = "РезультатСравнения." + "Т_" + СтрокаТаблицыКолонок.Имя;
				НоваяКолонкаТаблицы.Заголовок   = "Т - " + СтрокаТаблицыКолонок.Представление;
				НоваяКолонкаТаблицы.Вид         = ВидПоляФормы.ПолеВвода;
				
				// Условное оформление
				НовыйЭлементОформления = УсловноеОформление.Элементы.Добавить();
				ЭлементОтбора = НовыйЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("РезультатСравнения.Т_" + СтрокаТаблицыКолонок.Имя);
				ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
				ЭлементОтбора.Использование  = Истина;
				ЭлементОтбора.ПравоеЗначение = Новый ПолеКомпоновкиДанных("РезультатСравнения.Э_" + СтрокаТаблицыКолонок.Имя);;
				
				ОформляемоеПоле = НовыйЭлементОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("РезультатСравненияТ_" + СтрокаТаблицыКолонок.Имя);
				ОформляемоеПоле.Использование = Истина;
				ОформляемоеПоле = НовыйЭлементОформления.Поля.Элементы.Добавить();
				ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("РезультатСравненияЭ_" + СтрокаТаблицыКолонок.Имя);
				ОформляемоеПоле.Использование = Истина;
				
				НовыйЭлементОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_УстановитьАктивностьВыделенныхКолонок(ЗначениеАктивности)
	
	ИзменитьСвойствоКлюч = НЕ Элементы.КолонкиКлючевое.ТолькоПросмотр;
	Для каждого ИДВыделеннойСтроки Из Элементы.Колонки.ВыделенныеСтроки Цикл
		Колонка = Колонки.НайтиПоИдентификатору(ИДВыделеннойСтроки);
		Колонка.Активность = ЗначениеАктивности;
		Если ИзменитьСвойствоКлюч Тогда
			Колонка.Ключевое = Колонка.Ключевое И ЗначениеАктивности;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_УстановитьФлажкиКлючейВыделенныхКолонок(ЗначениеФлажка)
	
	Для каждого ИДВыделеннойСтроки Из Элементы.Колонки.ВыделенныеСтроки Цикл
		Колонка = Колонки.НайтиПоИдентификатору(ИДВыделеннойСтроки);
		Колонка.Ключевое   = ЗначениеФлажка И Колонка.Активность;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти
