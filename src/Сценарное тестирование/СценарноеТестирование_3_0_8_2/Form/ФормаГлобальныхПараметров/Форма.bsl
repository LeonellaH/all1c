#Если НЕ ВебКлиент Тогда

// Форма - владелец текущей формы (для краткости и наглядности вместо "ЭтаФорма.ВладелецФормы")
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;


#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	// Заполнение таблицы параметров
	Если Параметры.СтруктураГлобальныхПараметров <> Неопределено Тогда
		Для каждого ЭлементПараметра Из Параметры.СтруктураГлобальныхПараметров Цикл
			НоваяСтрока = ТаблицаГлобальныхПараметров.Добавить();
			НоваяСтрока.Параметр = ЭлементПараметра.Ключ;
			НоваяСтрока.Значение = ЭлементПараметра.Значение;
			Если ТипЗнч(ЭлементПараметра.Значение) = Тип("Число") Тогда
				НоваяСтрока.Тип      = "Число";
			ИначеЕсли ТипЗнч(ЭлементПараметра.Значение) = Тип("Дата") Тогда
				НоваяСтрока.Тип      = "Дата";
			ИначеЕсли ТипЗнч(ЭлементПараметра.Значение) = Тип("Булево") Тогда
				НоваяСтрока.Тип      = "Булево";
			Иначе
				НоваяСтрока.Тип      = "Строка";
			КонецЕсли;
			
		КонецЦикла;
		
		ТаблицаГлобальныхПараметров.Сортировать("Параметр");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Данные были модифицированы. Сохранить изменения?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Если НЕ ЗавершениеРаботы Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Данные были модифицированы. Сохранить изменения?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Параметры сценария были изменены. При закрытии все изменения будут утеряны'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	ВозвращаемаяСтруктура =  ПоготовитьСтруктуруПараметров();
	
	Модифицированность = Ложь;
	
	Закрыть(ВозвращаемаяСтруктура);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	Если ТаблицаГлобальныхПараметров.Количество() = 0 Тогда
		ТекстПредупреждения = НСтр("ru = 'Нет ни одного параметра. Сохранение в файл невозможно'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр =  "Таблица 1С (*.mxl)|*.mxl|Файл xml (*.xml)|*.xml";
	ДиалогВыбораФайла.Расширение = "xml";
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Если НРег(Прав(ДиалогВыбораФайла.ПолноеИмяФайла,3)) = "xml" Тогда
			// Сохранение в xml
			СцТ_СохранитьГлобальныеПараметрыВФайле(ДиалогВыбораФайла.ПолноеИмяФайла);
			
			
		ИначеЕсли НРег(Прав(ДиалогВыбораФайла.ПолноеИмяФайла,3)) = "mxl" Тогда
			// Сохранение в виде табличного документа 1С
			СцТ_СохранитьГлобальныеПараметрыВТаблице(ДиалогВыбораФайла.ПолноеИмяФайла);
			
		Иначе
			// Неизвестный формат
			ТекстПредупреждения = НСтр("ru = 'Выберите один из доступных типов файла и повторите операцию'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	Если ТаблицаГлобальныхПараметров.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеОтветаОЗаменеПараметров", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Все текущие параметры будут заменениы. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Иначе
		ВыбратьФайлПараметров("Загрузка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзФайла(Команда)
	
	ВыбратьФайлПараметров("Добавление");
	
КонецПроцедуры


#КонецОбласти

#Область ОписанияОповещений

&НаКлиенте
Процедура ПослеОтветаОЗаменеПараметров(Ответ, ДопПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ВыбратьФайлПараметров("Загрузка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросОСохраненииИзменений(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		// Нужно сохранить изменения
		ВозвращаемаяСтруктура =  ПоготовитьСтруктуруПараметров();
		Модифицированность = Ложь;
		Закрыть(ВозвращаемаяСтруктура);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Изменения не сохраняются
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Отмена Тогда
		// Форма остается открытой - ничего не делаем
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаГлобальныхПараметровПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		Элемент.ТекущиеДанные.Тип = "Строка";
	КонецЕсли;
	
	УстановитьТипЗначенияПоля(Элемент.ТекущиеДанные.Тип);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаГлобальныхПараметровТипПриИзменении(Элемент)
	
	ТД = Элементы.ТаблицаГлобальныхПараметров.ТекущиеДанные;
	
	УстановитьТипЗначенияПоля(ТД.Тип);
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаГлобальныхПараметровПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Отказ = НЕ СцТ_ГлавнаяФорма.ПроверитьПравильностьИмениПараметра(ТекущиеДанные.Параметр);
	
	Если Отказ Тогда
		ТекущийЭлемент = Элементы.ТаблицаГлобальныхПараметровПараметр;
		Возврат;
	КонецЕсли;
	
	// Проверка циклических ссылок на параметры
	Отказ = НЕ СцТ_ГлавнаяФорма.ПроверитьПравильностьЗначенияПараметра(ТекущиеДанные.Значение);
	Если Отказ Тогда
		ТекущийЭлемент = Элементы.ТаблицаГлобальныхПараметровЗначение;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

// Процедура сохранения таблицы глобальных параметров в виде
// таблицы 1С
// Параметры
// ПолныйПутьКФайлу - полный путь к файлу
&НаКлиенте
Процедура СцТ_СохранитьГлобальныеПараметрыВТаблице(ПолныйПутьКФайлу)
	
	// Создание таблицы и настройка ширины колонок
	ТаблДок = Новый ТабличныйДокумент;
	ТаблДок.Область("C1:C1").ШиринаКолонки = 2;
	ТаблДок.Область("C2:C2").ШиринаКолонки = 25;
	ТаблДок.Область("C3:C3").ШиринаКолонки = 50;
	ТаблДок.Область("C4:C4").ШиринаКолонки = 20;
	ТаблДок.Область("R1:R1").ВысотаСтроки = 5;
	
	ТаблДок.АвтоМасштаб        = Истина;
	ТаблДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТаблДок.ОтображатьСетку    = Ложь;
	ТаблДок.РазмерСтраницы     = "A4";
	
	// Оформление заголовка таблицы
	ТаблДок.Область("R2C2:R2C2").Текст = "Имя параметра";
	ТаблДок.Область("R2C3:R2C3").Текст = "Значение";
	ТаблДок.Область("R2C4:R2C4").Текст = "Тип";
	
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
	ТаблДок.Область("R2C2:R2C2").Обвести(, , Линия, );
	ТаблДок.Область("R2C3:R2C3").Обвести(, , Линия, );
	ТаблДок.Область("R2C2:R2C4").Обвести(Линия, Линия, Линия, Линия);
	ТаблДок.Область("R2C2:R2C4").ЦветФона = Новый Цвет(255, 255, 153);
	
	ТекущийНомерСтроки = 3;
	Для каждого СтрокаПараметра Из ТаблицаГлобальныхПараметров Цикл
		
		ТекущийНомерСтрокой = Формат(ТекущийНомерСтроки, "ЧРГ=""""");
		ТекущийНомерСтрокой = СтрЗаменить(ТекущийНомерСтрокой, Символ(160), "");
		ИмяОбласти = "RWC2:RWC2";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ТаблДок.Область(ИмяОбласти).Текст = СтрокаПараметра.Параметр;
		ТаблДок.Область(ИмяОбласти).Обвести(, , Линия, );
		
		ИмяОбласти = "RWC3:RWC3";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ТаблДок.Область(ИмяОбласти).Текст = XMLСтрока(СтрокаПараметра.Значение);
		ТаблДок.Область(ИмяОбласти).Обвести(, , Линия, );
		
		ЗначениеВТаблице = XMLСтрока(СтрокаПараметра.Значение);
		
		ИмяОбласти = "RWC4:RWC4";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ТаблДок.Область(ИмяОбласти).Текст = СтрокаПараметра.Тип;
		
		// Оформление области
		ИмяОбласти = "RWC2:RWC4";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ТаблДок.Область(ИмяОбласти).Обвести(Линия, Линия, Линия, Линия);
		
		ТекущийНомерСтроки = ТекущийНомерСтроки + 1;
	КонецЦикла;
	
	ТаблДок.Записать(ПолныйПутьКФайлу, ТипФайлаТабличногоДокумента.MXL);
	
КонецПроцедуры

// Процедура заполнения таблицы глобальных параметров по данным
// табличного документа с заданным именем файла
// Параметры
// ПолноеИмяФайла - полный путь к файлу табличного документа
&НаКлиенте
Процедура СцТ_ПрочитатьГлобальныеПараметрыИзТаблицы(ПолноеИмяФайла)
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
	АдресХЗ = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	
	// Все равно нужно обращаться к серверу
	// Выполним на сервере и чтение из таблицы
	ТекстПредупреждения = "";
	Результат = ПрочитатьТаблицуНаСервере(АдресХЗ, ТекстПредупреждения);
	
	Если НЕ Результат Тогда
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "<FILENAME>", ПолноеИмяФайла);
		ПоказатьПредупреждение(,ТекстПредупреждения);
	Иначе
		ТаблицаГлобальныхПараметров.Сортировать("Параметр");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СцТ_ДобавитьГлобальныеПараметрыИзТаблицы(ПолноеИмяФайла)
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
	АдресХЗ = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	
	// Все равно нужно обращаться к серверу
	// Выполним на сервере и чтение из таблицы
	ТекстПредупреждения = "";
	СтруктураПараметров = ПолучитьМассивПараметровИзТаблицыНаСервере(АдресХЗ, ТекстПредупреждения);
	
	Если СтруктураПараметров = Неопределено Тогда
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "<FILENAME>", ПолноеИмяФайла);
		ПоказатьПредупреждение(,ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СписокСовпадений = СтруктураПараметров.СписокСовпадений;
	
	СтруктураДобавляемыхПараметров = Новый Структура;
	СтруктураДобавляемыхПараметров.Вставить("МассивПараметров", СтруктураПараметров.МассивПараметров);
	
	Если СписокСовпадений.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьПараметрыИзМассива", ЭтотОбъект, СтруктураДобавляемыхПараметров);
		СписокСовпадений.ПоказатьОтметкуЭлементов(ОписаниеОповещения, "Заменить значения отмеченных параметров значениями из файла?");
	Иначе
		ДобавитьПараметрыИзМассива(СписокСовпадений, СтруктураДобавляемыхПараметров);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивПараметровИзТаблицыНаСервере(АдресХЗ, ТекстПредупреждения)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХЗ);
	ПутьКВременномуФайлу = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанные.Записать(ПутьКВременномуФайлу);
	
	МассивПараметров = Новый Массив;
	СписокСовпадений = Новый СписокЗначений;
	
	ТаблДок = Новый ТабличныйДокумент;
	
	Попытка
		ТаблДок.Прочитать(ПутьКВременномуФайлу);
	Исключение
		ТекстПредупреждения = НСтр("ru='Не удалось прочитать файл табличного документа <FILENAME>'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Неопределено;
	КонецПопытки;
	
	// Структура таблицы не настраиваемая
	// Проверка заголовков
	Если    ТаблДок.Область("R2C2:R2C2").Текст <> "Имя параметра"
		ИЛИ ТаблДок.Область("R2C3:R2C3").Текст <> "Значение"
		ИЛИ ТаблДок.Область("R2C4:R2C4").Текст <> "Тип" Тогда
		ТекстПредупреждения = НСтр("ru='Структура табличного документа не соответствует требуемой. Попробуйте выбрать другой файл'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Неопределено;
		
	КонецЕсли;
	
	НомерПоследнейСтроки = ТаблДок.ВысотаТаблицы;
	Если НомерПоследнейСтроки = 2 Тогда
		ТекстПредупреждения = НСтр("ru='Таблица не содержит параметров либо не соответствует структура таблицы. Попробуйте выбрать другой файл'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Неопределено;
	КонецЕсли;
	
	// Чтение строк
	Для НомерСтроки = 3 ПО НомерПоследнейСтроки Цикл
		
		ТекущийНомерСтрокой = Формат(НомерСтроки, "ЧРГ=""""");
		ТекущийНомерСтрокой = СтрЗаменить(ТекущийНомерСтрокой, Символ(160), "");
		
		ИмяОбласти = "RWC2:RWC2";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ИмяПараметра = ТаблДок.Область(ИмяОбласти).Текст;
		
		ИмяОбласти = "RWC3:RWC3";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		СтрокаЗначения = ТаблДок.Область(ИмяОбласти).Текст;
		
		ИмяОбласти = "RWC4:RWC4";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		СтрокаТипа = ТаблДок.Область(ИмяОбласти).Текст;
		
		Если      СтрокаТипа = "Число" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Число"), СтрокаЗначения);
		ИначеЕсли СтрокаТипа = "Булево" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Булево"), СтрокаЗначения);
		ИначеЕсли СтрокаТипа = "Дата" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Дата"), СтрокаЗначения);
		Иначе
			ИстинноеЗначение = СтрокаЗначения;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ИмяПараметра) Тогда
			СтруктураПараметра = Новый Структура;
			
			СтруктураПараметра.Вставить("Параметр", ИмяПараметра);
			СтруктураПараметра.Вставить("Значение", ИстинноеЗначение);
			СтруктураПараметра.Вставить("Тип"     , СтрокаТипа);
			
			МассивПараметров.Добавить(СтруктураПараметра);
			
			Если ТаблицаГлобальныхПараметров.НайтиСтроки(Новый Структура("Параметр", ИмяПараметра)).Количество() > 0 Тогда
				СписокСовпадений.Добавить(ИмяПараметра, ИмяПараметра, Истина);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		УдалитьФайлы(ПутьКВременномуФайлу);
	Исключение
	КонецПопытки;
	
	ВозвращаемаяСтруктура = Новый Структура;
	ВозвращаемаяСтруктура.Вставить("МассивПараметров", МассивПараметров);
	ВозвращаемаяСтруктура.Вставить("СписокСовпадений", СписокСовпадений);
	
	Возврат ВозвращаемаяСтруктура;
	
КонецФункции




// Функция непосредственного чтения параметров из табличного документа
// Параметры
// АдресХЗ - адрес врменного хранилища значений с данными табличного документа
// ТекстПредупреждения - текст, который нужно отобразить в предупреждении
// при неудачном чтении данных
// Возвращаемое значение - Истина, если удалось прочитать данные, ложь - при неудаче
&НаСервере
Функция ПрочитатьТаблицуНаСервере(АдресХЗ, ТекстПредупреждения)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХЗ);
	ПутьКВременномуФайлу = ПолучитьИмяВременногоФайла("mxl");
	ДвоичныеДанные.Записать(ПутьКВременномуФайлу);
	
	ТаблДок = Новый ТабличныйДокумент;
	
	Попытка
		ТаблДок.Прочитать(ПутьКВременномуФайлу);
	Исключение
		ТекстПредупреждения = НСтр("ru='Не удалось прочитать файл табличного документа <FILENAME>'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Ложь;
	КонецПопытки;
	
	// Структура таблицы не настраиваемая
	// Проверка заголовков
	Если    ТаблДок.Область("R2C2:R2C2").Текст <> "Имя параметра"
		ИЛИ ТаблДок.Область("R2C3:R2C3").Текст <> "Значение"
		ИЛИ ТаблДок.Область("R2C4:R2C4").Текст <> "Тип" Тогда
		ТекстПредупреждения = НСтр("ru='Структура табличного документа не соответствует требуемой. Попробуйте выбрать другой файл'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Ложь;
		
	КонецЕсли;
	
	НомерПоследнейСтроки = ТаблДок.ВысотаТаблицы;
	Если НомерПоследнейСтроки = 2 Тогда
		ТекстПредупреждения = НСтр("ru='Таблица не содержит параметров либо не соответствует структура таблицы. Попробуйте выбрать другой файл'");
		УдалитьФайлы(ПутьКВременномуФайлу);
		Возврат Ложь;
	КонецЕсли;
	
	ТаблицаГлобальныхПараметров.Очистить();
	
	// Чтение строк
	Для НомерСтроки = 3 ПО НомерПоследнейСтроки Цикл
		
		ТекущийНомерСтрокой = Формат(НомерСтроки, "ЧРГ=""""");
		ТекущийНомерСтрокой = СтрЗаменить(ТекущийНомерСтрокой, Символ(160), "");
		
		ИмяОбласти = "RWC2:RWC2";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		ИмяПараметра = ТаблДок.Область(ИмяОбласти).Текст;
		
		ИмяОбласти = "RWC3:RWC3";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		СтрокаЗначения = ТаблДок.Область(ИмяОбласти).Текст;
		
		ИмяОбласти = "RWC4:RWC4";
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "W", ТекущийНомерСтрокой);
		СтрокаТипа = ТаблДок.Область(ИмяОбласти).Текст;
		
		Если      СтрокаТипа = "Число" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Число"), СтрокаЗначения);
		ИначеЕсли СтрокаТипа = "Булево" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Булево"), СтрокаЗначения);
		ИначеЕсли СтрокаТипа = "Дата" Тогда
			ИстинноеЗначение = XMLЗначение(Тип("Дата"), СтрокаЗначения);
		Иначе
			ИстинноеЗначение = СтрокаЗначения;
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ИмяПараметра) Тогда
			НоваяСтрокаПараметра = ТаблицаГлобальныхПараметров.Добавить();
			НоваяСтрокаПараметра.Параметр = ИмяПараметра;
			НоваяСтрокаПараметра.Значение = ИстинноеЗначение;
			НоваяСтрокаПараметра.Тип      = СтрокаТипа;
		КонецЕсли;
		
	КонецЦикла;
	
	Попытка
		УдалитьФайлы(ПутьКВременномуФайлу);
	Исключение
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

// Процедура сохранения таблицы глобальных параметров в виде
// таблицы 1С
// Параметры
// ПолныйПутьКФайлу - полный путь к файлу
&НаКлиенте
Процедура СцТ_СохранитьГлобальныеПараметрыВФайле(ПолныйПутьКФайлу)
	
	ЗаписьXML = Новый ЗаписьXML;
	
	Попытка
		ЗаписьXML.ОткрытьФайл(ПолныйПутьКФайлу);
	Исключение
		ТекстСообщения = НСтр("ru='Не удалось открыть файл XML <FILENAME>'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "<FILENAME>", ПолныйПутьКФайлу);
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Попытка
		
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписьXML.ЗаписатьНачалоЭлемента("Root");
		// Аттрибуты
		ЗаписьXML.ЗаписатьАтрибут("ВерсияСтруктурыXML", "83-01");
		ЗаписьXML.ЗаписатьАтрибут("ТипФайла"          , "GlobalParametrs");
		
		Для каждого СтрокаПараметра Из ТаблицаГлобальныхПараметров Цикл
		
			ЗаписьXML.ЗаписатьНачалоЭлемента("СтрокаПараметра");
			
			ЗаписьXML.ЗаписатьАтрибут("Параметр"   , СтрокаПараметра.Параметр);
			ЗаписьXML.ЗаписатьАтрибут("Значение"   , XMLСтрока(СтрокаПараметра.Значение));
			ЗаписьXML.ЗаписатьАтрибут("ТипЗначения", СтрокаПараметра.Тип);
			
			ЗаписьXML.ЗаписатьКонецЭлемента(); // СтрокаПараметра
			
		КонецЦикла;
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Root
		
		ЗаписьXML.Закрыть();
		
	Исключение
		ЗаписьXML.Закрыть();
		
		ТекстСообщения = НСтр("ru='Не удалось записать файл XML <FILENAME>'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "<FILENAME>", ПолныйПутьКФайлу);
		ПоказатьПредупреждение(,ТекстСообщения);
		
	КонецПопытки;
	
КонецПроцедуры

// Процедура чтения глобальных параметров из XML-файла
//
// Параметры
// ПолноеИмяФайла - полное имя файла с параметрами
&НаКлиенте
Процедура СцТ_ПрочитатьГлобальныеПараметрыИзФайла(ПолноеИмяФайла)
	
	ЧтениеXML = Новый ЧтениеXML;
	
	Попытка
		ЧтениеXML.ОткрытьФайл(ПолноеИмяФайла);
	Исключение
		ТекстПредупреждения = НСтр("ru='Не удалось открыть файл XML <FILENAME>.'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "<FILENAME>", ПолноеИмяФайла);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецПопытки;
	
	ТаблицаГлобальныхПараметров.Очистить();
	
	ЧтениеXML.Прочитать(); // зашли в корень
	
	Если ЧтениеXML.КоличествоАтрибутов() > 0 Тогда
		Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
			Если      ЧтениеXML.Имя = "ВерсияСтруктурыXML" Тогда
				ВерсияСтруктуры = ЧтениеXML.Значение;
				
			ИначеЕсли ЧтениеXML.Имя = "ТипФайла" Тогда
				ТипФайла = ЧтениеXML.Значение;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипФайла <> "GlobalParametrs" Тогда
		ТекстПредупреждения = НСтр("ru='Выбранный файл не содержит таблицу глобальных параметров. Выберите другой файл'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ВерсияСтруктуры = "83-01" Тогда
		Пока ЧтениеXML.Прочитать() Цикл
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				// Сичтаем xmlструктуру правильной
				НоваяСтрокаПараметра = ТаблицаГлобальныхПараметров.Добавить();
				
				// Очистка параметров
				ИмяПараметра   = "";
				СтрокаЗначения = "";
				ТипЗначения    = "";
				
				// Чтение параметров
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					Если      ЧтениеXML.Имя = "Параметр" Тогда
						ИмяПараметра = ЧтениеXML.Значение;
					ИначеЕсли ЧтениеXML.Имя = "Значение" Тогда
						СтрокаЗначения = ЧтениеXML.Значение;
					ИначеЕсли ЧтениеXML.Имя = "ТипЗначения" Тогда
						ТипЗначения = ЧтениеXML.Значение;
					КонецЕсли;
				КонецЦикла;
				
				Если ТипЗначения = "Число" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Число"), СтрокаЗначения);
				ИначеЕсли ТипЗначения = "Булево" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Булево"), СтрокаЗначения);
				ИначеЕсли ТипЗначения = "Дата" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Дата"), СтрокаЗначения);
				Иначе
					ИстинноеЗначение = СтрокаЗначения;
				КонецЕсли;
				
				НоваяСтрокаПараметра.Параметр = ИмяПараметра;
				НоваяСтрокаПараметра.Значение = ИстинноеЗначение;
				НоваяСтрокаПараметра.Тип      = ТипЗначения;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЧтениеXML.Закрыть();
	
КонецПроцедуры

// Добавление параметров из XML-файла
// Парамметр
// ПолноеимяФайла - путь к файлу
&НаКлиенте
Процедура СцТ_ДобавитьГлобальныеПараметрыИзФайла(ПолноеИмяФайла)
	
	ЧтениеXML = Новый ЧтениеXML;
	
	Попытка
		ЧтениеXML.ОткрытьФайл(ПолноеИмяФайла);
	Исключение
		ТекстПредупреждения = НСтр("ru='Не удалось открыть файл XML <FILENAME>.'");
		ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "<FILENAME>", ПолноеИмяФайла);
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецПопытки;
	
	МассивПараметров = Новый Массив;
	СписокСовпадений = Новый СписокЗначений;
	
	ЧтениеXML.Прочитать(); // зашли в корень
	
	Если ЧтениеXML.КоличествоАтрибутов() > 0 Тогда
		Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
			Если      ЧтениеXML.Имя = "ВерсияСтруктурыXML" Тогда
				ВерсияСтруктуры = ЧтениеXML.Значение;
				
			ИначеЕсли ЧтениеXML.Имя = "ТипФайла" Тогда
				ТипФайла = ЧтениеXML.Значение;
				
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТипФайла <> "GlobalParametrs" Тогда
		ТекстПредупреждения = НСтр("ru='Выбранный файл не содержит таблицу глобальных параметров. Выберите другой файл'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	Если ВерсияСтруктуры = "83-01" Тогда
		Пока ЧтениеXML.Прочитать() Цикл
			Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				
				// Сичтаем xmlструктуру правильной
				
				// Очистка параметров
				ИмяПараметра   = "";
				СтрокаЗначения = "";
				ТипЗначения    = "";
				
				// Чтение параметров
				Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
					Если      ЧтениеXML.Имя = "Параметр" Тогда
						ИмяПараметра = ЧтениеXML.Значение;
					ИначеЕсли ЧтениеXML.Имя = "Значение" Тогда
						СтрокаЗначения = ЧтениеXML.Значение;
					ИначеЕсли ЧтениеXML.Имя = "ТипЗначения" Тогда
						ТипЗначения = ЧтениеXML.Значение;
					КонецЕсли;
				КонецЦикла;
				
				Если ТипЗначения = "Число" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Число"), СтрокаЗначения);
				ИначеЕсли ТипЗначения = "Булево" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Булево"), СтрокаЗначения);
				ИначеЕсли ТипЗначения = "Дата" Тогда
					ИстинноеЗначение = XMLЗначение(Тип("Дата"), СтрокаЗначения);
				Иначе
					ИстинноеЗначение = СтрокаЗначения;
				КонецЕсли;
				
				СтруктураПараметра = Новый Структура;
				
				СтруктураПараметра.Вставить("Параметр", ИмяПараметра);
				СтруктураПараметра.Вставить("Значение", ИстинноеЗначение);
				СтруктураПараметра.Вставить("Тип"     , ТипЗначения);
				
				МассивПараметров.Добавить(СтруктураПараметра);
				
				Если ТаблицаГлобальныхПараметров.НайтиСтроки(Новый Структура("Параметр", ИмяПараметра)).Количество() > 1 Тогда
					СписокСовпадений.Добавить(ИмяПараметра, ИмяПараметра, Истина);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЧтениеXML.Закрыть();
	
	СтруктураДобавляемыхПараметров = Новый Структура;
	СтруктураДобавляемыхПараметров.Вставить("МассивПараметров", МассивПараметров);
	
	Если СписокСовпадений.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ДобавитьПараметрыИзМассива", ЭтотОбъект, СтруктураДобавляемыхПараметров);
		СписокСовпадений.ПоказатьОтметкуЭлементов(ОписаниеОповещения, "Заменить значения отмеченных параметров значениями из файла?");
	Иначе
		ДобавитьПараметрыИзМассива(СписокСовпадений, СтруктураДобавляемыхПараметров);
	КонецЕсли;
	
КонецПроцедуры

// Добавление параметров из массива с учетом списка совпадений
&НаКлиенте
Процедура ДобавитьПараметрыИзМассива(СписокСовпадений, СтруктураДобавляемыхПараметров) Экспорт
	
	Если СписокСовпадений = Неопределено Тогда
		СписокСовпадений = Новый СписокЗначений;
	КонецЕсли;
	
	МассивПараметров = СтруктураДобавляемыхПараметров.МассивПараметров;
	
	Для каждого СтруктураПараметров Из МассивПараметров Цикл
		
		НайденноеСовпадение = СписокСовпадений.НайтиПоЗначению(СтруктураПараметров.Параметр);
		
		Если НайденноеСовпадение = Неопределено Тогда
			// Этого параметра нет - добавление
			НоваяСтрокаПараметра = ТаблицаГлобальныхПараметров.Добавить();
			НоваяСтрокаПараметра.Параметр = СтруктураПараметров.Параметр;
			НоваяСтрокаПараметра.Значение = СтруктураПараметров.Значение;
			НоваяСтрокаПараметра.Тип      = СтруктураПараметров.Тип;
			
		Иначе
			Если НайденноеСовпадение.Пометка Тогда
				НайденныеСтроки = ТаблицаГлобальныхПараметров.НайтиСтроки(Новый Структура("Параметр", СтруктураПараметров.Параметр));
				Если НайденныеСтроки.Количество() > 0 Тогда
					НоваяСтрокаПараметра = НайденныеСтроки[0];
					НоваяСтрокаПараметра.Значение = СтруктураПараметров.Значение;
					НоваяСтрокаПараметра.Тип      = СтруктураПараметров.Тип;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаГлобальныхПараметров.Сортировать("Параметр");
	
КонецПроцедуры

&НаКлиенте
Функция ПоготовитьСтруктуруПараметров()
	
	ВозвращаемаяСтруктура = Новый Структура;
	Для каждого СтрокаПараметра Из ТаблицаГлобальныхПараметров Цикл
		ВозвращаемаяСтруктура.Вставить(СтрокаПараметра.Параметр, СтрокаПараметра.Значение);
	КонецЦикла;
	
	Возврат ВозвращаемаяСтруктура;
	
КонецФункции

&НаКлиенте
Процедура УстановитьТипЗначенияПоля(ТекущийТип)
	
	ОписаниеТипов = Новый ОписаниеТипов(ТекущийТип);
	
	ТД = Элементы.ТаблицаГлобальныхПараметров.ТекущиеДанные;
	ТД.Значение = ОписаниеТипов.ПривестиЗначение(ТД.Значение);
	
	Элементы.ТаблицаГлобальныхПараметровЗначение.ОграничениеТипа = ОписаниеТипов;
	
	Элементы.ТаблицаГлобальныхПараметровЗначение.ВыбиратьТип     = Ложь;
	Элементы.ТаблицаГлобальныхПараметровЗначение.КнопкаВыбора    = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьФайлПараметров(ДействиеПослеВыбора)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Фильтр =  "Таблица 1С (*.mxl)|*.mxl|Файл xml (*.xml)|*.xml";
	ДиалогВыбораФайла.Расширение = "xml";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВыбораФайлапараметровДляЧтения", ЭтотОбъект, ДействиеПослеВыбора);
	
	ДиалогВыбораФайла.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораФайлапараметровДляЧтения(МассивФайлов, ДопПараметры) Экспорт
	
	Если МассивФайлов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивФайлов.Количество() < 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если НРег(Прав(МассивФайлов[0],3)) = "xml" Тогда
		Если ДопПараметры = "Добавление" Тогда
			СцТ_ДобавитьГлобальныеПараметрыИзФайла(МассивФайлов[0]);
		Иначе
			СцТ_ПрочитатьГлобальныеПараметрыИзФайла(МассивФайлов[0]);
		КонецЕсли;
		
	ИначеЕсли НРег(Прав(МассивФайлов[0],3)) = "mxl" Тогда
		Если ДопПараметры = "Добавление" Тогда
			СцТ_ДобавитьГлобальныеПараметрыИзТаблицы(МассивФайлов[0]);
		Иначе
			СцТ_ПрочитатьГлобальныеПараметрыИзТаблицы(МассивФайлов[0]);
		КонецЕсли;
		
	Иначе
		// Неизвестный формат
		ТекстПредупреждения = НСтр("ru = 'Выберите один из доступных типов файла и повторите операцию'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли









