

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	ДеревоЗначения = ПолучитьИзВременногоХранилища(Параметры.Адрес);
	
	ДеревоНастройки = Новый ДеревоЗначений;
	ДеревоНастройки.Колонки.Добавить("Имя");
	ДеревоНастройки.Колонки.Добавить("Синоним");
	ДеревоНастройки.Колонки.Добавить("Активность");
	ДеревоНастройки.Колонки.Добавить("Действие");
	ДеревоНастройки.Колонки.Добавить("Скрипт");
	ДеревоНастройки.Колонки.Добавить("ОтображатьСерым");
	ДеревоНастройки.Колонки.Добавить("ДопускаетсяНастройкаКлюча");
	ДеревоНастройки.Колонки.Добавить("Пустое");
	
	// Реквизиты шапки
	УзелРеквизитов = ДеревоЗначения.Строки.Найти("Реквизиты", "Имя");
	Если УзелРеквизитов <> Неопределено Тогда
		УзелРеквизитовДереваНастройки = ДеревоНастройки.Строки.Добавить();
		СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(УзелРеквизитовДереваНастройки, УзелРеквизитов);
		Для каждого СтрокаРеквизита Из УзелРеквизитов.Строки Цикл
			СтрокаРеквизитаДереваНастройки = УзелРеквизитовДереваНастройки.Строки.Добавить();
			СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(СтрокаРеквизитаДереваНастройки, СтрокаРеквизита);
		КонецЦикла;
	КонецЕсли;
	
	// Табличные части объектов
	УзелТабличныеЧасти = ДеревоЗначения.Строки.Найти("ТабличныеЧасти", "Имя");
	Если УзелТабличныеЧасти <> Неопределено Тогда
		УзелТЧДереваНастройки = ДеревоНастройки.Строки.Добавить();
		СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(УзелТЧДереваНастройки, УзелТабличныеЧасти);
		Для каждого УзелТабличнойЧасти Из УзелТабличныеЧасти.Строки Цикл
			СцТ_ЗаполнитьНастройкиТаблицы(УзелТЧДереваНастройки, УзелТабличнойЧасти);
		КонецЦикла;
	КонецЕсли;
	
	// Движения документов
	УзелДвижений = ДеревоЗначения.Строки.Найти("ДвиженияПоРегистрам", "Имя");
	Если УзелДвижений <> Неопределено Тогда
		Для каждого УзелДвижения Из УзелДвижений.Строки Цикл
			СцТ_ЗаполнитьНастройкиТаблицы(ДеревоНастройки, УзелДвижения);
		КонецЦикла;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоНастройки, "ДеревоНастройкиРеквизитов");
	
	Для каждого УзелВерхнегоУровня Из ДеревоНастройкиРеквизитов.ПолучитьЭлементы() Цикл
		СцТ_УстановитьОтображениеСерымУДочерних(УзелВерхнегоУровня);
		
		Если УзелВерхнегоУровня.Имя = Параметры.ИмяТекущегоУзла Тогда
			ИдентификаторУзлаПриОткрытии = УзелВерхнегоУровня.ПолучитьИдентификатор();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭлементыДерева = ДеревоНастройкиРеквизитов.ПолучитьЭлементы();
	Если ЭлементыДерева.Количество() = 1 Тогда
		Элементы.ДеревоНастройкиРеквизитов.Развернуть(ЭлементыДерева.Получить(0).ПолучитьИдентификатор());
	КонецЕсли;
	
	Для каждого УзелДерева Из ЭлементыДерева Цикл
		Если УзелДерева.Имя = "ТабличныеЧасти" Тогда
			Элементы.ДеревоНастройкиРеквизитов.Развернуть(УзелДерева.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
	Элементы.ДеревоНастройкиРеквизитов.ТекущаяСтрока = ИдентификаторУзлаПриОткрытии;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Настройки реквизитов были изменены. Применить изменения?'");
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Если НЕ ЗавершениеРаботы Тогда
			ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Настройки реквизитов были изменены. Применить изменения?'");
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Настройки реквизитов были изменены. При закрытии все несохраненные настройки будут утеряны'");
			
		КонецЕсли;
		
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОповещений

&НаКлиенте
Процедура СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПараметрыНастройки = Новый Структура("АдресВременногоХранилища", СцТ_ПодготовитьРезультатыНастройки());
		Оповестить("ОбновитьНастройкуШага", ПараметрыНастройки, ВладелецФормы);
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Закрытие окна без сохранения
		Модифицированность = Ложь;
		Закрыть();
		
		// Иначе - не нужно закрывать окно
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы_ДеревоНастройкиРеквизитов

&НаКлиенте
Процедура ДеревоНастройкиРеквизитовАктивностьПриИзменении(Элемент)
	
	УзелВерхнегоУровня = ДеревоНастройкиРеквизитов.НайтиПоИдентификатору(Элементы.ДеревоНастройкиРеквизитов.ТекущаяСтрока);
	СцТ_УстановитьОтображениеСерымУДочерних(УзелВерхнегоУровня);
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастройкиРеквизитовПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура РазвернутьДерево(Команда)
	
	Для каждого УзелДерева Из ДеревоНастройкиРеквизитов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоНастройкиРеквизитов.Развернуть(УзелДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДерево(Команда)
	
	Для каждого УзелДерева Из ДеревоНастройкиРеквизитов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоНастройкиРеквизитов.Свернуть(УзелДерева.ПолучитьИдентификатор());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	СцТ_УстановитьФлажкиАктивности(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	СцТ_УстановитьФлажкиАктивности(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	АдресВременногоХранилища = СцТ_ПодготовитьРезультатыНастройки();
	
	//Оповестить("ОбновитьНастройкуШага", ПараметрыНастройки, ВладелецФормы);
	
	Модифицированность = Ложь;
	
	Закрыть(АдресВременногоХранилища);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьНепустыеТаблицы(Команда)
	
	Для каждого Узел Из ДеревоНастройкиРеквизитов.ПолучитьЭлементы() Цикл
		Если Узел.Пустое = 1 Тогда
			Узел.Активность = 1;
			СцТ_УстановитьОтображениеСерымУДочерних(Узел);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтметкуСПустых(Команда)
	
	Для каждого Узел Из ДеревоНастройкиРеквизитов.ПолучитьЭлементы() Цикл
		Если Узел.Пустое = 2 Тогда
			Узел.Активность = 0;
			СцТ_УстановитьОтображениеСерымУДочерних(Узел);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(СтрокаНастройки, ЭталоннаяСтрока)
	
	СтрокаНастройки.Имя        = ЭталоннаяСтрока.Имя;
	СтрокаНастройки.Синоним    = ЭталоннаяСтрока.Синоним;
	СтрокаНастройки.Активность = ЭталоннаяСтрока.Активность;
	СтрокаНастройки.Действие   = ЭталоннаяСтрока.Действие;
	СтрокаНастройки.Скрипт     = ЭталоннаяСтрока.Скрипт;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ЗаполнитьНастройкиТаблицы(
	РодительскийУзелНастройкиТаблицы,
	ЭталонныйУзел)
	
	УзелТаблицыДереваНастройки = РодительскийУзелНастройкиТаблицы.Строки.Добавить();
	СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(УзелТаблицыДереваНастройки, ЭталонныйУзел);
	
	КоличествоСтрок = ЭталонныйУзел.Строки.Количество() - 1;
	УзелТаблицыДереваНастройки.Синоним = УзелТаблицыДереваНастройки.Синоним
		+ " ("
		+ СтрЗаменить(Строка(КоличествоСтрок), Символ(160), "")
		+ ")";
	УзелТаблицыДереваНастройки.Пустое = ?(КоличествоСтрок > 0, 1, 2);
	
	// Для таблиц используется только узел шапки, так нужны только колонки
	УзелШапки = ЭталонныйУзел.Строки.Найти("ШапкаТаблицы", "Имя");
	Если УзелШапки <> Неопределено Тогда
		Для каждого СтрокаРеквизита Из УзелШапки.Строки Цикл
			СтрокаРеквизитаДереваНастройки = УзелТаблицыДереваНастройки.Строки.Добавить();
			СцТ_ЗаполнитьДанныеСтрокиНастройкиПоЭталоннойСтроке(СтрокаРеквизитаДереваНастройки, СтрокаРеквизита);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СцТ_ПодготовитьРезультатыНастройки()
	
	Возврат ПоместитьВоВременноеХранилище(
		РеквизитФормыВЗначение("ДеревоНастройкиРеквизитов"),
		УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура СцТ_УстановитьФлажкиАктивности(ЗначениеФлажков)
	
	Для каждого ИдентификаторВыделеннойСтроки Из Элементы.ДеревоНастройкиРеквизитов.ВыделенныеСтроки Цикл
		Узел = ДеревоНастройкиРеквизитов.НайтиПоИдентификатору(ИдентификаторВыделеннойСтроки);
		Узел.Активность = ЗначениеФлажков;
		СцТ_УстановитьОтображениеСерымУДочерних(Узел);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СцТ_УстановитьОтображениеСерымУДочерних(УзелВерхнегоУровня)
	
	Для каждого УзелНижнегоУровня Из УзелВерхнегоУровня.ПолучитьЭлементы() Цикл
		УзелНижнегоУровня.ОтображатьСерым = НЕ УзелВерхнегоУровня.Активность;
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти