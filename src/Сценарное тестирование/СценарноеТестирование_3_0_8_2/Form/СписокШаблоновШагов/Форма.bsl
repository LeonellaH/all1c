
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;

//РежимОткрытия может принимать значения:
//	Выбор - для выбора шаблона
//	Новый - для добавления нового шаблона
//	Просмотр - редактирование списка шаблонов

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие("ПередЗакрытием", "ПередЗакрытиеБезРежимаСовместимости");
	КонецЕсли;
	
	ЭтаОбработка = РеквизитФормыВЗначение("Объект");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + ".Форма.";
	
	Если НЕ ПустаяСтрока(Параметры.АдресХранилищаТаблицыШаблоновШагов) Тогда
		ТаблицаШаблоновШаговНаСервере = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаТаблицыШаблоновШагов);
		ЗначениеВРеквизитФормы(ТаблицаШаблоновШаговНаСервере, "ТаблицаШаблоновШагов");
	КонецЕсли;
	
	РежимОткрытияФормы = Параметры.РежимОткрытия;
	ТипМетаданных      = Параметры.ТипМетаданных;
	ИмяМетаданных      = Параметры.ИмяМетаданных;
	
	Если Параметры.Свойство("Модифицированность") Тогда
		Модифицированность = Параметры.Модифицированность;
	КонецЕсли;
	
	// Заполнение дерева для отображения
	
	// Чтобы иметь возможность сортировки и поиска объектов метаданных 
	// заполнение выполняется в обычном дереве значений
	ДеревоЗначенийОМД = Новый ДеревоЗначений;
	ДеревоЗначенийОМД.Колонки.Добавить("Наименование" , Новый ОписаниеТипов("Строка"));
	ДеревоЗначенийОМД.Колонки.Добавить("ТипМетаданных", Новый ОписаниеТипов("Строка"));
	ДеревоЗначенийОМД.Колонки.Добавить("ИмяМетаданных", Новый ОписаниеТипов("Строка"));
	ДеревоЗначенийОМД.Колонки.Добавить("ТипУзла"      , Новый ОписаниеТипов("Строка"));
	ДеревоЗначенийОМД.Колонки.Добавить("ЕстьШаблоны"  , Новый ОписаниеТипов("Булево"));
	
	СписокТиповМетаданных = Новый СписокЗначений;
	СписокТиповМетаданных.Добавить("Справочники"            , НСтр("ru='Справочники'"));
	СписокТиповМетаданных.Добавить("Документы"              , НСтр("ru='Документы'"));
	СписокТиповМетаданных.Добавить("ПланыВидовХарактеристик", НСтр("ru='Планы видов характеристик'"));
	СписокТиповМетаданных.Добавить("ПланыСчетов"            , НСтр("ru='Планы счетов'"));
	СписокТиповМетаданных.Добавить("ПланыВидовРасчета"      , НСтр("ru='Планы видов расчета'"));
	СписокТиповМетаданных.Добавить("РегистрыСведений"       , НСтр("ru='Регистры сведений'"));
	СписокТиповМетаданных.Добавить("БизнесПроцессы"         , НСтр("ru='Бизнес-процессы'"));
	СписокТиповМетаданных.Добавить("Задачи"                 , НСтр("ru='Задачи'"));
	
	Для каждого ЭлементСписка Из СписокТиповМетаданных Цикл
		
		УзелГруппы = ДеревоЗначенийОМД.Строки.Добавить();
		УзелГруппы.Наименование  = ЭлементСписка.Представление;
		УзелГруппы.ТипМетаданных = ЭлементСписка.Значение;
		УзелГруппы.ТипУзла       = "Группа";
		УзелГруппы.ИмяМетаданных = "";
		
		Для каждого ТипОбъекта Из Метаданные[ЭлементСписка.Значение] Цикл
			УзелЭлемента = УзелГруппы.Строки.Добавить();
			УзелЭлемента.Наименование  = ТипОбъекта.Представление();
			УзелЭлемента.ТипМетаданных = ЭлементСписка.Значение;
			УзелЭлемента.ИмяМетаданных = ТипОбъекта.Имя;
			УзелЭлемента.ТипУзла       = "Элемент";
		КонецЦикла;
		
		УзелГруппы.Строки.Сортировать("Наименование");
		
	КонецЦикла;
	
	// Удаление шаблонов для объектов, отсутствующих в конфигурации
	КоличествоСтрок = ТаблицаШаблоновШагов.Количество();
	Если КоличествоСтрок > 0 Тогда
		Для ОбратныйИндекс = 1 По КоличествоСтрок Цикл
			СтрокаШаблона = ТаблицаШаблоновШагов.Получить(КоличествоСтрок - ОбратныйИндекс);
			Отбор = Новый Структура;
			Отбор.Вставить("ТипМетаданных", СтрокаШаблона.ТипМетаданных);
			Отбор.Вставить("ИмяМетаданных", СтрокаШаблона.ИмяМетаданных);
			НайденныеСтроки = ДеревоЗначенийОМД.Строки.НайтиСтроки(Отбор, Истина);
			Если НайденныеСтроки.Количество() = 0 Тогда
				ТаблицаШаблоновШагов.Удалить(КоличествоСтрок - ОбратныйИндекс);
			Иначе
				// отметка
				НайденныеСтроки[0].ЕстьШаблоны = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Визуализация
	
	ЗначениеВРеквизитФормы(ДеревоЗначенийОМД, "ОбъектыМетаданных");
	
	Если РежимОткрытияФормы = "Выбор" Тогда
		Элементы.ДобавляемыйШаблон.Видимость = Ложь;
		Элементы.СписокШаблонов.ТолькоПросмотр = Истина;
		Элементы.ПрименитьИЗакрыть.Заголовок = НСтр("ru='Выбрать'");
		Заголовок = НСтр("ru='Выбор шаблона шагов'");
		
	ИначеЕсли РежимОткрытияФормы = "Новый" Тогда
		Элементы.ДобавляемыйШаблон.Видимость = Истина;
		Элементы.ПрименитьИЗакрыть.Заголовок = НСтр("ru='Добавить и закрыть'");
		Заголовок = НСтр("ru='Добавление шаблона шагов'");
		СцТ_УстановитьНаименованиеНовогоШаблона();
		Элементы.ОбъектыМетаданных.Доступность = Ложь;
		
		СтруктураШаблона = Новый Структура("МассивШагов",Параметры.МассивШагов);
		
	Иначе
		// РежимОткрытияФормы = "Просмотр"
		Элементы.ДобавляемыйШаблон.Видимость = Ложь;
		Элементы.ПрименитьИЗакрыть.Заголовок = НСтр("ru='Применить и закрыть'");
		Заголовок = НСтр("ru='Шаблоны шагов'");
	КонецЕсли;
	
	// Нужно спозиционироваться в дереве на нужную запись
	Если НЕ ПустаяСтрока(ТипМетаданных)
		И НЕ ПустаяСтрока(ИмяМетаданных) Тогда
		
		УзелТипаМетаданных = Неопределено;
		Для каждого УзелТипа Из ОбъектыМетаданных.ПолучитьЭлементы() Цикл
			Если УзелТипа.ТипМетаданных = Параметры.ТипМетаданных Тогда
				УзелТипаМетаданных = УзелТипа;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		УзелИмениМетаданных = Неопределено;
		Если УзелТипаМетаданных <> Неопределено Тогда
			Для каждого УзелИмени Из УзелТипаМетаданных.ПолучитьЭлементы() Цикл
				Если УзелИмени.ИмяМетаданных = Параметры.ИмяМетаданных Тогда
					ТекущийЭлемент = Элементы.ОбъектыМетаданных;
					Элементы.ОбъектыМетаданных.ТекущаяСтрока =УзелИмени.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СцТ_ИзменениеШаблонаШага" Тогда
		
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ТипМетаданных", Параметр.ТипМетаданных);
		СтруктураОтбора.Вставить("ИмяМетаданных", Параметр.ИмяМетаданных);
		СтруктураОтбора.Вставить("Наименование" , Параметр.Наименование);
		
		НайденныеШаблоны = ТаблицаШаблоновШагов.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеШаблоны.Количество() > 0 Тогда
			ИзменяемыйШаблон = НайденныеШаблоны[0];
			ИзменяемыйШаблон.Значение.Очистить();
			Для каждого НастройкаШага Из Параметр.МассивШаблоновШага Цикл
				ШаблонШага = ИзменяемыйШаблон.Значение.Добавить();
				ШаблонШага.Наименование           = НастройкаШага.Наименование;
				ШаблонШага.ТипШага                = НастройкаШага.ТипШага;
				ШаблонШага.Описание               = НастройкаШага.Описание;
				ШаблонШага.НеВыводитьАвтоописание = НастройкаШага.НеВыводитьАвтоописание;
				ШаблонШага.Активность             = НастройкаШага.Активность;
				ШаблонШага.ВыполнитьВручную       = НастройкаШага.ВыполнитьВручную;
				ШаблонШага.Цвет                   = НастройкаШага.Цвет;
				ШаблонШага.Комментарий            = НастройкаШага.Комментарий;
				ШаблонШага.ДанныеКартинки         = НастройкаШага.ДанныеКартинки;
				СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(ШаблонШага.Значение, НастройкаШага.Значение);
			КонецЦикла;
		КонецЕсли;
		
		Модифицированность = Истина;
		
	ИначеЕсли ИмяСобытия = "СцТ_ПринудительноеЗакрытиеВсехФормОбработки" Тогда
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		
		ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Сохранить изменения?'");
		ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Модифицированность Тогда
		Если ЗавершениеРаботы Тогда
			
			ОбработчикОповещения = Новый ОписаниеОповещения("СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений", ЭтотОбъект);
			ТекстВопроса = НСтр("ru = 'Сохранить изменения?'");
			ПоказатьВопрос(ОбработчикОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0);
		Иначе
			ТекстВопроса = НСтр("ru = 'Список шаблонов шагов изменен. При закрытии все изменения будут утеряны'");
		КонецЕсли;
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиОповещения

&НаКлиенте
Процедура СцТ_ОбработчикОтветаНаВопросОСохраненииИзменений(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СцТ_ОсновноеДействие();
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Закрытие окна без сохранения
		Модифицированность = Ложь;
		Закрыть();
		
		// Иначе, при отмене - не нужно закрывать окно
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийФормы_ОбъектыМетаданных

&НаКлиенте
Процедура СписокШаблоновПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Наименование = ТекущиеДанные.Наименование;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипМетаданных", ТипМетаданных);
	Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
	Отбор.Вставить("Наименование" , Наименование);
	
	УстановитьНовыйОсновной = Ложь;
	
	НайденныеСтроки = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		УстановитьНовыйОсновной = НайденныеСтроки[0].Основной;
		ТаблицаШаблоновШагов.Удалить(НайденныеСтроки[0]);
	КонецЕсли;
	
	Если УстановитьНовыйОсновной Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("ТипМетаданных", ТипМетаданных);
		Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
		НайденныеСтроки = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденныеСтроки[0].Основной = Истина;
			
			Отбор = Новый Структура;
			Отбор.Вставить("Наименование", НайденныеСтроки[0].Наименование);
			СтрокиСписка = СписокШаблонов.НайтиСтроки(Отбор);
			Если СтрокиСписка.Количество()> 0 Тогда
				СтрокиСписка[0].Основной = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыМетаданныхПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = Элемент.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СцТ_ОбновитьСписокНастроек();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы_СписокШаблонов

&НаКлиенте
Процедура СписокШаблоновПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновНаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СписокШаблонов.ТекущиеДанные;
	СтароеНазвание = ТекущиеДанные.Наименование;
	
	Если Текст <> СтароеНазвание Тогда
		// Проверка, что наименование уникальное
		СтруктураОтбора = Новый Структура("Наименование", Текст);
		Если СписокШаблонов.НайтиСтроки(СтруктураОтбора).Количество() > 0 Тогда
			СтандартнаяОбработка = Ложь;
			Текст = СтароеНазвание;
			ТекстСообщения = НСтр("ru = 'Не уникальное наименование'");
			ПоказатьПредупреждение(, ТекстСообщения);
		Иначе
			// Применение изменений
			Отбор = Новый Структура;
			Отбор.Вставить("ТипМетаданных", ТипМетаданных);
			Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
			Отбор.Вставить("Наименование" , СтароеНазвание);
			
			СтрокиТаблицыШаблонов = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
			Если СтрокиТаблицыШаблонов.Количество() > 0 Тогда
				СтрокиТаблицыШаблонов[0].Наименование = Текст;
			КонецЕсли;
			
			// Изменение наименования в списке выбора наименования
			// нового шаблона
			Если РежимОткрытияФормы = "Новый" Тогда
				ЭлементСпискаВыбора = Элементы.НаименованиеШаблона.СписокВыбора.НайтиПоЗначению(СтароеНазвание);
				Если ЭлементСпискаВыбора <> Неопределено Тогда
					ЭлементСпискаВыбора.Значение      = Текст;
					ЭлементСпискаВыбора.Представление = Текст;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура ПрименитьИЗакрыть(Команда)
	
	СцТ_ОсновноеДействие();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	
	СцТ_ОсновноеДействие(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьШаблон(Команда)
	
	СцТ_ПоказатьТекущийШаг();
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОсновным(Команда)
	
	ТекущиеДанные = Элементы.СписокШаблонов.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТекущиеДанные.Основной Тогда
		
		// Нужно найти основной шаблон и снять у него флажок
		Отбор = Новый Структура;
		Отбор.Вставить("ТипМетаданных", ТипМетаданных);
		Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
		Отбор.Вставить("Основной"     , Истина);
		
		СтрокиТаблицыШаблонов = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
		Если СтрокиТаблицыШаблонов.Количество() > 0 Тогда
			СтрокиТаблицыШаблонов[0].Основной = Ложь;
		КонецЕсли;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Основной"     , Истина);
		
		СтрокиСпискаШаблонов = СписокШаблонов.НайтиСтроки(Отбор);
		Для каждого СтрокаСпискаШаблонов Из СтрокиСпискаШаблонов Цикл
			Если СтрокаСпискаШаблонов.Наименование <> ТекущиеДанные.Наименование Тогда
				СтрокаСпискаШаблонов.Основной = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		// Установка отметки в таблице шаблонов
		Отбор = Новый Структура;
		Отбор.Вставить("ТипМетаданных", ТипМетаданных);
		Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
		Отбор.Вставить("Наименование" , ТекущиеДанные.Наименование);
		
		СтрокиТаблицыШаблонов = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
		Если СтрокиТаблицыШаблонов.Количество() > 0 Тогда
			СтрокиТаблицыШаблонов[0].Основной = Истина;
		КонецЕсли;
		
		ТекущиеДанные.Основной = Истина;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

&НаКлиенте
Процедура СцТ_ОбновитьСписокНастроек()
	
	ТекущиеДанныеДереваМетаданных = Элементы.ОбъектыМетаданных.ТекущиеДанные;
	
	СписокШаблонов.Очистить();
	
	Если ТекущиеДанныеДереваМетаданных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипМетаданных = ТекущиеДанныеДереваМетаданных.ТипМетаданных;
	ИмяМетаданных = ТекущиеДанныеДереваМетаданных.ИмяМетаданных;
	
	Если ПустаяСтрока(ИмяМетаданных) Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура;
	Отбор.Вставить("ТипМетаданных", ТипМетаданных);
	Отбор.Вставить("ИмяМетаданных", ИмяМетаданных);
	
	НайденныеСтроки = ТаблицаШаблоновШагов.НайтиСтроки(Отбор);
	
	Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
		
		НоваяСтрока = СписокШаблонов.Добавить();
		НоваяСтрока.Наименование = НайденнаяСтрока.Наименование;
		НоваяСтрока.Основной     = НайденнаяСтрока.Основной;
		НоваяСтрока.Комментарий  = НайденнаяСтрока.Комментарий;
		
		Если РежимОткрытияФормы = "Новый" Тогда
			Элементы.НаименованиеШаблона.СписокВыбора.Добавить(НоваяСтрока.Наименование);
		КонецЕсли;
		
	КонецЦикла;
	
	Если СписокШаблонов.Количество() <> 0 Тогда
		
		// Позиционирование на основной записи
		Отбор = Новый Структура;
		Отбор.Вставить("Основной", Истина);
		ОсновныеСтроки = СписокШаблонов.НайтиСтроки(Отбор);
		
		Если ОсновныеСтроки.Количество() = 0 Тогда
			ОсновнаяСтрока = СписокШаблонов[0];
		Иначе
			ОсновнаяСтрока = ОсновныеСтроки[0];
		КонецЕсли;
		
		Элементы.СписокШаблонов.ТекущаяСтрока = ОсновнаяСтрока.ПолучитьИдентификатор();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(
	УзелДереваФормы,
	ДеревоСтруктур)
	
	СтрокиДереваФормы = УзелДереваФормы.ПолучитьЭлементы();
	Для каждого СтрокаДереваСтруктур Из ДеревоСтруктур.ИСТЗ_Строки Цикл
		СтрокаДереваФормы = СтрокиДереваФормы.Добавить();
		Для каждого КлючЗначение Из СтрокаДереваСтруктур Цикл
			Если КлючЗначение.Ключ <> "ИСТЗ_Строки" Тогда
				СтрокаДереваФормы[КлючЗначение.Ключ] = КлючЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(СтрокаДереваФормы, СтрокаДереваСтруктур);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ДобавитьНовыйШаблон()
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТипМетаданных", ТипМетаданных);
	СтруктураОтбора.Вставить("ИмяМетаданных", ИмяМетаданных);
	СтруктураОтбора.Вставить("Наименование" , Наименованиешаблона);
	
	Основной = (СписокШаблонов.Количество() = 0);
	
	НайденныеШаблоны = ТаблицаШаблоновШагов.НайтиСтроки(СтруктураОтбора);
	Если НайденныеШаблоны.Количество() > 0 Тогда
		ТекстСообщения = НСтр("ru = 'Шаблон с именем ""%1"" уже существует. Заменить?'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%1", Наименованиешаблона);
		ПоказатьВопрос(
			Новый ОписаниеОповещения("СцТ_ДобавитьНовыйШаблон_НаКлиенте",
				ЭтотОбъект,
				НайденныеШаблоны),
			ТекстСообщения,
			РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;
	
	СцТ_ДобавитьНовыйШаблон_НаКлиенте(КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ДобавитьНовыйШаблон_НаКлиенте(Ответ, НайденныеШаблоны = Неопределено) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ТекущийЭлемент = Элементы.НаименованиеШаблона;
		Возврат;
	КонецЕсли;
	
	Основной = Ложь;
	
	Если НайденныеШаблоны <> Неопределено Тогда
		
		Если НайденныеШаблоны[0].Основной Тогда
			Основной = Истина;
		КонецЕсли;
		
		ТаблицаШаблоновШагов.Удалить(НайденныеШаблоны[0]);
		
	КонецЕсли;
	
	// Непосредственное добавление шаблона
	НовыйШаблон = ТаблицаШаблоновШагов.Добавить();
	НовыйШаблон.Наименование  = Наименованиешаблона;
	НовыйШаблон.ТипМетаданных = ТипМетаданных;
	НовыйШаблон.ИмяМетаданных = ИмяМетаданных;
	НовыйШаблон.Основной      = Основной;
	
	МассивСтруктурШагов = СтруктураШаблона.МассивШагов;
	Для каждого СтруктураШаблонаШага Из МассивСтруктурШагов Цикл
		НовыйШагШаблона = НовыйШаблон.Значение.Добавить();
		НовыйШагШаблона.Наименование           = СтруктураШаблонаШага.Наименование;
		НовыйШагШаблона.ТипШага                = СтруктураШаблонаШага.ТипШага;
		НовыйШагШаблона.Описание               = СтруктураШаблонаШага.Описание;
		НовыйШагШаблона.НеВыводитьАвтоописание = СтруктураШаблонаШага.НеВыводитьАвтоописание;
		НовыйШагШаблона.Активность             = СтруктураШаблонаШага.Активность;
		НовыйШагШаблона.ВыполнитьВручную       = СтруктураШаблонаШага.ВыполнитьВручную;
		НовыйШагШаблона.Цвет                   = СтруктураШаблонаШага.Цвет;
		НовыйШагШаблона.Комментарий            = СтруктураШаблонаШага.Комментарий;
		
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(НовыйШагШаблона.Значение, СтруктураШаблонаШага.Значение);
		
	КонецЦикла;
	
	СтруктураОповещения = СцТ_ПодготовитьСтруктуруОповещения_НаСервере();
	Оповестить("ИзменениеИВыборШаблонаШагов", СтруктураОповещения);
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ОсновноеДействие(ЗакрытьФорму = Истина)
	
	Если РежимОткрытияФормы = "Новый" Тогда
		// Добавление нового шаблона
		
		СцТ_ДобавитьНовыйШаблон();
		
	ИначеЕсли РежимОткрытияФормы = "Просмотр" Тогда
		
		СтруктураОповещения = СцТ_ПодготовитьСтруктуруОповещения_НаСервере();
		Оповестить("ИзменениеИВыборШаблонаШагов", СтруктураОповещения);
		
		Модифицированность = Ложь;
		Закрыть();
		
	ИначеЕсли РежимОткрытияФормы = "Выбор" Тогда
		
		СтруктураОповещения = Новый Структура;
		
		// Если внесены изменения в шаблон, то их нужно сохранить
		Если Модифицированность Тогда
			СтруктураОповещения = СцТ_ПодготовитьСтруктуруОповещения_НаСервере();
		КонецЕсли;
		
		// Проверка выбора
		ТекущийОбъектМетаданных = Элементы.ОбъектыМетаданных.ТекущиеДанные;
		Если ТекущийОбъектМетаданных = Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Не выбран объект метаданных'");
			ПоказатьПредупреждение(,ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		Если ПустаяСтрока(ТекущийОбъектМетаданных.ТипМетаданных)
			ИЛИ ПустаяСтрока(ТекущийОбъектМетаданных.ИмяМетаданных) Тогда
			ТекстСообщения = НСтр("ru = 'Не выбран объект метаданных'");
			ПоказатьПредупреждение(,ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		ТекущийШаблон = Элементы.СписокШаблонов.ТекущиеДанные;
		
		Если ТекущийШаблон = Неопределено
			ИЛИ ПустаяСтрока(ТекущийШаблон.Наименование) Тогда
			ТекстСообщения = НСтр("ru = 'Не выбран шаблон'");
			ПоказатьПредупреждение(,ТекстСообщения);
			Возврат;
		КонецЕсли;
		
		// Подготовка структуры шаблона
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("ТипМетаданных", ТипМетаданных);
		СтруктураОтбора.Вставить("ИмяМетаданных", ИмяМетаданных);
		СтруктураОтбора.Вставить("Наименование" , ТекущийШаблон.Наименование);
		
		МассивШаблоновШага = СцТ_ПолучитьМассивШаблоновШага(СтруктураОтбора);
		
		СтруктураОповещения.Вставить("МассивШаблоновШага", МассивШаблоновШага);
		Оповестить("ИзменениеИВыборШаблонаШагов", СтруктураОповещения);
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СцТ_ПолучитьМассивШаблоновШага(СтруктураОтбора)
	
	КолонкиДерева = Новый Массив;
	КолонкиДерева.Добавить("Имя");
	КолонкиДерева.Добавить("Синоним");
	КолонкиДерева.Добавить("Активность");
	КолонкиДерева.Добавить("Действие");
	КолонкиДерева.Добавить("Скрипт");
	КолонкиДерева.Добавить("ТипУзла");
	КолонкиДерева.Добавить("Кл");
	
	МассивШаблоновШага = Новый Массив;
	СтрокиТаблицыШаблонов = ТаблицаШаблоновШагов.НайтиСтроки(СтруктураОтбора);
	Если СтрокиТаблицыШаблонов.Количество() > 0 Тогда
		ШагиШаблона = СтрокиТаблицыШаблонов[0].Значение;
		
		Для каждого ШагШаблона Из ШагиШаблона Цикл
			СтруктураДанныхШага = Новый Структура;
			СтруктураДанныхШага.Вставить("Наименование"          , ШагШаблона.Наименование);
			СтруктураДанныхШага.Вставить("ТипШага"               , ШагШаблона.ТипШага);
			СтруктураДанныхШага.Вставить("Описание"              , ШагШаблона.Описание);
			СтруктураДанныхШага.Вставить("НеВыводитьАвтоописание", ШагШаблона.НеВыводитьАвтоописание);
			СтруктураДанныхШага.Вставить("Активность"            , ШагШаблона.Активность);
			СтруктураДанныхШага.Вставить("ВыполнитьВручную"      , ШагШаблона.ВыполнитьВручную);
			СтруктураДанныхШага.Вставить("Цвет"                  , ШагШаблона.Цвет);
			СтруктураДанныхШага.Вставить("Комментарий"           , ШагШаблона.Комментарий);
			СтруктураДанныхШага.Вставить("ДанныеКартинки"        , ШагШаблона.ДанныеКартинки);
			СтруктураДанныхШага.Вставить("Значение",
				СцТ_ГлавнаяФорма.СцТ_ДеревоформыВДеревоСтруктур(ШагШаблона.Значение, КолонкиДерева));
			
			МассивШаблоновШага.Добавить(СтруктураДанныхШага);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивШаблоновШага;
	
КонецФункции

&НаСервере
Процедура СцТ_УстановитьНаименованиеНовогоШаблона()
	
	Элементы.НаименованиеШаблона.СписокВыбора.Очистить();
	
	СтруктураОтбора = Новый Структура("ТипМетаданных, ИмяМетаданных", ТипМетаданных, ИмяМетаданных);
	СуществующиеШаблоныОбъектаМД = ТаблицаШаблоновШагов.НайтиСтроки(СтруктураОтбора);
	
	Если СуществующиеШаблоныОбъектаМД.Количество() = 0 Тогда
		НаименованиеШаблона = "Новый шаблон";
	Иначе
		НаименованиеШаблона = СцТ_ПодобратьНаименованиеШаблона(СуществующиеШаблоныОбъектаМД, "Новый шаблон");
	КонецЕсли;
	
	Элементы.НаименованиеШаблона.СписокВыбора.Добавить(НаименованиеШаблона);
	
КонецПроцедуры

&НаСервере
Функция СцТ_ПодобратьНаименованиеШаблона(
	СуществующиеШаблоныОбъектаМД,
	ШаблонНаименования,
	Итерация = 0)
	
	Если Итерация = 0 Тогда
		ПробноеНаименование = ШаблонНаименования;
	Иначе
		ПробноеНаименование = ШаблонНаименования + " - " + Строка(Итерация);
	КонецЕсли;
	
	ЕстьСовпадение = Ложь;
	Для каждого СуществующаяСтрока Из СуществующиеШаблоныОбъектаМД Цикл
		Если ПробноеНаименование = СуществующаяСтрока.Наименование Тогда
			ЕстьСовпадение = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьСовпадение Тогда
		Возврат СцТ_ПодобратьНаименованиеШаблона(
			СуществующиеШаблоныОбъектаМД,
			ШаблонНаименования,
			Итерация + 1);
	Иначе
		Возврат ПробноеНаименование;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция СцТ_ПодготовитьСтруктуруОповещения_НаСервере()
	
	СтруктураОповещения = Новый Структура;
	
	Если ТаблицаШаблоновШагов.Количество() > 0 Тогда
		ТаблицаШаблоновШаговНаСервере = РеквизитФормыВЗначение("ТаблицаШаблоновШагов");
		АдресХранилища = ПоместитьВоВременноеХранилище(ТаблицаШаблоновШаговНаСервере, Новый УникальныйИдентификатор);
		СтруктураОповещения.Вставить("АдресХранилищаТаблицыШаблоновШагов", АдресХранилища);
	Иначе
		СтруктураОповещения.Вставить("АдресХранилищаТаблицыШаблоновШагов", "");
	КонецЕсли;
	
	Возврат СтруктураОповещения;
	
КонецФункции

&НаКлиенте
Процедура СцТ_ПоказатьТекущийШаг()
	
	ТекущаяСтрока = Элементы.СписокШаблонов.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ТипМетаданных", ТипМетаданных);
	СтруктураОтбора.Вставить("ИмяМетаданных", ИмяМетаданных);
	СтруктураОтбора.Вставить("Наименование" , ТекущаяСтрока.Наименование);
	
	НайденныеСтрокиШаблонов = ТаблицаШаблоновШагов.НайтиСтроки(СтруктураОтбора);
	Если НайденныеСтрокиШаблонов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТипМетаданных", ТипМетаданных);
	СтруктураПараметров.Вставить("ИмяМетаданных", ИмяМетаданных);
	СтруктураПараметров.Вставить("Наименование" , ТекущаяСтрока.Наименование);
	
	МассивШаблоновШага = СцТ_ПолучитьМассивШаблоновШага(СтруктураПараметров);
	
	СтруктураПараметров.Вставить("МассивШаблоновШага", МассивШаблоновШага);
	СтруктураПараметров.Вставить("РежимСовместимости838", СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ФормаШаблонаШагов = ОткрытьФорму(ПутьКФормам + "ОтображениеШаблонаШагов", СтруктураПараметров, ЭтотОбъект);
	ФормаШаблонаШагов.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	
КонецПроцедуры

#КонецОбласти
