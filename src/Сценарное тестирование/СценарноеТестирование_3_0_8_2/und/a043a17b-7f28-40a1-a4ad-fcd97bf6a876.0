{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,1,
{"ru","Настройка шага"}
},0,0,1,1,1,0,1,0,
{5,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",52dbb775-1631-4fd5-8c55-1615b5881dac,"ПередЗакрытием",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",ca21cd18-35b2-4281-b5c8-016ecc8da8ac,"ПриЗакрытии",0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПрименитьИЗакрыть",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",0,0,1,
{10,
{153,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПрименитьИЗакрытьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{567,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ПрименитьИзменения",
{1,0},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{568,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПрименитьИзмененияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{945,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ХранимыеДанныеШага",
{1,0},1,
{30,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{946,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ХранимыеДанныеШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1082,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ФормаНастроитьРеквизиты",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1083,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаНастроитьРеквизитыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаШапка",
{1,1,
{"ru","Группа шапка"}
},
{1,1,
{"ru","Группа шапка"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},5,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{976,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаНомерШага",
{1,1,
{"ru","Группа номер шага"}
},
{1,1,
{"ru","Группа номер шага"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,1,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"НомерШага",1,0,
{1,0},
{1,0},
{1,
{2}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,0,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НомерШагаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{158,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НомерШагаExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{977,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНомерШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{973,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НадписьРазделительНомераШага",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{974,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"НадписьРазделительНомераШагаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{975,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НадписьРазделительНомераШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"Активность",4,0,
{1,0},
{1,1,
{"ru","Активность шага"}
},
{1,
{10}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,1,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"АктивностьПриИзменении",0,0},1,
{21,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"АктивностьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{159,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"АктивностьExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1073,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДШ_ВыполнитьВручную",4,0,
{1,0},
{1,0},
{1,
{14}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,0,0},1,
{21,
{1074,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДШ_ВыполнитьВручнуюКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1075,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДШ_ВыполнитьВручнуюРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{947,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СтраницыГрупп",
{1,1,
{"ru","Страницы групп"}
},
{1,1,
{"ru","Страницы групп"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0,0,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{949,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаЗаполненнойГруппы",
{1,1,
{"ru","Страница заполненной группы"}
},
{1,1,
{"ru","Страница заполненной группы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{470,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},1,"ПредставлениеГруппы",1,0,
{1,0},
{1,1,
{"ru","Автогруппа шага"}
},
{1,
{69}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,0,0,2,2,2,
{1,0},1,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{1,eba5f295-c611-4dd9-84b5-22911ad60c53,"ПредставлениеГруппыНажатие",0,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,0,0},1,
{21,
{471,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ПредставлениеГруппыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{472,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПредставлениеГруппыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{950,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаЗаполненнойГруппыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{951,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницаПустойГруппы",
{1,1,
{"ru","Страница пустой группы"}
},
{1,1,
{"ru","Страница пустой группы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{953,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Декорация1",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{954,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"Декорация1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{955,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Декорация1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{952,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаПустойГруппыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{948,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыГруппРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{157,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ГруппаШапкаExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Наименование",1,0,
{1,0},
{1,0},
{1,
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},1,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"НаименованиеПриИзменении",0,0},1,
{21,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"НаименованиеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{509,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"НаименованиеКонтекстноеМенюОбновитьАвтоназвание",
{1,0},1,
{27,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{510,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НаименованиеКонтекстноеМенюОбновитьАвтоназваниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{162,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"НаименованиеExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"Страницы",
{1,1,
{"ru","Страницы"}
},
{1,1,
{"ru","Страницы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{1,526c501f-ed3f-4db4-8731-fd0324707501,"СтраницыПриСменеСтраницы",0,0}
},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{978,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"Страница_ДанныеШага",
{1,1,
{"ru","Структура объекта (записи)"}
},
{1,1,
{"ru","Страница данные шага"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1025,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СтраницыСтруктурыОбъекта",
{1,1,
{"ru","Страницы структуры объекта"}
},
{1,1,
{"ru","Страницы структуры объекта"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,0,0}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1027,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыДанных_Реквизиты",
{1,1,
{"ru","Реквизиты"}
},
{1,1,
{"ru","Страницы данных реквизиты"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{49,
{1031,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},"ТаблицаРеквизитов",0,0,1,
{1,0},
{1,0},
{1,
{157}
},0,1,0,0,0,1,0,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{2,ab930362-ff94-4dcb-ad16-188805d23e3c,"КлючЗаписиРегистраПередНачаломИзменения",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТаблицаРеквизитовПриИзменении",0,0},
{0},1,
{21,
{1032,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаРеквизитовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1069,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"КМ_ТР_СтруктураИдентификацииТаблицы",
{1,0},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAMAAAAoLQ9TAAAACXBIWXMAAAsTAAAL
EwEAmpwYAAAKT2lDQ1BQaG90b3Nob3AgSUNDIHByb2ZpbGUAAHjanVNnVFPpFj33
3vRCS4iAlEtvUhUIIFJCi4AUkSYqIQkQSoghodkVUcERRUUEG8igiAOOjoCMFVEs
DIoK2AfkIaKOg6OIisr74Xuja9a89+bN/rXXPues852zzwfACAyWSDNRNYAMqUIe
EeCDx8TG4eQuQIEKJHAAEAizZCFz/SMBAPh+PDwrIsAHvgABeNMLCADATZvAMByH
/w/qQplcAYCEAcB0kThLCIAUAEB6jkKmAEBGAYCdmCZTAKAEAGDLY2LjAFAtAGAn
f+bTAICd+Jl7AQBblCEVAaCRACATZYhEAGg7AKzPVopFAFgwABRmS8Q5ANgtADBJ
V2ZIALC3AMDOEAuyAAgMADBRiIUpAAR7AGDIIyN4AISZABRG8lc88SuuEOcqAAB4
mbI8uSQ5RYFbCC1xB1dXLh4ozkkXKxQ2YQJhmkAuwnmZGTKBNA/g88wAAKCRFRHg
g/P9eM4Ors7ONo62Dl8t6r8G/yJiYuP+5c+rcEAAAOF0ftH+LC+zGoA7BoBt/qIl
7gRoXgugdfeLZrIPQLUAoOnaV/Nw+H48PEWhkLnZ2eXk5NhKxEJbYcpXff5nwl/A
V/1s+X48/Pf14L7iJIEyXYFHBPjgwsz0TKUcz5IJhGLc5o9H/LcL//wd0yLESWK5
WCoU41EScY5EmozzMqUiiUKSKcUl0v9k4t8s+wM+3zUAsGo+AXuRLahdYwP2SycQ
WHTA4vcAAPK7b8HUKAgDgGiD4c93/+8//UegJQCAZkmScQAAXkQkLlTKsz/HCAAA
RKCBKrBBG/TBGCzABhzBBdzBC/xgNoRCJMTCQhBCCmSAHHJgKayCQiiGzbAdKmAv
1EAdNMBRaIaTcA4uwlW4Dj1wD/phCJ7BKLyBCQRByAgTYSHaiAFiilgjjggXmYX4
IcFIBBKLJCDJiBRRIkuRNUgxUopUIFVIHfI9cgI5h1xGupE7yAAygvyGvEcxlIGy
UT3UDLVDuag3GoRGogvQZHQxmo8WoJvQcrQaPYw2oefQq2gP2o8+Q8cwwOgYBzPE
bDAuxsNCsTgsCZNjy7EirAyrxhqwVqwDu4n1Y8+xdwQSgUXACTYEd0IgYR5BSFhM
WE7YSKggHCQ0EdoJNwkDhFHCJyKTqEu0JroR+cQYYjIxh1hILCPWEo8TLxB7iEPE
NyQSiUMyJ7mQAkmxpFTSEtJG0m5SI+ksqZs0SBojk8naZGuyBzmULCAryIXkneTD
5DPkG+Qh8lsKnWJAcaT4U+IoUspqShnlEOU05QZlmDJBVaOaUt2ooVQRNY9aQq2h
tlKvUYeoEzR1mjnNgxZJS6WtopXTGmgXaPdpr+h0uhHdlR5Ol9BX0svpR+iX6AP0
dwwNhhWDx4hnKBmbGAcYZxl3GK+YTKYZ04sZx1QwNzHrmOeZD5lvVVgqtip8FZHK
CpVKlSaVGyovVKmqpqreqgtV81XLVI+pXlN9rkZVM1PjqQnUlqtVqp1Q61MbU2ep
O6iHqmeob1Q/pH5Z/YkGWcNMw09DpFGgsV/jvMYgC2MZs3gsIWsNq4Z1gTXEJrHN
2Xx2KruY/R27iz2qqaE5QzNKM1ezUvOUZj8H45hx+Jx0TgnnKKeX836K3hTvKeIp
G6Y0TLkxZVxrqpaXllirSKtRq0frvTau7aedpr1Fu1n7gQ5Bx0onXCdHZ4/OBZ3n
U9lT3acKpxZNPTr1ri6qa6UbobtEd79up+6Ynr5egJ5Mb6feeb3n+hx9L/1U/W36
p/VHDFgGswwkBtsMzhg8xTVxbzwdL8fb8VFDXcNAQ6VhlWGX4YSRudE8o9VGjUYP
jGnGXOMk423GbcajJgYmISZLTepN7ppSTbmmKaY7TDtMx83MzaLN1pk1mz0x1zLn
m+eb15vft2BaeFostqi2uGVJsuRaplnutrxuhVo5WaVYVVpds0atna0l1rutu6cR
p7lOk06rntZnw7Dxtsm2qbcZsOXYBtuutm22fWFnYhdnt8Wuw+6TvZN9un2N/T0H
DYfZDqsdWh1+c7RyFDpWOt6azpzuP33F9JbpL2dYzxDP2DPjthPLKcRpnVOb00dn
F2e5c4PziIuJS4LLLpc+Lpsbxt3IveRKdPVxXeF60vWdm7Obwu2o26/uNu5p7ofc
n8w0nymeWTNz0MPIQ+BR5dE/C5+VMGvfrH5PQ0+BZ7XnIy9jL5FXrdewt6V3qvdh
7xc+9j5yn+M+4zw33jLeWV/MN8C3yLfLT8Nvnl+F30N/I/9k/3r/0QCngCUBZwOJ
gUGBWwL7+Hp8Ib+OPzrbZfay2e1BjKC5QRVBj4KtguXBrSFoyOyQrSH355jOkc5p
DoVQfujW0Adh5mGLw34MJ4WHhVeGP45wiFga0TGXNXfR3ENz30T6RJZE3ptnMU85
ry1KNSo+qi5qPNo3ujS6P8YuZlnM1VidWElsSxw5LiquNm5svt/87fOH4p3iC+N7
F5gvyF1weaHOwvSFpxapLhIsOpZATIhOOJTwQRAqqBaMJfITdyWOCnnCHcJnIi/R
NtGI2ENcKh5O8kgqTXqS7JG8NXkkxTOlLOW5hCepkLxMDUzdmzqeFpp2IG0yPTq9
MYOSkZBxQqohTZO2Z+pn5mZ2y6xlhbL+xW6Lty8elQfJa7OQrAVZLQq2QqboVFoo
1yoHsmdlV2a/zYnKOZarnivN7cyzytuQN5zvn//tEsIS4ZK2pYZLVy0dWOa9rGo5
sjxxedsK4xUFK4ZWBqw8uIq2Km3VT6vtV5eufr0mek1rgV7ByoLBtQFr6wtVCuWF
fevc1+1dT1gvWd+1YfqGnRs+FYmKrhTbF5cVf9go3HjlG4dvyr+Z3JS0qavEuWTP
ZtJm6ebeLZ5bDpaql+aXDm4N2dq0Dd9WtO319kXbL5fNKNu7g7ZDuaO/PLi8ZafJ
zs07P1SkVPRU+lQ27tLdtWHX+G7R7ht7vPY07NXbW7z3/T7JvttVAVVN1WbVZftJ
+7P3P66Jqun4lvttXa1ObXHtxwPSA/0HIw6217nU1R3SPVRSj9Yr60cOxx++/p3v
dy0NNg1VjZzG4iNwRHnk6fcJ3/ceDTradox7rOEH0x92HWcdL2pCmvKaRptTmvtb
Ylu6T8w+0dbq3nr8R9sfD5w0PFl5SvNUyWna6YLTk2fyz4ydlZ19fi753GDborZ7
52PO32oPb++6EHTh0kX/i+c7vDvOXPK4dPKy2+UTV7hXmq86X23qdOo8/pPTT8e7
nLuarrlca7nuer21e2b36RueN87d9L158Rb/1tWeOT3dvfN6b/fF9/XfFt1+cif9
zsu72Xcn7q28T7xf9EDtQdlD3YfVP1v+3Njv3H9qwHeg89HcR/cGhYPP/pH1jw9D
BY+Zj8uGDYbrnjg+OTniP3L96fynQ89kzyaeF/6i/suuFxYvfvjV69fO0ZjRoZfy
l5O/bXyl/erA6xmv28bCxh6+yXgzMV70VvvtwXfcdx3vo98PT+R8IH8o/2j5sfVT
0Kf7kxmTk/8EA5jz/GMzLdsAAAAgY0hSTQAAeiUAAICDAAD5/wAAgOkAAHUwAADq
YAAAOpgAABdvkl/FRgAAAwBQTFRFAAAANTU1AGYzZmYzMzNmAGZma2trmQAAmTMz
zAAA/wAAzDMA/2YzAJkAAJkzAP8AM8xmmZkz1J0czMwA/8wA//8A//8zmZlm/5lm
zMxmAACZMzOZNDSZNTWZNjaZNzeZM2aZMwDMMzPMNDTMAAD/NDT/M2bMNGb/NGf/
AJnMM5nMNJn/M8zMZv//hoaGk5OToaGhrq6uurq7u7u7zMyZ//+ZmZnMmcz/ycnJ
1tbW/8zM///MzMz/5OTk8fHx////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA/HrMgAAAASBJREFUeAEAEAHv/gE/AAD9AAAA
AAAAAAD6/QAABAAAAAABAAAAAAAAAAAA8QAEAAAA+gAAAAAAAAAAAAAP8QQAAAAG
AAAAAAAAAAD6AAAABAAAAAABAAAAAAAAAAAA8QAEAAAA+gAAAAAAAAAAAAAP8QT3
AAAAAAAAAAAA/QAA8Q8ABAAHAAAAAAAAAPkAAPEA8QABIAAAAAAAAADmMP0AAPEP
8QQfAAD9AAAAABwAAAD6G/QABAAAAAABAAAAAAAAAAAA8QAEAAAA+gAAAAAAAAAA
AAAb5QQAAAAGAAAAAAAAAAD6AAAABAAAAAABAAAAAAAAAAAA5QAEAAAA+gAAAAAA
AAAAAAAbAAQAAAAJAAAAAAAAAAAAAAAAAQAA//8grB1xDBf/2gAAAABJRU5ErkJg
gg==}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1070,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КМ_ТР_СтруктураИдентификацииТаблицыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1086,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"КМ_ТР_ВыбратьОбъектИБ",
{1,0},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1087,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КМ_ТР_ВыбратьОбъектИБРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,
{21,
{1033,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТаблицаРеквизитовКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1084,02023637-7868-4a5f-8576-835a76e0c9ba},0,1,
{0,
{0,
{"B",1},0}
},0,"ТаблицаРеквизитовСравнитьВизуально",
{1,0},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1085,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовСравнитьВизуальноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1079,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ТР_Активность",0,0,
{1,0},
{1,0},
{2,
{157},
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,0,0},1,
{21,
{1080,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_АктивностьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1081,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_АктивностьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1061,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Измерение",
{1,1,
{"ru","Реквизит"}
},
{1,1,
{"ru","Измерение"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,0,1,1,1,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1044,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТР_Имя",1,0,
{1,0},
{1,0},
{2,
{157},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},1,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{1045,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_ИмяКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1046,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_ИмяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1047,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТР_Синоним",1,0,
{1,0},
{1,0},
{2,
{157},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{1048,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_СинонимКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1049,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_СинонимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1062,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИзмерениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1063,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ЗначениеИзмерения",
{1,1,
{"ru","Значение реквизита"}
},
{1,1,
{"ru","Значение измерения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,0,1,1,1,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1058,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТР_ТипЗначения",1,0,
{1,0},
{1,0},
{2,
{157},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},1,0,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,1,0,1,0,0,1,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ТР_ТипЗначенияПриИзменении",0,0},1,
{21,
{1059,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_ТипЗначенияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1060,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_ТипЗначенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1050,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТР_Значение",1,0,
{1,0},
{1,0},
{2,
{157},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{1051,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_ЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1052,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_ЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1053,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ТР_Представление",1,0,
{1,0},
{1,0},
{2,
{157},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{1054,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТР_ПредставлениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1055,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТР_ПредставлениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1064,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначениеИзмеренияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1034,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{1035,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,0,0},1,
{21,
{1036,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаРеквизитовСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1037,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1031,0},0,3,3},1,
{4,
{1038,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаРеквизитовСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,0,0},1,0,0},1,
{21,
{1039,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаРеквизитовСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1040,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1031,1},0,3,3},1,
{4,
{1041,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаРеквизитовУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,0,0,2},1,
{21,
{1042,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаРеквизитовУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1043,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаРеквизитовУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1031,2},0,3,3},0,1,0,0,1,0,3,3},1,0,1,
{10,
{1028,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыДанных_РеквизитыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1026,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыСтруктурыОбъектаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1076,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ВариантЗаписи",1,0,
{1,0},
{1,0},
{1,
{160}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,0,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,1,1,0,0,1,0},
{0,0,0},1,
{21,
{1077,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВариантЗаписиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1078,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВариантЗаписиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{979,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Страница_ДанныеШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"Страница_РедактируемоеОписание",
{1,1,
{"ru","Редактируемое описание"}
},
{1,1,
{"ru","Страница редактируемое описание"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Описание",0,0,
{1,0},
{1,0},
{1,
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,1,1,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ОписаниеПриИзменении",0,0},1,
{21,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"ОписаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{233,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ОписаниеExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{232,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Страница_РедактируемоеОписаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"Страница_Комментарий",
{1,1,
{"ru","Комментарий"}
},
{1,1,
{"ru","Страница комментарий"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Комментарий",0,0,
{1,0},
{1,0},
{1,
{17}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,1,1,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КомментарийПриИзменении",0,0},1,
{21,
{72,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КомментарийКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{235,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"КомментарийExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{234,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"Страница_КомментарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1013,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"Страница_ОписаниеШага",
{1,1,
{"ru","Описание шага"}
},
{1,1,
{"ru","Страница описание шага"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1017,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ПользовательскоеОписание",0,0,
{1,0},
{1,0},
{1,
{154}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,1,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0},
{0,0,0},1,
{21,
{1018,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПользовательскоеОписаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1019,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПользовательскоеОписаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1015,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ГруппаОписание_Настройка",
{1,1,
{"ru","Группа описание настройка"}
},
{1,1,
{"ru","Группа описание настройка"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},0,1,0,1,
{10,
{1016,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОписание_НастройкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1020,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"ДШ_СкрытьАвтоописание",4,0,
{1,0},
{1,0},
{1,
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДШ_СкрытьАвтоописаниеПриИзменении",0,0},1,
{21,
{1021,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДШ_СкрытьАвтоописаниеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1022,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДШ_СкрытьАвтоописаниеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1014,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Страница_ОписаниеШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{163,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"СтраницыExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{956,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},5,"ПриВозникновенииОшибки",
{1,1,
{"ru","При возникновении ошибки"}
},
{1,1,
{"ru","При возникновении ошибки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{958,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ДействиеПриОшибке",0,0,
{1,0},
{1,0},
{1,
{152}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДействиеПриОшибкеПриИзменении",0,0},1,
{21,
{959,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДействиеПриОшибкеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{960,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДействиеПриОшибкеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{961,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},3,"СтраницыПеременнойОшибки",
{1,1,
{"ru","Страницы переменной ошибки"}
},
{1,1,
{"ru","Страницы переменной ошибки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0,0,0}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{963,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыПеременнойОшибки_Пустая",
{1,1,
{"ru","Страницы переменной ошибки пустая"}
},
{1,1,
{"ru","Страницы переменной ошибки пустая"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{965,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},0,"ПустаяНадписьПеременнойОшибки",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{966,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПустаяНадписьПеременнойОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,0},0},0,1,
{10,
{967,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПустаяНадписьПеременнойОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},1,0,1,
{10,
{964,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыПеременнойОшибки_ПустаяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{968,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},4,"СтраницыПеременнойОшибки_Заполненная",
{1,1,
{"ru","Страницы переменной ошибки заполненная"}
},
{1,1,
{"ru","Страницы переменной ошибки заполненная"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{970,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"ИмяПеременнойРеузльтатаВыполнения",1,0,
{1,0},
{1,0},
{1,
{153}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{31,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0},
{0,0,0},1,
{21,
{971,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИмяПеременнойРеузльтатаВыполненияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{972,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяПеременнойРеузльтатаВыполненияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{969,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыПеременнойОшибки_ЗаполненнаяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{962,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыПеременнойОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{957,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПриВозникновенииОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",2,0,0,0,0,0,3,3,0,0,2},"
#Область Переменные

// Форма - владелец текущей формы (для краткости и наглядности вместо ""ЭтаФорма.ВладелецФормы"")
&НаКлиенте
Перем СцТ_ГлавнаяФорма Экспорт;

&НаКлиенте
Перем СцТ_РодительУзла;

// Указатель на форму (главная или макрошага), из которой была открыта эта форма
&НаКлиенте
Перем ВызвавшаяФорма Экспорт;

// Указатель на ветку в дереве. Заполненяется, если шаг не новый
&НаКлиенте
Перем ДанныеШага Экспорт;

// Идентификатор узла в дереве. Заполнено если шаг не новый
&НаКлиенте
Перем ИдентификаторУзла Экспорт;

// Для хранения предыдущеего значения типа в таблице, чтобы отслеживать изменения
// Устанавливается перед началом изменения и проверяется при изменении
&НаКлиенте
Перем ПредыдущийТип;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство(""АвтоТест"") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.РежимСовместимости838 Тогда
		УстановитьДействие(""ПередЗакрытием"", ""ПередЗакрытиеБезРежимаСовместимости"");
	КонецЕсли;
	
	// Если форма открыта под внешним управлением, то не вся функциональность
	// должна работать
	Если Параметры.ОткрытаПодВнешнимУправлением Тогда
		
		ФормаОткрытаПодВнешнимУправлением = Истина;
		
		Элементы.КМ_ТР_ВыбратьОбъектИБ.Доступность              = Ложь;
		Элементы.ТаблицаРеквизитовСравнитьВизуально.Доступность = Ложь;
		
	КонецЕсли;
	
	///
	
	ЭтаОбработка = РеквизитФормыВЗначение(""Объект"");
	ПутьКФормам         = ЭтаОбработка.Метаданные().ПолноеИмя() + "".Форма."";
	
	// Управление доступностью
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Элементы.ПрименитьИЗакрыть.Доступность  = НЕ Параметры.ТолькоПросмотр;
	Элементы.ПрименитьИзменения.Доступность = НЕ Параметры.ТолькоПросмотр;
	
	// Таблицы передаваемые по адресам
	АдресТаблицыКлючей = Параметры.АдресТаблицыКлючей;
	АдресТаблицыСсылок = Параметры.АдресТаблицыСсылок;
	
	// основные атрибуты шага (ОА)
	// атрибуты, для редактирования, которых не требуется открытие формы настройки
	// или свернутые для хранения атрибуты
	ОА_ТипШага                          = Параметры.ТипШага;
	ОА_НомерШага                        = Параметры.НомерШага;
	ОА_Активность                       = Параметры.Активность;
	ОА_ОписательПоложенияШагаВДереве    = Параметры.ОписательПоложенияШагаВДереве;
	ОА_ЭтоНовый                         = Параметры.ЭтоНовый;
	ОА_СтруктураДанныхШага              = Параметры.СтруктураДанныхШага;
	
	// 1. Раскрытие структуры шага и определение типа шага
	Если ОА_СтруктураДанныхШага = Неопределено  Тогда
		Возврат;
	КонецЕсли;
	
	ДШ_Наименование                 = ОА_СтруктураДанныхШага.Наименование;
	ДШ_ТипМетаданных                = ОА_СтруктураДанныхШага.ТипМетаданных;
	ДШ_ИмяМетаданных                = ОА_СтруктураДанныхШага.ИмяМетаданных;
	ДШ_Автоописание                 = ОА_СтруктураДанныхШага.Автоописание;
	ДШ_Описание                     = ОА_СтруктураДанныхШага.Описание;
	ДШ_СкрытьАвтоописание           = ОА_СтруктураДанныхШага.СкрытьАвтоописание;
	ДШ_ОбСсылка                     = ОА_СтруктураДанныхШага.ОбСсылка;
	ДШ_ПредставлениеОбъекта         = ОА_СтруктураДанныхШага.ПредставлениеОбъекта;
	ДШ_ПредставлениеИмениМетаданных = ОА_СтруктураДанныхШага.ПредставлениеИмениМетаданных;
	ДШ_ИмяФормы                     = ОА_СтруктураДанныхШага.ИмяФормы;
	ДШ_ВыполнитьВручную             = ОА_СтруктураДанныхШага.ВыполнитьВручную;
	ДШ_Комментарий                  = ОА_СтруктураДанныхШага.Комментарий;
	ДШ_ЗаголовокФормы               = ОА_СтруктураДанныхШага.ЗаголовокФормы;
	ДШ_ДанныеКартинки               = ОА_СтруктураДанныхШага.ДанныеКартинки;
	
	Если ТипЗнч(ОА_СтруктураДанныхШага.ДеревоЗначения) = Тип(""Структура"") Тогда
		// Данные дерева переданы в виде структуры из главной формы обработки
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(ДеревоЗначения,
			ОА_СтруктураДанныхШага.ДеревоЗначения);
	ИначеЕсли ТипЗнч(ОА_СтруктураДанныхШага.ДеревоЗначения) = Тип(""ХранилищеЗначения"") Тогда
		// Данные из конфигурации могут поступить в виде данных ХЗ
		Попытка
			ДЗ_НаСервере = ОА_СтруктураДанныхШага.ДеревоЗначения.Получить();
			ПреобразоватьЗначенияВДереве(ДЗ_НаСервере, Истина);
			ЗначениеВРеквизитФормы(ДЗ_НаСервере, ""ДеревоЗначения"");
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// Заполнение временной таблицы ссылок шага
	Если ОА_СтруктураДанныхШага.Свойство(""МассивСсылокШага"") И ТипЗнч(ОА_СтруктураДанныхШага.МассивСсылокШага) = Тип(""Массив"") Тогда
		ЭтаОбработка.СцТ_ЗаполнитьТаблицуИдентификацииФормыПоДаннымМассива(ТаблицаСсылокШага, ОА_СтруктураДанныхШага.МассивСсылокШага);
	КонецЕсли;
	
	// Добавление ссылок из общей таблицы ссылок
	ЭтаОбработка.СцТ_ДобавитьВТаблицуСсылокШагаСведенияИзТаблицыСсылок(
		ОА_ОписательПоложенияШагаВДереве.ИдентификаторШага,
		АдресТаблицыСсылок,
		ТаблицаСсылокШага);
	
	// Признак, что наименование установлено вручную
	НаименованиеШагаИзмененоВручную = СцТ_ЗначениеВДереве(
		ДеревоЗначения,
		""ИСТЗ_НаименованиеРучное"",
		Ложь);
		
	// Картинки для закладок описания и комментария
	АдресКартинкиКомментария = ПоместитьВоВременноеХранилище(ЭтаОбработка.ПолучитьМакет(""КартинкаКомментария""));
	КартинкаКомментария = Новый Картинка(ПолучитьИзВременногоХранилища(АдресКартинкиКомментария));
	
	Элементы.Страница_РедактируемоеОписание.Картинка = ?(
		ПустаяСтрока(ДШ_Описание),
		Новый Картинка,
		БиблиотекаКартинок.РежимПросмотраСпискаСписок);
	
	Элементы.Страница_Комментарий.Картинка = ?(
		ПустаяСтрока(ДШ_Комментарий),
		Новый Картинка,
		БиблиотекаКартинок.РежимПросмотраСпискаСписок);
		
	Если ПустаяСтрока(АдресТаблицыСсылок) Тогда
		ИстиннаяТаблицаСсылок = Неопределено;
	Иначе
		ИстиннаяТаблицаСсылок = ПолучитьИзВременногоХранилища(АдресТаблицыСсылок);
	КонецЕсли;
	
	Если НЕ ОА_ЭтоНовый И Параметры.ВыполнятьПреобразованиеСсылочныхТипов Тогда
		ЭтаОбработка.ПреобразоватьДеревоЗначенийДляНовогоФормата(ДеревоЗначения, АдресТаблицыСсылок, ТаблицаСсылокШага, АдресТаблицыКлючей);
		Модифицированность = Истина;
	КонецЕсли;
	
	СцТ_НастроитьФормуДляШага();
	
	// Заполнение поведения при ошибке
	СцТ_ЗаполнитьДействиеШагаПриОшибке(ЭтотОбъект);
	
	// Модифицированность
	Если НЕ Модифицированность И ОА_ЭтоНовый Тогда
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ТекущийЭлемент = Элементы.Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = ""СцТ_УдалениеШаговСценария"" Тогда
		
		Если ОА_ЭтоНовый Тогда
			Возврат;
		КонецЕсли;
		
		Если Параметр.НайтиПоЗначению(ДанныеШага.ПолучитьИдентификатор()) <> Неопределено Тогда
			Модифицированность = Ложь;
			Если Открыта() Тогда
				Закрыть();
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли  ИмяСобытия = ""СцТ_ПеремещениеУзловСценария"" Тогда
		
		Если ОА_ЭтоНовый Тогда
			Возврат;
		КонецЕсли;
		
		НовыйУзел = Параметр[ДанныеШага];
		Если НовыйУзел <> Неопределено Тогда
			ДанныеШага = НовыйУзел;
			ИдентификаторУзла = ДанныеШага.ПолучитьИдентификатор();
			ДШ_НомерШага      = ДанныеШага.НомерШага;
			СцТ_СформироватьПредставлениеРодителя();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = ""СцТ_ОбновленыДанныеГрупповогоШага"" Тогда
		
		Если Параметр = ОА_ОписательПоложенияШагаВДереве.ИдентификаторУзлаРодителя Тогда
			СцТ_СформироватьПредставлениеРодителя();
			
			ТекстПредупреждения = НСтр(""ru = 'Данные группового шага изменились. Требуется обновление данных.'"");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = ""СцТ_ИзмениласьНумерацияШагов"" Тогда
		
		Если ОА_ЭтоНовый Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			ДанныеШага = СцТ_ГлавнаяФорма.СцТ_ПолучитьДанныеШагаПоИдентификатору(ВызвавшаяФорма,ИдентификаторУзла);
			ОА_НомерШага = ДанныеШага.НомерШага;
			СцТ_СформироватьПредставлениеРодителя();
		Исключение
		КонецПопытки;
		
	ИначеЕсли ИмяСобытия = ""СцТ_ПринудительноеЗакрытиеВсехФормОбработки"" Тогда
		Модифицированность = Ложь;
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = ""СцТ_ИзмененСоставКлючей"" Тогда
		Если Источник = ЭтотОбъект Тогда
			СцТ_ПрименитьНастройкиКлючей(Параметр);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения(
			""СцТ_ПослеОтветаНаВопросОСохраненииДанныхПриЗакрытииФормы"",
			ЭтотОбъект);
			
		ТекстЫопроса = НСтр(""ru = 'Данные шага были изменены. Применить изменения?'"");
		ПоказатьВопрос(ОписаниеОповещения,
			ТекстЫопроса,
			РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиеБезРежимаСовместимости(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		Если НЕ ЗавершениеРаботы Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения(
				""СцТ_ПослеОтветаНаВопросОСохраненииДанныхПриЗакрытииФормы"",
				ЭтотОбъект);
				
			ТекстЫопроса = НСтр(""ru = 'Данные шага были изменены. Применить изменения?'"");
			ПоказатьВопрос(ОписаниеОповещения,
				ТекстЫопроса,
				РежимДиалогаВопрос.ДаНетОтмена);
		Иначе
			ТекстПредупреждения = НСтр(""ru = 'Данные шага воспроизведения объекта информационной базы были изменены. При закрытии все изменения будут утеряны'"");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	
	Попытка
		СцТ_ГлавнаяФорма.СцТ_ОткрытыеФормыНастройкиШагов.Удалить(ОА_ОписательПоложенияШагаВДереве.ИдентификаторШага);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура СохранитьИЗакрытьФорму(Команда)
	
	Если СцТ_ПрименитьИзменения_НаКлиенте() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзменения(Команда)
	
	Если СцТ_ПрименитьИзменения_НаКлиенте() Тогда
		ПоказатьОповещениеПользователя(НСтр(""ru = 'Сохранение шага'""), , НСтр(""ru = 'Данные шага сохранены.'""));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьАвтоназвание(Команда)
	
	СцТ_ОбновитьНаименование_НаКлиенте(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ХранимыеДанныеШага(Команда)
	
	// Всегда отображаются имеено хранимые данные, которые сохранены в дереве шагов
	Если ОА_ЭтоНовый Тогда
		ТекстПредупреждения = НСтр(""ru = 'Данные шага еще не записаны. Отобразить структуру хранения данных невозможно.
								         |Сохранить?'"");
		ОписаниеОповещения = Новый ОписаниеОповещения(""СцТ_ПослеОтветаНаВопросОСохраненииНового"", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНет);
		Возврат;
	ИначеЕсли НЕ ОА_ЭтоНовый И Модифицированность Тогда
		ТекстПредупреждения = НСтр(""ru = 'Данные шага были изменены. Сохранить изменения перед отображением структуры?'"");
		ОписаниеОповещения = Новый ОписаниеОповещения(""СцТ_ПослеОтветаНаВопросОСохраненииСуществующего"", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстПредупреждения, РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
	КонецЕсли;
	
	СцТ_ГлавнаяФорма.ОтобразитьХранимыеДанныеШага(ИдентификаторУзла, ВызвавшаяФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктураИдентификацииТаблицы(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ТекущиеДанные.Значение) = Тип(""Строка"") И Найти(ТекущиеДанные.Значение, ""{""""#"""","") Тогда
		// Это ссылка в предыдущем типе данных
		ТекущиеДанные.ТипУзла = ""Ссылка"";
	КонецЕсли;
	
	Если ТекущиеДанные.ТипУзла <> ""Ссылка"" Тогда
		ТекстСообщения = НСтр(""ru = 'Настройка структры идентификации может быть выполнена только для ссылочных типов.'"");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормыИдентификации = СцТ_ГлавнаяФорма.СцТ_ПолучитьСтруктуруИдентификацииСсылки(
		ТекущиеДанные.Значение,
		ТаблицаСсылокШага,
		ТекущиеДанные.Представление);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(
		""СцТ_ПослеИзмененияСтруктурыИдентификацииВТаблице"",
		ЭтотОбъект,
		ТекущиеДанные);
		
	ПараметрыФормыИдентификации.Вставить(""РежимСовместимости838"" , СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ФормаИдентификации = ОткрытьФорму(ПутьКФормам + ""КлючиИдентификации"",
		ПараметрыФормыИдентификации,
		ЭтотОбъект,,,,
		ОписаниеОповещения);
		
	ФормаИдентификации.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРеквизиты(Команда)
	
	Адрес = СцТ_ПоместитьНастройкуРеквизитовВоВременноеХранилище();
	
	ИмяТекущегоУзла = """";
	Если Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_ДанныеШага Тогда
		ИмяТекущейСтраницы = Элементы.СтраницыСтруктурыОбъекта.ТекущаяСтраница.Имя;
		Если ИмяТекущейСтраницы = ""СтраницыДанных_Реквизиты"" Тогда
			ИмяТаблицы = ""Реквизиты"";
		Иначе
			ИмяТаблицы = СтрЗаменить(ИмяТекущейСтраницы, ""Страница_"", """");
		КонецЕсли;
	КонецЕсли;
	
	ПФ = Новый Структура;
	ПФ.Вставить(""Адрес""              , Адрес);
	ПФ.Вставить(""ИмяТекущегоУзла""    , ИмяТаблицы);
	
	ПФ.Вставить(""РежимСовместимости838"", СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ОбработчикОповещения = Новый ОписаниеОповещения(""СцТ_ПослеНастройкиРеквизитов"", ЭтотОбъект);
		
	ОткрытьФорму(
		ПутьКФормам + ""НастройкаРеквизитов"",
		ПФ,
		ЭтотОбъект,,,,
		ОбработчикОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьВизуально(Команда)
	
	ПараметрыДляПоискаОбъекта = СцТ_ГлавнаяФорма.СцТ_ПолучитьПараметрыШагаДляПоискаОбъектаИБ(СцТ_РодительУзла);
	
	// Адрес таблицы ссылок передается для поиска объекта или записи по данным родительского узла
	// этот шаг уже должен быть сохранен
	ДанныеДляСравнения = СцТ_ПодготовитьДанныеДляСравненияРеквизитовШапки_НаСервере(
		ПараметрыДляПоискаОбъекта,
		СцТ_ГлавнаяФорма.АдрестаблицыСсылок,
		СцТ_ГлавнаяФорма.ГлобальныеПараметры);
		
	Если ДанныеДляСравнения = Неопределено Тогда
		ТС = НСтр(""ru = 'Не удалось найти исходный объект'"");
		ПоказатьПредупреждение(, ТС);
		Возврат;
	КонецЕсли;
	
	ДанныеДляСравнения.Вставить(""РежимСовместимости838"", СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ОткрытьФорму(ПутьКФормам + ""ВизуальноеСравнениеТаблиц"", ДанныеДляСравнения, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьТаблицуВизуально(Команда)
	
	ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыСтруктурыОбъекта.ТекущаяСтраница;
	
	Если ТекущаяСтраницаСтруктурыДанных = Неопределено ИЛИ ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыДанных_Реквизиты Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущейСтраницы = ТекущаяСтраницаСтруктурыДанных.Имя;
	// Имя у страницы формализованное и состоит иЗ префикса ""Страница_"" и имени таблицы
	
	ИмяТаблицы = СтрЗаменить(ИмяТекущейСтраницы, ""Страница_"", """");
	
	// Объект ИБ для данного типа шага определяется по родительскому узлу
	ПараметрыДляПоискаОбъекта = СцТ_ГлавнаяФорма.СцТ_ПолучитьПараметрыШагаДляПоискаОбъектаИБ(СцТ_РодительУзла);
	
	Если ПараметрыДляПоискаОбъекта.ТипМД = ""РегистрыСведений"" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = """";
	
	// Родительский шаг уже сохранен, поэтому для поиска объекта или записи ИБ
	// нужна таблица ссылок сценария, а не локальная таблица ссылок этого шага
	ДанныеДляСравнения = СцТ_ПодготовитьДанныеДляВизуальногоСравненияТаблицНаСервере(
		ПараметрыДляПоискаОбъекта,
		ИмяТаблицы,
		СцТ_ГлавнаяФорма.АдрестаблицыСсылок,
		СцТ_ГлавнаяФорма.ГлобальныеПараметры,
		ТекстСообщения);
	
	Если ДанныеДляСравнения = Неопределено Тогда
		Если НЕ ПустаяСтрока(ТекстСообщения) Тогда
			ПоказатьПредупреждение(, ТекстСообщения);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ДанныеДляСравнения.Вставить(""РежимСовместимости838"", СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ОткрытьФорму(ПутьКФормам + ""ВизуальноеСравнениеТаблиц"", ДанныеДляСравнения, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуТаблицы(Команда)
	
	// Определение имени таблицы
	ИмяТаблицы = ОпределитьИмяТекущейТаблицы();
	Если ИмяТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = ОпределитьУзелТаблицыВДереве(ИмяТаблицы);
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Определение текущей строки в ТД. Строка заголовка тоже считается
	НомерТекущейСтроки = ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы);
	
	УзелШапки = ПолучитьУзелШапкиТаблицы(УзелТаблицы);
	
	Если УзелШапки = Неопределено Тогда
		// Нарушена структура дерева
		Возврат;
	КонецЕсли;
	
	// Считаем структуру дерева правильной: сначала строка шапки, затем строки по-порядку
	КоличествоСтрокВТаблице = УзелТаблицы.ПолучитьЭлементы().Количество();
	
	// Необходимо учесть и узел шапки
	Если НомерТекущейСтроки >= КоличествоСтрокВТаблице ИЛИ НомерТекущейСтроки <= 1 Тогда
		// Добавление в конец
		РеальныйНомерСтроки = КоличествоСтрокВТаблице;
		
		УзелНовойСтроки = СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			УзелТаблицы,
			""СтрокаТаблицы_"" + Формат(РеальныйНомерСтроки, ""ЧГ=0""),
			РеальныйНомерСтроки);
		
	Иначе
		// Вставка после текущей строки. НомерТекущейСтроки уже учитывает, что индекс начинается с 0
		// и что первая строка является заголовком
		РеальныйНомерСтроки = НомерТекущейСтроки;
		
		УзелНовойСтроки = УзелТаблицы.ПолучитьЭлементы().Вставить(РеальныйНомерСтроки);
		УзелНовойСтроки.Имя        = ""СтрокаТаблицы_"" + Формат(РеальныйНомерСтроки, ""ЧГ=0"");
		УзелНовойСтроки.Значение   = РеальныйНомерСтроки;
		УзелНовойСтроки.Активность = Истина;
		
		// Перенумерация последующих строк
		НомерСтроки = 0;
		Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
			Если УзелДерева.Имя = ""ШапкаТаблицы"" Тогда
				Продолжить;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			Если НомерСтроки > РеальныйНомерСтроки Тогда
				УзелДерева.Имя = ""СтрокаТаблицы_"" + Формат(НомерСтроки, ""ЧГ=0"");
				УзелНовойСтроки.Значение = НомерСтроки;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	НомерКолонки = 0;
	Для каждого КолонкаВШапке Из УзелШапки.ПолучитьЭлементы() Цикл
		СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			УзелНовойСтроки,
			КолонкаВШапке.Имя,
			Неопределено,
			КолонкаВШапке.Синоним,
			КолонкаВШапке.Активность,
			"""",
			КолонкаВШапке.Действие);
			
	КонецЦикла;
	
	СцТ_ЗаполнитьТаблицуДанныхЗначениями(УзелТаблицы.ПолучитьИдентификатор(), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтрокуТаблицы(Команда)
	
	// Определение имени таблицы
	ИмяТаблицы = ОпределитьИмяТекущейТаблицы();
	Если ИмяТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = ОпределитьУзелТаблицыВДереве(ИмяТаблицы);
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Определение текущей строки в ТД. Строка заголовка тоже считается
	НомерТекущейСтроки = ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы);
	
	// Считаем структуру дерева правильной: сначала строка шапки, затем строки по-порядку
	КоличествоСтрокВТаблице = УзелТаблицы.ПолучитьЭлементы().Количество();
	
	Если НомерТекущейСтроки <=1 ИЛИ НомерТекущейСтроки > КоличествоСтрокВТаблице Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не выбрана строка для копирования'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтрокаИсточник = Неопределено;
	ИмяСтрокиИсточника = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки - 1, ""ЧГ=0"");
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяСтрокиИсточника Тогда
			СтрокаИсточник = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаИсточник = Неопределено Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не найдена строка для копирования'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	УзелНовойСтроки = СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			УзелТаблицы,
			""СтрокаТаблицы_"" + Формат(КоличествоСтрокВТаблице, ""ЧГ=0""),
			КоличествоСтрокВТаблице);
	
	Для каждого КолонкаИсточник Из СтрокаИсточник.ПолучитьЭлементы() Цикл
		НовыйУзел = УзелНовойСтроки.ПОлучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовыйУзел, КолонкаИсточник);
		
	КонецЦикла;
	
	СцТ_ЗаполнитьТаблицуДанныхЗначениями(УзелТаблицы.ПолучитьИдентификатор(), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПоследнююСтроку(Команда)
	
	// Определение имени таблицы
	ИмяТаблицы = ОпределитьИмяТекущейТаблицы();
	Если ИмяТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = ОпределитьУзелТаблицыВДереве(ИмяТаблицы);
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Определение текущей строки в ТД. Строка заголовка тоже считается
	НомерТекущейСтроки = ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы);
	
	// Считаем структуру дерева правильной: сначала строка шапки, затем строки по-порядку
	КоличествоСтрокВТаблице = УзелТаблицы.ПолучитьЭлементы().Количество();
	
	Если НомерТекущейСтроки <=1 ИЛИ НомерТекущейСтроки > КоличествоСтрокВТаблице Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не выбрана строка'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	УдаляемаяСтрока = Неопределено;
	ИмяУдаляемойСтроки = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки - 1, ""ЧГ=0"");
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяУдаляемойСтроки Тогда
			УдаляемаяСтрока = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УдаляемаяСтрока = Неопределено Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не найдена удаляемая строка'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	УзелТаблицы.ПолучитьЭлементы().Удалить(УдаляемаяСтрока);
	
	// Изменение индексов у остальных строк
	НомерСтроки = 0;
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ""ШапкаТаблицы"" Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		Если НомерСтроки >= (НомерТекущейСтроки - 1) Тогда
			УзелДерева.Имя = ""СтрокаТаблицы_"" + Формат(НомерСтроки, ""ЧГ=0"");
			УзелДерева.Значение = НомерСтроки;
		КонецЕсли;
		
	КонецЦикла;
	
	СцТ_ЗаполнитьТаблицуДанныхЗначениями(УзелТаблицы.ПолучитьИдентификатор(), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
	
	// Определение имени таблицы
	ИмяТаблицы = ОпределитьИмяТекущейТаблицы();
	Если ИмяТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = ОпределитьУзелТаблицыВДереве(ИмяТаблицы);
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Определение текущей строки в ТД. Строка заголовка тоже считается
	НомерТекущейСтроки = ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы);
	
	// Считаем структуру дерева правильной: сначала строка шапки, затем строки по-порядку
	КоличествоСтрокВТаблице = УзелТаблицы.ПолучитьЭлементы().Количество();
	
	Если НомерТекущейСтроки <=1 ИЛИ НомерТекущейСтроки > КоличествоСтрокВТаблице Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не выбрана строка для перемещения'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли; 
	
	Если НомерТекущейСтроки = 2 Тогда
		ТекстПредупреждения = НСтр(""ru = 'Это первая строка. Перемещение вверх невозможно'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтрокаИсточник = Неопределено;
	СтрокаПриемник = Неопределено;
	ИмяСтрокиИсточника = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки - 1, ""ЧГ=0"");
	ИмяСтрокиПриемника = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки - 2, ""ЧГ=0"");
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяСтрокиИсточника Тогда
			СтрокаИсточник = УзелДерева;
		ИначеЕсли УзелДерева.Имя = ИмяСтрокиПриемника Тогда
			СтрокаПриемник = УзелДерева;
		КонецЕсли;
		
		Если СтрокаИсточник <> Неопределено И СтрокаПриемник <> Неопределено Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаИсточник = Неопределено Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не найдена перемещаемая строка'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтрокаИсточник.Имя = ИмяСтрокиПриемника;
	СтрокаИсточник.Значение = НомерТекущейСтроки - 2;
	
	СтрокаПриемник.Имя      = ИмяСтрокиИсточника;
	СтрокаПриемник.Значение = НомерТекущейСтроки - 1;
	
	УзелТаблицы.ПолучитьЭлементы().Сдвинуть(НомерТекущейСтроки - 1, -1);
	
	СцТ_ЗаполнитьТаблицуДанныхЗначениями(УзелТаблицы.ПолучитьИдентификатор(), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	// Определение имени таблицы
	ИмяТаблицы = ОпределитьИмяТекущейТаблицы();
	Если ИмяТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = ОпределитьУзелТаблицыВДереве(ИмяТаблицы);
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Определение текущей строки в ТД. Строка заголовка тоже считается
	НомерТекущейСтроки = ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы);
	
	// Считаем структуру дерева правильной: сначала строка шапки, затем строки по-порядку
	КоличествоСтрокВТаблице = УзелТаблицы.ПолучитьЭлементы().Количество();
	
	Если НомерТекущейСтроки <=1 ИЛИ НомерТекущейСтроки > КоличествоСтрокВТаблице Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не выбрана строка для перемещения'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли; 
	
	Если НомерТекущейСтроки = КоличествоСтрокВТаблице Тогда
		ТекстПредупреждения = НСтр(""ru = 'Это последняя строка. Перемещение вниз невозможно'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтрокаИсточник = Неопределено;
	СтрокаПриемник = Неопределено;
	ИмяСтрокиИсточника = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки - 1, ""ЧГ=0"");
	ИмяСтрокиПриемника = ""СтрокаТаблицы_"" + Формат(НомерТекущейСтроки, ""ЧГ=0"");
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяСтрокиИсточника Тогда
			СтрокаИсточник = УзелДерева;
		ИначеЕсли УзелДерева.Имя = ИмяСтрокиПриемника Тогда
			СтрокаПриемник = УзелДерева;
		КонецЕсли;
		
		Если СтрокаИсточник <> Неопределено И СтрокаПриемник <> Неопределено Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаИсточник = Неопределено Тогда
		ТекстПредупреждения = НСтр(""ru = 'Не найдена перемещаемая строка'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	СтрокаИсточник.Имя = ИмяСтрокиПриемника;
	СтрокаИсточник.Значение = НомерТекущейСтроки;
	
	СтрокаПриемник.Имя      = ИмяСтрокиИсточника;
	СтрокаПриемник.Значение = НомерТекущейСтроки - 1;
	
	УзелТаблицы.ПолучитьЭлементы().Сдвинуть(НомерТекущейСтроки - 1, 1);
	
	СцТ_ЗаполнитьТаблицуДанныхЗначениями(УзелТаблицы.ПолучитьИдентификатор(), ИмяТаблицы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОбъектИБ(Команда)
	
	ТекущиеДанныеСтроки = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	Если ТекущиеДанныеСтроки = Неопределено Тогда
		ТекстСообщения = НСтр(""ru = 'Не выбрана редактируемая строка'"");
		ПоказатьПредупреждение(, ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ТипМД_Строки     = """";
	ИмяМД_Строки     = """";
	СинонимМД_Строки = """";
	
	ОписаниеОповещения = Новый ОписаниеОповещения(""СцТ_ПослеВыбораОбъектаИБ_ВТаблице"", ЭтотОбъект, ТекущиеДанныеСтроки);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""ТипМД""           , ТипМД_Строки);
	ПараметрыФормы.Вставить(""ИмяМД""           , ИмяМД_Строки);
	ПараметрыФормы.Вставить(""СинонимМД""       , СинонимМД_Строки);
	ПараметрыФормы.Вставить(""ПутьКФормам""     , ПутьКФормам);
	ПараметрыФормы.Вставить(""ВыбиратьОбъектМД"", Истина);
	
	
	Если ТекущиеДанныеСтроки.ТипУзла = ""Предопределенное"" И ЗначениеЗаполнено(ТекущиеДанныеСтроки.Значение) Тогда
		ПараметрыФормы.Вставить(""Предопределенное"", ТекущиеДанныеСтроки.Значение);
		
	ИначеЕсли ТекущиеДанныеСтроки.ТипУзла = ""Ссылка"" И ЗначениеЗаполнено(ТекущиеДанныеСтроки.Значение) Тогда
		
		СтруктураПоиска = Новый Структура(""СтрокаИдентификатора"", ТекущиеДанныеСтроки.Значение);
		НайденныеСтроки = ТаблицаСсылокШага.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НужнаяСтрока = НайденныеСтроки[0];
			ПараметрыФормы.ТипМД     = НужнаяСтрока.ТипМД;
			ПараметрыФормы.ИмяМД     = НужнаяСтрока.ИмяМД;
			ПараметрыФормы.СинонимМД = НужнаяСтрока.СинонимМД;
			
			ПараметрыФормы.Вставить(""СтруктураИдентификации"", НужнаяСтрока.СтруктураИдентификации);
		Иначе
			ПараметрыФормы.Вставить(""ЗначениеПеречисления"", ТекущиеДанныеСтроки.Значение);
			
		КонецЕсли;
	КонецЕсли;
	
	ФормаВыбораОбъектаИБ = ОткрытьФорму(ПутьКФормам + ""ВыборОбъектовИБ"", ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения);
	
	ФормаВыбораОбъектаИБ.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура АктивностьПриИзменении(Элемент)
	
	Если ОА_Активность = 2 Тогда
		ОА_Активность = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	
	ПроверочноеНаименование = СцТ_СформироватьОписаниеШага_НаКлиенте(Истина);
	
	НаименованиеШагаИзмененоВручную = (ДШ_Наименование <> ПроверочноеНаименование);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания(""СцТ_ОбновитьЗаголовкиЗакладок"", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеПриИзменении(Элемент)
	
	ПодключитьОбработчикОжидания(""СцТ_ОбновитьЗаголовкиЗакладок"", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеГруппыНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ОА_ЭтоНовый Тогда
		РодительУзла = СцТ_ГлавнаяФорма.СцТ_ПолучитьДанныеШагаПоИдентификатору(ВызвавшаяФорма,ОА_ОписательПоложенияШагаВДереве.ИдентификаторУзлаРодителя);
	Иначе
		РодительУзла = ДанныеШага.ПолучитьРодителя();
	КонецЕсли;
	
	Если РодительУзла <> Неопределено Тогда
		СцТ_ГлавнаяФорма.СцТ_ОткрытьФормуНастройкиШага(РодительУзла, ВызвавшаяФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДействиеПриОшибкеПриИзменении(Элемент)
	
	УправлениеДоступностьюПеременнойОшибки(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРеквизитовПриИзменении(Элемент)
	
	ТД = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	УстановитьТипЗначенияПоля(ТД.ТипУзла, ТД);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТР_ТипЗначенияПриИзменении(Элемент)
	
	ТД = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	
	Если ПредыдущийТип <> ТД.ТипУзла Тогда
		УстановитьТипЗначенияПоля(ТД.ТипУзла, ТД);
		
		Если ТД.ТипУзла = ""Ссылка"" И НЕ(ТипЗнч(ТД.Значение) = Тип(""Строка"") И Лев(ТД.Значение, 4) = ""{""""#"""""") Тогда
			// Ссылки еще нет, так как пользователь только еще выбрал тип ссылка
			
			ПараметрыФормыИдентификации = Новый Структура;
			ПараметрыФормыИдентификации.Вставить(""ТипМД""                 , """");
			ПараметрыФормыИдентификации.Вставить(""ИмяМД""                 , """");
			ПараметрыФормыИдентификации.Вставить(""Идентификатор""         , ТД.Значение);
			ПараметрыФормыИдентификации.Вставить(""СинонимМД""             , """");
			ПараметрыФормыИдентификации.Вставить(""Представление""         , ТД.Представление);
			ПараметрыФормыИдентификации.Вставить(""СтруктураИдентификации"", Неопределено);
			ПараметрыФормыИдентификации.Вставить(""АдресТаблицыКлючей""    , СцТ_ГлавнаяФорма.АдресТаблицыКлючей);
			ПараметрыФормыИдентификации.Вставить(""ПоискПоЗапросу""        , Ложь);
			ПараметрыФормыИдентификации.Вставить(""ТекстЗапроса""          , """");
			ПараметрыФормыИдентификации.Вставить(""СтруктураПараметров""   , СцТ_ГлавнаяФорма.ГлобальныеПараметры);
			
			ПараметрыФормыИдентификации.Вставить(""РежимСовместимости838"" , СцТ_ГлавнаяФорма.РежимСовместимости838);
			
			
			ОписаниеОповещения = Новый ОписаниеОповещения(""СцТ_ПослеИзмененияСтруктурыИдентификацииВТаблице"", ЭтотОбъект, ТД);
			
			ФормаНастройкиИдентификации = ОткрытьФорму(ПутьКФормам + ""КлючиИдентификации"",
				ПараметрыФормыИдентификации,
				ЭтотОбъект,,,,
				ОписаниеОповещения);
				
			ФормаНастройкиИдентификации.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
			
			Элементы.ТаблицаРеквизитов.ЗакончитьРедактированиеСтроки(Ложь);
			
		ИначеЕсли ТД.ТипУзла = ""УникальныйИдентификатор"" Тогда
			ТД.Значение = Строка(Новый УникальныйИдентификатор);
			
		ИначеЕсли ТД.ТипУзла = ""Неопределено"" Тогда
			ТД.Значение      = ""Неопределено"";
			ТД.Представление = НСтр(""ru = 'Неопределено'"");
			
		КонецЕсли;
		
		ПредыдущийТип = ТД.ТипУзла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлючЗаписиРегистраПередНачаломИзменения(Элемент, Отказ)
	
	ТД = Элементы.ТаблицаРеквизитов.ТекущиеДанные;
	ПредыдущийТип = ТД.ТипУзла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДШ_СкрытьАвтоописаниеПриИзменении(Элемент)
	
	ОбновитьПользовательскоеОписание();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Элемент.ТекущаяСтраница = Элементы.Страница_ОписаниеШага Тогда
		ОбновитьПользовательскоеОписание();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеТаблицыВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыСтруктурыОбъекта.ТекущаяСтраница;
	
	Если ТекущаяСтраницаСтруктурыДанных = Неопределено
		ИЛИ (ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыДанных_Реквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТекущейСтраницы = ТекущаяСтраницаСтруктурыДанных.Имя;
	// Имя у страницы формализованное и состоит иЗ префикса ""Страница_"" и имени таблицы
	
	ИмяТаблицы = СтрЗаменить(ИмяТекущейСтраницы, ""Страница_"", """");
	
	ИмяОбласти = Область.Имя;
	
	ПозицияКолонки = Найти(ВРег(ИмяОбласти), ""C"");
	Если ПозицияКолонки < 2 Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтроки_Строкой = Сред(ИмяОбласти, 2, ПозицияКолонки - 2);
	Попытка
		НомерСтроки = Число(НомерСтроки_Строкой);
	Исключение
		Возврат;
	КонецПопытки;
	
	НомерКолонки_Строкой = Сред(ИмяОбласти, ПозицияКолонки + 1);
	Попытка
		НомерКолонки = Число(НомерКолонки_Строкой);
	Исключение
		Возврат;
	КонецПопытки;
	
	Если НомерСтроки = 1 Тогда
		ТекстПредупреждения = НСтр(""ru = 'Редактировать заголовок запрещено'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	РедактируемаяОбласть = Область;
	
	// Получение данных из дерева
	УзелТЧ = Неопределено;
	Для каждого УзелДерева Из ДеревоЗначения.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ""ТабличныеЧасти"" Тогда
			УзелТЧ = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелТЧ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = Неопределено;
	Для каждого УзелДерева Из УзелТЧ.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяТаблицы Тогда
			УзелТаблицы = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НазваниеСтрокиТаблицы = ""СтрокаТаблицы_"" + Формат(НомерСтроки - 1, ""ЧГ=0"");
	УзелСтроки = Неопределено;
	УзелШапки = Неопределено;
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = НазваниеСтрокиТаблицы Тогда
			УзелСтроки = УзелДерева;
		ИначеЕсли УзелДерева.Имя = ""ШапкаТаблицы"" Тогда
			УзелШапки = УзелДерева;
		КонецЕсли;
		
		Если УзелСтроки <> Неопределено И УзелШапки <> Неопределено Тогда
			Прервать;
		КонецЕсли;
	
	КонецЦикла;
	
	Если УзелСтроки = Неопределено ИЛИ УзелШапки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Сортируется только шапка, поэтому имя колонки нужно искать по шапке
	УзелКолонкиВШапке = Неопределено;
	Итератор = 0;
	Для каждого УзелДерева Из УзелШапки.ПолучитьЭлементы() Цикл
		Если УзелДерева.Активность Тогда
			Итератор = Итератор + 1;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Если Итератор = НомерКолонки Тогда
			УзелКолонкиВШапке = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелКолонкиВШапке = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелКолонки = Неопределено;
	Для каждого УзелДерева Из УзелСтроки.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = УзелКолонкиВШапке.Имя Тогда
			УзелКолонки = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелКолонки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПФ = Новый Структура;
	ПФ.Вставить(""Имя""               , УзелДерева.Имя);
	ПФ.Вставить(""Синоним""           , УзелДерева.Синоним);
	ПФ.Вставить(""ТипРеквизита""      , УзелДерева.ТипУзла);
	ПФ.Вставить(""Значение""          , УзелДерева.Значение);
	ПФ.Вставить(""Представление""     , УзелДерева.Представление);
	ПФ.Вставить(""МТИ""               , СцТ_ГлавнаяФорма.СцТ_УпаковатьВМассивТаблицуСсылокШага(ТаблицаСсылокШага));
	ПФ.Вставить(""АдресТаблицыКлючей"", АдресТаблицыКлючей);
	
	ПФ.Вставить(""РежимСовместимости838"", СцТ_ГлавнаяФорма.РежимСовместимости838);
	
	ПФ.Вставить(""ФормаОткрытаПодВнешнимУправлением"", ФормаОткрытаПодВнешнимУправлением);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""РедактируемыйУзел""  , УзелКолонки);
	ДопПараметры.Вставить(""РедактируемаяЯчейка"", РедактируемаяОбласть);
	
	ОписаниеОповещения = Новый ОписаниеОповещения(""СцТ_ПослеИзмененияДанныхЯчейки"", ЭтотОбъект, ДопПараметры);
	
	ФормаРедактированияЯчейки = ОткрытьФорму(ПутьКФормам + ""РедактированиеЯчейкиТаблицы"", ПФ, ЭтотОбъект,,,, ОписаниеОповещения);
	
	ФормаРедактированияЯчейки.СцТ_ГлавнаяФорма = СцТ_ГлавнаяФорма;
	
КонецПроцедуры


#КонецОбласти


#Область ОбработчикиОповещений

// Обрабатывает нажатие пользователем кнопки в диалоге вопроса о сохранении
// данных шага перед закрытием формы
//
&НаКлиенте
Процедура СцТ_ПослеОтветаНаВопросОСохраненииДанныхПриЗакрытииФормы(КодВозврата, ДопДанные) Экспорт
	
	Если КодВозврата = КодВозвратаДиалога.Да Тогда
		Если СцТ_ПрименитьИзменения_НаКлиенте() Тогда
			Закрыть();
		КонецЕсли;
		
	ИначеЕсли КодВозврата = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
		
		// При Отмене ничего не выполняется
		
	КонецЕсли;
	
КонецПроцедуры

// После ответа на вопрос диалога о Сохранении нового шага перед
// отображением хранимых данных
&НаКлиенте
Процедура СцТ_ПослеОтветаНаВопросОСохраненииНового(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	// Обработка нажатия ""ДА""
	Если СцТ_ПрименитьИзменения_НаКлиенте() Тогда
		СцТ_ГлавнаяФорма.ОтобразитьХранимыеДанныеШага(ИдентификаторУзла, ВызвавшаяФорма);
	Иначе
		ТекстПредупреждения = НСтр(""ru = 'Не удалось сохранить шаг'"");
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

// После ответа на вопрос диалога о Сохранении уже существующего модифицированного шага перед
// отображением хранимых данных
&НаКлиенте
Процедура СцТ_ПослеОтветаНаВопросОСохраненииСуществующего(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		// Показываем, что хранится
		СцТ_ГлавнаяФорма.ОтобразитьХранимыеДанныеШага(ИдентификаторУзла, ВызвавшаяФорма);
		
	Иначе
		
		Если СцТ_ПрименитьИзменения_НаКлиенте() Тогда
			СцТ_ГлавнаяФорма.ОтобразитьХранимыеДанныеШага(ИдентификаторУзла, ВызвавшаяФорма);
		Иначе
			ТекстПредупреждения = НСтр(""ru = 'Не удалось сохранить изменения в шаге'"");
			ПоказатьПредупреждение(, ТекстПредупреждения);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Отображение родительского шага
// Параметры:
// ПриОткрытии - устанавливает признак, что настройка выполняется при открытии
// или (в противном случае) по обработке оповещения
&НаКлиенте
Процедура СцТ_СформироватьПредставлениеРодителя(ПриОткрытии = Истина) Экспорт
	
	Если ОА_ЭтоНовый И ПриОткрытии Тогда
		Если ОА_ОписательПоложенияШагаВДереве.ИдентификаторУзлаРодителя = Неопределено Тогда
			ПредставлениеГруппы = """";
		Иначе
			// Поиск данных родительского узла в дереве по идентификатору шага
			СцТ_РодительУзла = СцТ_ГлавнаяФорма.СцТ_ПолучитьДанныеШагаПоИдентификатору(ВызвавшаяФорма,
				ОА_ОписательПоложенияШагаВДереве.ИдентификаторУзлаРодителя);
			
			Если СцТ_РодительУзла = Неопределено Тогда
				ПредставлениеГруппы = """";
			Иначе
				ОтобразитьПредставлениеСуществующегоРодительскогоШага(СцТ_РодительУзла);
			КонецЕсли;
		КонецЕсли;
		
		// Если родительский узел будет изменен у нового шага, то редактируемый шаг уже не имеет смысла,
		// так как неизвестно куда его вставить
		
	ИначеЕсли НЕ ОА_ЭтоНовый Тогда
		Если ДанныеШага = Неопределено Тогда
			ПредставлениеГруппы = """";
		Иначе
			СцТ_РодительУзла = ДанныеШага.ПолучитьРодителя();
			Если СцТ_РодительУзла = Неопределено Тогда
				ПредставлениеГруппы = """";
			Иначе
				ОтобразитьПредставлениеСуществующегоРодительскогоШага(СцТ_РодительУзла);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПредставлениеГруппы = """" Тогда
		Элементы.СтраницыГрупп.ТекущаяСтраница = Элементы.СтраницаПустойГруппы;
	Иначе
		Элементы.СтраницыГрупп.ТекущаяСтраница = Элементы.СтраницаЗаполненнойГруппы;
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура СцТ_ПослеВыбораОбъектаИБ_ВТаблице(ВозвращенноеЗначение, ТекущиеДанныеСтроки) Экспорт
	
	Если ВозвращенноеЗначение <> Неопределено Тогда
		СтруктураДанных = ОбработатьВыборЗначенияВТаблицеНаСервере(ВозвращенноеЗначение);
		
		ТекущиеДанныеСтроки.ТипУзла       = СтруктураДанных.ТипЗначения;
		ТекущиеДанныеСтроки.Значение      = СтруктураДанных.Значение;
		ТекущиеДанныеСтроки.Представление = СтруктураДанных.Представление;
		
	КонецЕсли;
	
КонецПроцедуры

// Обработчик оповещения, которой обрабатывается после закрытия формы
// редактирования структуры идентификации ссылки в таблице реквизитов
&НаКлиенте
Процедура СцТ_ПослеИзмененияСтруктурыИдентификацииВТаблице(Результат, ТекущиеДанныеСтроки) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Изменение данных этой формы
	ТекущиеДанныеСтроки.Представление = Результат.Представление;
	ТекущиеДанныеСтроки.Значение      = Результат.Идентификатор;
	
	СцТ_ГлавнаяФорма.СцТ_ДобавитьВСтруктуруИдентификацииШагаСведенияОНовойСсылке(
		Результат.Идентификатор,
		ТаблицаСсылокШага,
		Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ПослеНастройкиРеквизитов(Результат, ДопПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		СцТ_ОбновитьОтображениеВСоответствииСНастройкой(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СцТ_ПослеИзмененияДанныхЯчейки(Результат, ДопПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЯчейкаТаблицы = ДопПараметры.РедактируемаяЯчейка;
	
	Ячейкатаблицы.Текст = Результат.Представление;
	
	РеадктируемыйУзел = ДопПараметры.РедактируемыйУзел;
	
	РеадктируемыйУзел.Имя           = Результат.Имя;
	РеадктируемыйУзел.Синоним       = Результат.Синоним;
	РеадктируемыйУзел.ТипУзла       = Результат.ТипРеквизита;
	РеадктируемыйУзел.Значение      = Результат.Значение;
	РеадктируемыйУзел.Представление = Результат.Представление;
	
	
	// Обновление таблицы ссылок шага
	ТаблицаСсылокШага.Очистить();
	
	Для каждого СтрИ Из Результат.МТИ Цикл
		
		НоваяСтрока = ТаблицаСсылокШага.Добавить();
		НоваяСтрока.СтрокаИдентификатора = СтрИ.СтрокаИдентификатора;
		НоваяСтрока.Представление        = СтрИ.Представление;
		НоваяСтрока.ТипМД                = СтрИ.ТипМД;
		НоваяСтрока.ИмяМД                = СтрИ.ИмяМД;
		НоваяСтрока.СинонимМД            = СтрИ.СинонимМД;
		НоваяСтрока.ПоискПоЗапросу       = СтрИ.ПоискПоЗапросу;
		НоваяСтрока.ТекстЗапроса         = СтрИ.ТекстЗапроса;
		
		Для каждого СИ Из СтрИ.СтруктураИдентификации Цикл
			
			НовСтр = НоваяСтрока.СтруктураИдентификации.Добавить();
			
			НовСтр.Имя             = СИ.Имя;
			НовСтр.Представление   = СИ.Представление;
			НовСтр.Значение        = СИ.Значение;
			НовСтр.СокрТипЗначения = СИ.СокрТипЗначения;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти


#Область ВспомогательныеПроцедурыИФункции

#Область НастрокаПриЗагрузкеДанныхШага

// Индивидуальная настройка формы для шага
//
&НаСервере
Процедура СцТ_НастроитьФормуДляШага()
	
	ДеревоЗначенияНаСервере = РеквизитФормыВЗначение(""ДеревоЗначения"");
	
	// Подготовка данных
	СцТ_ОтобразитьТаблицуРеквизитов(ДеревоЗначенияНаСервере);
	
	СцТ_ОтобразитьТабличныеЧасти(ДеревоЗначенияНаСервере);
	
	Если ОА_ТипШага = ""Воспроизвести"" Тогда
		Элементы.ВариантЗаписи.Видимость = Истина;
		
		Элементы.ВариантЗаписи.СписокВыбора.Добавить(""Записать"", ""Записать"");
		Если ДШ_ТипМетаданных = ""Документы"" Тогда
			Элементы.ВариантЗаписи.СписокВыбора.Добавить(""ПровестиНеоперативно"", ""Провести неоперативно"");
			Элементы.ВариантЗаписи.СписокВыбора.Добавить(""ПровестиОперативно""  , ""Провести оперативно"");
			Элементы.ВариантЗаписи.СписокВыбора.Добавить(""ОтменаПроведения""    , ""Отмена проведения"");
		КонецЕсли;
		
		// Заполнение списка выбора варианта записи
		УзелВариантаЗаписи = ДеревоЗначенияНаСервере.Строки.Найти(""ВариантЗаписи"", ""Имя"");
		Если УзелВариантаЗаписи = Неопределено ИЛИ ПустаяСтрока(УзелВариантаЗаписи.Значение) Тогда
			ВариантЗаписи = ""Записать"";
		Иначе
			ВариантЗаписи = УзелВариантаЗаписи.Значение;
		КонецЕсли;
		
			Иначе
		Элементы.ВариантЗаписи.Видимость = Ложь;
	КонецЕсли;
	
	// Заполнение локальной таблицы ссылок
	Если НЕ ПустаяСтрока(АдресТаблицыСсылок) И НЕ ОА_ЭтоНовый Тогда
		
		ИстиннаяТаблицаСсылок = ПолучитьИзВременногоХранилища(АдресТаблицыСсылок);
		Если ИстиннаяТаблицаСсылок.Колонки.Найти(""СинонимМД"") = Неопределено Тогда
			ИстиннаяТаблицаСсылок.Колонки.Добавить(""СинонимМД"", Новый ОписаниеТипов(""Строка""));
		КонецЕсли;
		
		Для каждого СтрокаСсылки Из ИстиннаяТаблицаСсылок Цикл
			ИндексВМассиве = СтрокаСсылки.МассивУИШ.Найти(ОА_ОписательПоложенияШагаВДереве.ИдентификаторШага);
			Если ИндексВМассиве <> Неопределено Тогда
				// Копируем описание ссылки
				СсылкаВШаге = ТаблицаСсылокШага.Добавить();
				СсылкаВШаге.СтрокаИдентификатора = СтрокаСсылки.Ссылка;
				
				СсылкаВШаге.Представление  = СтрокаСсылки.Представление;
				СсылкаВШаге.ТипМД          = СтрокаСсылки.ТипМД;
				СсылкаВШаге.ИмяМД          = СтрокаСсылки.ИмяМД;
				СсылкаВШаге.СинонимМД      = СтрокаСсылки.СинонимМД;
				СсылкаВШаге.ПоискПоЗапросу = СтрокаСсылки.ПоискПоЗапросу;
				СсылкаВШаге.ТекстЗапроса   = СтрокаСсылки.ТекстЗапроса;
				
				Если ПустаяСтрока(СсылкаВШаге.СинонимМД) Тогда
					Попытка
						СсылкаВШаге.СинонимМД = Метаданные[СсылкаВШаге.ТипМД][СсылкаВШаге.ИмяМД].Синоним;
					Исключение
						СсылкаВШаге.СинонимМД = СсылкаВШаге.ИмяМД;
					КонецПопытки;
				КонецЕсли;
				
				Для каждого КлючИдентификации Из СтрокаСсылки.СтруктураИдентификации Цикл
					НовыйКлюч = СсылкаВШаге.СтруктураИдентификации.Добавить();
					НовыйКлюч.Имя             = КлючИдентификации.Имя;
					НовыйКлюч.Представление   = КлючИдентификации.Представление;
					НовыйКлюч.Значение        = КлючИдентификации.Значение;
					НовыйКлюч.СокрТипЗначения = КлючИдентификации.СокрТипЗначения;
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
		
		// Если таблицы ссылок еще не существует, то и описания ссылок еще нет
	КонецЕсли;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.Страница_ДанныеШага;
	Элементы.СтраницыСтруктурыОбъекта.ТекущаяСтраница = Элементы.СтраницыДанных_Реквизиты;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ОтобразитьТаблицуРеквизитов(ДеревоДанных)
	
	СписокВыбора = Элементы.ТР_ТипЗначения.СписокВыбора;
	
	СписокВыбора.Добавить(""Число""                  , НСтр(""ru = 'Число'""));
	СписокВыбора.Добавить(""Строка""                 , НСтр(""ru = 'Строка'""));
	СписокВыбора.Добавить(""Дата""                   , НСтр(""ru = 'Дата'""));
	СписокВыбора.Добавить(""Булево""                 , НСтр(""ru = 'Булево'""));
	СписокВыбора.Добавить(""Неопределено""           , НСтр(""ru = 'Неопределено'""));
	СписокВыбора.Добавить(""Предопределенное""       , НСтр(""ru = 'Предопределенное значение'""));
	СписокВыбора.Добавить(""Ссылка""                 , НСтр(""ru = 'Ссылка (Идентификатор)'""));
	СписокВыбора.Добавить(""УникальныйИдентификатор"", НСтр(""ru = 'Уникальный идентификатор'""));
	СписокВыбора.Добавить(""СистемноеПеречисление""  , НСтр(""ru = 'Системное перечисление'""));
	СписокВыбора.Добавить(""ХранилищеЗначения""      , НСтр(""ru = 'Хранилище значения'""));
	СписокВыбора.Добавить(""Параметр""               , НСтр(""ru = 'Параметр'""));
	
	МодульОбработки = РеквизитФормыВЗначение(""Объект"");
	
	УзелРеквизитов = ДеревоДанных.Строки.Найти(""Реквизиты"", ""Имя"");
	
	Если УзелРеквизитов = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРеквизитов.Очистить();
	Для каждого СтрокаРеквизита Из УзелРеквизитов.Строки Цикл
		
		СтрокаРеквизитаФормы = ТаблицаРеквизитов.Добавить();
		СтрокаРеквизитаФормы.Имя           = СтрокаРеквизита.Имя;
		СтрокаРеквизитаФормы.Синоним       = СтрокаРеквизита.Синоним;
		
		СтрокаРеквизитаФормы.Значение      = СтрокаРеквизита.Значение;
		СтрокаРеквизитаФормы.Представление = СтрокаРеквизита.Представление;
		СтрокаРеквизитаФормы.Действие      = СтрокаРеквизита.Действие;
		СтрокаРеквизитаФормы.Активность    = СтрокаРеквизита.Активность;
		
		ТипУзла = СтрокаРеквизита.ТипУзла;
		
		Если  ТипУзла <> ""Число""
			И ТипУзла <> ""Строка""
			И ТипУзла <> ""Дата""
			И ТипУзла <> ""Булево""
			И ТипУзла <> ""Неопределено""
			И ТипУзла <> ""Предопределенное""
			И ТипУзла <> ""Ссылка""
			И ТипУзла <> ""УникальныйИдентификатор""
			И ТипУзла <> ""СистемноеПеречисление""
			И ТипУзла <> ""ХранилищеЗначения""
			И ТипУзла <> ""Параметр"" Тогда
			
			// Это старый тип хранения данных.
			// Если тип не указан, то будет попытка вычислить истинное значение по старому типу
			// Если пользователь открыл объект для редактирования, то он может сам указать тип
			ТипУзла = """";
			
		КонецЕсли;
		
		Если ТипУзла = """" И СтрокаРеквизитаФормы.Значение = ""Неопределено"" Тогда
			ТипУзла = ""Неопределено"";
		КонецЕсли;
		
		СтрокаРеквизитаФормы.ТипУзла       = ТипУзла;
		
	КонецЦикла;
	
КонецПроцедуры

// Подготовка к отображению табличных частей объекта по данным дерева с данными
//
&НаСервере
Процедура СцТ_ОтобразитьТабличныеЧасти(ДеревоЗначения);
	
	УзелТабличныхЧастей = ДеревоЗначения.Строки.Найти(""ТабличныеЧасти"", ""Имя"", Истина);
	
	Если УзелТабличныхЧастей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Создание табличных документов, соответствующих табличным частям
	МассивНовыхРеквизитов = Новый Массив;
	
	Для каждого УзелТабличнойЧасти Из УзелТабличныхЧастей.Строки Цикл
		
		Если Элементы.Найти(""Страница"" + УзелТабличнойЧасти.Имя) = Неопределено Тогда
			// Добавление таблиц
			ЭтоНоваяТаблица = Истина;
			МассивНовыхРеквизитов.Добавить(
				Новый РеквизитФормы(
					""СцТ_Таблица_"" + УзелТабличнойЧасти.Имя,
					Новый ОписаниеТипов(""ТабличныйДокумент""),,
					УзелТабличнойЧасти.Синоним,
					Истина));
		КонецЕсли;
		
	КонецЦикла;
	
	ИзменитьРеквизиты(МассивНовыхРеквизитов);
	
	// Отображение таблицы на форме
	Для каждого УзелТабличнойЧасти Из УзелТабличныхЧастей.Строки Цикл
		СцТ_ОтобразитьТаблицуНаФорме(УзелТабличнойЧасти, Элементы.СтраницыСтруктурыОбъекта);
		СцТ_ЗаполнитьТаблицуЗначениями(УзелТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры

// Заполнение таблицы значениями по данным дерева
// 
// Параметры
// УзелТаблицы - узел дерева данных со значениями для заполнения
&НаСервере
Процедура СцТ_ЗаполнитьТаблицуЗначениями(УзелТаблицы)
	
	Попытка
		НужныйТД = ЭтотОбъект[""СцТ_Таблица_"" + УзелТаблицы.Имя];
	Исключение
		Возврат;
	КонецПопытки;
	
	НужныйТД.Очистить();
	
	// Заполнение шапки
	СписокКолонок = Новый СписокЗначений;
	
	// Добавление колонок таблицы
	УзелШапкиТаблицы = УзелТаблицы.Строки.Найти(""ШапкаТаблицы"", ""Имя"", Истина);
	
	Если УзелШапкиТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Вывод ячеек шапки
	НомерКолонки = 1;
	Для каждого СтрокаРеквизита Из УзелШапкиТаблицы.Строки Цикл
		Если СтрокаРеквизита.Активность Тогда
			СписокКолонок.Добавить(СтрокаРеквизита.Имя, СтрокаРеквизита.Синоним);
			
			АдресЯчейки = ""R1C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(НомерКолонки, ""ЧГ=0""));
			
			Ячейка = НужныйТД.Область(АдресЯчейки);
			Ячейка.Текст = СтрокаРеквизита.Синоним;
			НомерКолонки = НомерКолонки + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Оформление колонок
	Если НомерКолонки > 1 Тогда
		
		ШиринаКолонки = Окр(160/НомерКолонки, 0);
		
		Если ШиринаКолонки < 14 Тогда
			ШиринаКолонки = 14;
		КонецЕсли;
		
		Для П=1 По НомерКолонки - 1 Цикл
			АдресЯчейки = ""C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(П, ""ЧГ=0""));
			
			Ячейка = НужныйТД.Область(АдресЯчейки);
			
			Ячейка.ШиринаКолонки = ШиринаКолонки;
			
			Ячейка.ГраницаСправа = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
			Ячейка.ГраницаСлева  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
			
			АдресЯчейки = ""R1C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(П, ""ЧГ=0""));
			Ячейка = НужныйТД.Область(АдресЯчейки);
			
			Ячейка.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 3); 
			Ячейка.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 3);
			
			Ячейка.ЦветФона = Новый Цвет(215,215,215);
			
		КонецЦикла;
	КонецЕсли;
	
	// Заполнение значениями оставшейся части таблицы
	НомерСтроки = 2;
	Для каждого УзелСтроки Из УзелТаблицы.Строки Цикл
		
		Если УзелСтроки.Имя = ""ШапкаТаблицы"" Тогда
			Продолжить;
		КонецЕсли;
		
		НомерКолонки = 1;
		Для каждого ЭлементСписка Из СписокКолонок Цикл
			// Цикл выполняется по списку колонок, который содержит только отображаемые колонки
			// Отсортированные в нужном порядке
			
			ТекстЯчейки = """";
			УзелКолонки = УзелСтроки.Строки.Найти(ЭлементСписка.Значение, ""Имя"");
			Если УзелКолонки <> Неопределено Тогда
				АдресЯчейки = ""R%1C%2"";
				АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%1"", Формат(НомерСтроки , ""ЧГ=0""));
				АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(НомерКолонки, ""ЧГ=0""));
				
				Ячейка = НужныйТД.Область(АдресЯчейки);
				
				Ячейка.Текст = УзелКолонки.Представление;
				Ячейка.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
				Ячейка.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
				
			КонецЕсли;
			// Номер колонки нужно увеличить независимо от того,
			// Нашли или нет текущий узел - иначе собъются колонки
			НомерКолонки = НомерКолонки + 1;
			
		КонецЦикла;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла; 
	
КонецПроцедуры

// Отображение на форме таблицы
//
// Параметры
//	УзелТаблицы - узел дерева данных с описанием таблицы
//	РодительЭлементаФормы - элемент формы, на котором нужно отобразить таблицу
&НаСервере
Процедура СцТ_ОтобразитьТаблицуНаФорме(УзелТаблицы, РодительЭлементаФормы)
	
	ИмяСтраницы     = ""Страница_"" + УзелТаблицы.Имя;
	ИмяТаблицы      = ""СцТ_Таблица_"" + УзелТаблицы.Имя;
	СтраницаТаблицы = Элементы.Найти(ИмяСтраницы);
	
	Если СтраницаТаблицы <> Неопределено Тогда
		
		ЭтоНоваяТаблица   = Ложь;
		ЭлементТД = Элементы[ИмяТаблицы];
		СтраницаТаблицы.Видимость = УзелТаблицы.Активность;
		
	Иначе
		
		// Создание страницы для таблицы
		ЭтоНоваяТаблица = Истина;
		СтраницаДляТаблицы  = Элементы.Добавить(ИмяСтраницы, Тип(""ГруппаФормы""), РодительЭлементаФормы);
		СтраницаДляТаблицы.Вид       = ВидГруппыФормы.Страница;
		СтраницаДляТаблицы.Заголовок = УзелТаблицы.Синоним;
		
		СтраницаДляТаблицы.Видимость = УзелТаблицы.Активность;
		
		ИмяКомПанели = ""СцТ_КомПанель_"" + УзелТаблицы.Имя;
		ЭлементКомПанель = Элементы.Добавить(ИмяКомПанели, Тип(""ГруппаФормы""), СтраницаДляТаблицы);
		ЭлементКомПанель.Вид = ВидГруппыФормы.КоманднаяПанель;
		
		// Создание ТД на странице
		ЭлементТД = Элементы.Добавить(ИмяТаблицы, Тип(""ПолеФормы""), СтраницаДляТаблицы);
		ЭлементТД.Вид = ВидПоляФормы.ПолеТабличногоДокумента;
		ЭлементТД.ПутьКДанным = ИмяТаблицы;
		ЭлементТД.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		ЭлементТД.ОтображатьЗаголовки           = Истина;
		ЭлементТД.Видимость                     = Истина;
		//ЭлементТД.Редактирование                = Ложь;
		//ЭлементТД.ТолькоПросмотр                = Истина;
		//ЭлементТД.РазрешитьНачалоПеретаскивания = Ложь;
		//ЭлементТД.РазрешитьПеретаскивание       = Ложь;
		//ЭлементТД.Защита = Истина;
		
		ЭлементТД.УстановитьДействие(""Выбор"", ""ДанныеТаблицыВыбор"");
	
		// Добавление кнопок в командной панели
		
		// Кнопка визуального сравнения
		Если НЕ ФормаОткрытаПодВнешнимУправлением Тогда
		
			КнопкаСравнитьВизуально = Элементы.Добавить(
				""СцТ_"" + УзелТаблицы.Имя + ""СравнитьВизуально"",
				Тип(""КнопкаФормы""),
				ЭлементКомПанель);
			
			КнопкаСравнитьВизуально.ИмяКоманды = ""СравнитьТаблицуВизуально"";
		КонецЕсли;
		
		// Кнопка Добавить
		КнопкаДобавленияСтроки =  Элементы.Добавить(
			""СцТ_"" + УзелТаблицы.Имя + ""ДобавитьСтроку"",
			Тип(""КнопкаФормы""),
			ЭлементКомПанель);
		
		КнопкаДобавленияСтроки.ИмяКоманды = ""ДобавитьСтрокуТаблицы"";
		
		// Кнопка Копировать
		КнопкаДобавленияСтроки =  Элементы.Добавить(
			""СцТ_"" + УзелТаблицы.Имя + ""СкопироватьСтроку"",
			Тип(""КнопкаФормы""),
			ЭлементКомПанель);
		
		КнопкаДобавленияСтроки.ИмяКоманды = ""СкопироватьСтрокуТаблицы"";
		
		// Кнопка Удалить
		КнопкаУдаленияСтроки =  Элементы.Добавить(
			""СцТ_"" + УзелТаблицы.Имя + ""УдалитьПоследнююСтроку"",
			Тип(""КнопкаФормы""),
			ЭлементКомПанель);
		
		КнопкаУдаленияСтроки.ИмяКоманды = ""УдалитьПоследнююСтроку"";
		
		// Кнопка переместить наверх
		КнопкаУдаленияСтроки =  Элементы.Добавить(
			""СцТ_"" + УзелТаблицы.Имя + ""ПереместитьВверх"",
			Тип(""КнопкаФормы""),
			ЭлементКомПанель);
		
		КнопкаУдаленияСтроки.ИмяКоманды = ""ПереместитьВверх"";
		
		// Кнопка Переместить вниз
		КнопкаУдаленияСтроки =  Элементы.Добавить(
			""СцТ_"" + УзелТаблицы.Имя + ""ПереместитьВНиз"",
			Тип(""КнопкаФормы""),
			ЭлементКомПанель);
		
		КнопкаУдаленияСтроки.ИмяКоманды = ""ПереместитьВНиз"";
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура СцТ_ЗаполнитьДействиеШагаПриОшибке(ЭтотОбъект)
	
	СписокВыбора = Элементы.ДействиеПриОшибке.СписокВыбора;
	СписокВыбора.Добавить(""Остановить"", НСтр(""ru = 'Остановить выполнение'""));
	СписокВыбора.Добавить(""Продолжить"", НСтр(""ru = 'Продолжить выполнение'""));
	
	// Параметры действий при ошибке находятся в корне
	ДействиеПриОшибке = СцТ_ЗначениеВДереве(
		ДеревоЗначения,
		""ДействиеПриОшибке"",
		""Остановить"");
		
	ИмяПеременнойРеузльтатаВыполнения = СцТ_ЗначениеВДереве(
		ДеревоЗначения,
		""ПеременнаяОшибки"",
		"""");
	
	УправлениеДоступностьюПеременнойОшибки(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область СохранениеШагаВСценарии

// Сохранение реализовано в виде функции, т.к. потребуется
// ее выполнение в обработчике ПередЗакрытием
//
&НаКлиенте
Функция СцТ_ПрименитьИзменения_НаКлиенте() Экспорт
	
	// Проверка, что владелец формы еще не закрыт
	Если НЕ ВладелецФормы.Открыта() Тогда
		ТекстСообщения = НСтр(""ru = 'Форма с деревом шагов уже закрыта. Применить изменения невозможно'"");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	
	// Проверка правильности данных
	Отказ = Ложь;
	
	СцТ_ОбновитьНаименование_НаКлиенте();
	ОбновитьПользовательскоеОписание();
	
	Если ПустаяСтрока(ДШ_Наименование) Тогда
		
		СцТ_СообщитьПользователю(НСтр(""ru = 'Не заполнено наименование.'""),
			Отказ,
			""ДШ_Наименование"");
	КонецЕсли;
	
	ОбновитьПользовательскоеОписание();
	
	// Проверка индивидуальных настроек шага и заполнение ДереваЗначения
	СцТ_ПодготовитьДанныеШагаДляСохранения_НаКлиенте(Отказ);
	
	Если Отказ Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВозвращаемаяСтруктура = СцТ_СформироватьСтруктуруданныхШага_НаКлиенте();
	
	Если ОА_ЭтоНовый Тогда
		
		ДанныеШага = СцТ_ГлавнаяФорма.СцТ_СохранитьНовыйШаг(ВызвавшаяФорма, ВозвращаемаяСтруктура);
		
		ИдентификаторУзла = ДанныеШага.ПолучитьИдентификатор();
		ОА_НомерШага      = ДанныеШага.НомерШага;
		ОА_ЭтоНовый       = Ложь;
		
	Иначе
		СцТ_ГлавнаяФорма.СцТ_ПрименитьИзмененияВШаге(ВызвавшаяФорма, ДанныеШага, ВозвращаемаяСтруктура);
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

// Заполнение дерева значения данными формы.
// Проверка корректности специфических для этого шага данных
&НаКлиенте
Процедура СцТ_ПодготовитьДанныеШагаДляСохранения_НаКлиенте(Отказ)
	
	// Проверки
	
	// Очищать дерево значения нельзя, так как оно содержит все сделанные изменения
	// Таблица реквизитов изменяется на форме, поэтому ее нужно сохранить
	// А табличные части редактируются непосредственно в дереве
	
	// Сохранение таблицы реквизитов
	УзелРеквизитов = Неопределено;
	Для каждого УзелДерева Из ДеревоЗначения.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ""Реквизиты"" Тогда
			УзелРеквизитов = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелРеквизитов = Неопределено Тогда
		УзелРеквизитов = СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			ДеревоЗначения,
			""Реквизиты"",
			""Реквизиты"");
	КонецЕсли;
	
	УзелРеквизитов.ПолучитьЭлементы().Очистить();
	
	Для каждого СтрРеквизита Из ТаблицаРеквизитов Цикл
		СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			УзелРеквизитов,
			СтрРеквизита.Имя,
			СтрРеквизита.Значение,
			СтрРеквизита.Синоним,
			СтрРеквизита.Активность,
			СтрРеквизита.Представление,
			СтрРеквизита.Действие,
			"""",
			СтрРеквизита.ТипУзла);
		
	КонецЦикла;
	
	Если НаименованиеШагаИзмененоВручную Тогда
		СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			ДеревоЗначения,
			""ИСТЗ_НаименованиеРучное"",
			Истина);
	Иначе
		НайденныйУзел = СцТ_ГлавнаяФорма.СцТ_НайтиУзелДереваФормы(
			ДеревоЗначения,
			""Имя"",
			""ИСТЗ_НаименованиеРучное"");
			
		Если НайденныйУзел <> Неопределено Тогда
			ДеревоЗначения.ПолучитьЭлементы().Удалить(НайденныйУзел);
		КонецЕсли;
	КонецЕсли;
	
	Если ОА_ТипШага = ""Воспроизвести"" Тогда
		
		СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
			ДеревоЗначения,
			""ВариантЗаписи"",
			ВариантЗаписи);
		
	КонецЕсли;
		
	СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
		ДеревоЗначения,
		""ДействиеПриОшибке"",
		ДействиеПриОшибке);
		
	СцТ_ГлавнаяФорма.СцТ_ДобавитьУзелВДеревоЗначения(
		ДеревоЗначения,
		""ПеременнаяОшибки"",
		ИмяПеременнойРеузльтатаВыполнения);
	
КонецПроцедуры

// Свертка данных шага в структуру
// и подготовка возвращаемой структуры отредактированного шага
&НаКлиенте
Функция СцТ_СформироватьСтруктуруданныхШага_НаКлиенте()
	
	// СДШ - структура данных шага
	СДШ = Новый Структура;
	
	СДШ.Вставить(""ИдентификаторШага""           , ОА_ОписательПоложенияШагаВДереве.ИдентификаторШага);
	СДШ.Вставить(""НаименованиеШага""            , ДШ_Наименование);
	СДШ.Вставить(""ТипМетаданных""               , ДШ_ТипМетаданных);
	СДШ.Вставить(""ИмяМетаданных""               , ДШ_ИмяМетаданных);
	СДШ.Вставить(""Автоописание""                , ДШ_Автоописание);
	СДШ.Вставить(""Описание""                    , ДШ_Описание);
	СДШ.Вставить(""СкрытьАвтоописание""          , ДШ_СкрытьАвтоописание);
	СДШ.Вставить(""ОбСсылка""                    , ДШ_ОбСсылка);
	СДШ.Вставить(""ПредставлениеОбъекта""        , ДШ_ПредставлениеОбъекта);
	СДШ.Вставить(""ВыполнитьВручную""            , ДШ_ВыполнитьВручную);
	СДШ.Вставить(""Комментарий""                 , ДШ_Комментарий);
	СДШ.Вставить(""ИмяФормы""                    , ДШ_ИмяФормы);
	СДШ.Вставить(""ПредставлениеИмениМетаданных"", ДШ_ПредставлениеИмениМетаданных);
	СДШ.Вставить(""ЗаголовокФормы""              , ДШ_ЗаголовокФормы);
	СДШ.Вставить(""ДанныеКартинки""              , ДШ_ДанныеКартинки);
	СДШ.Вставить(""ДеревоЗначения""              , СцТ_ГлавнаяФорма.СцТ_ДеревоформыВДеревоСтруктур(ДеревоЗначения));
	
	//Сначала из таблицы ссылок нужно удалить неиспользованные ссылки
	СписокИспользуемыхСсылокВШаге = Новый СписокЗначений;
	СцТ_ГлавнаяФорма.ИтерационноеЗаполнениеСпискаСсылок(ДеревоЗначения, СписокИспользуемыхСсылокВШаге);
	Если НЕ ПустаяСтрока(ДШ_ОбСсылка) И СписокИспользуемыхСсылокВШаге.НайтиПоЗначению(ДШ_ОбСсылка) = Неопределено Тогда
		СписокИспользуемыхСсылокВШаге.Добавить(ДШ_ОбСсылка);
	КонецЕсли;
	
	Если СписокИспользуемыхСсылокВШаге.Количество() = 0 Тогда
		ТаблицаСсылокШага.Очистить();
	Иначе
		КоличествоСтрок = ТаблицаСсылокШага.Количество();
		// Таблицу нужно обходить только сначала!
		Если КоличествоСтрок > 0 Тогда
			Итератор = 0;
			Пока Итератор < КоличествоСтрок Цикл
				СтрокаТаблицы = ТаблицаСсылокШага[Итератор];
				ЭлементСписка = СписокИспользуемыхСсылокВШаге.НайтиПоЗначению(СтрокаТаблицы.СтрокаИдентификатора);
				Если ЭлементСписка = Неопределено ИЛИ ЭлементСписка.Пометка Тогда
					// Пометка в списке отвечает за дублирующие строки
					ТаблицаСсылокШага.Удалить(Итератор);
					КоличествоСтрок = КоличествоСтрок - 1;
				Иначе
					Итератор = Итератор + 1;
					// Переход на следующую строку
					ЭлементСписка.Пометка = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	// МТИ - массив таблицы идентификации
	МТИ = СцТ_ГлавнаяФорма.СцТ_УпаковатьВМассивТаблицуСсылокШага(ТаблицаСсылокШага);
	
	// ВСД - возвращаемая структура данных
	ВСД = Новый Структура;
	ВСД.Вставить(""ОписательПоложенияШагаВДереве"", ОА_ОписательПоложенияШагаВДереве);
	ВСД.Вставить(""Наименование""                 , ДШ_Наименование);
	ВСД.Вставить(""Активность""                   , ОА_Активность);
	ВСД.Вставить(""СтруктураДанныхШага""          , СДШ);
	ВСД.Вставить(""ЭтоНовый""                     , ОА_ЭтоНовый);
	ВСД.Вставить(""ТипШага""                      , ОА_ТипШага);
	ВСД.Вставить(""СсылкиШага""                   , МТИ);
	
	Возврат ВСД;
	
КонецФункции



#КонецОбласти

#Область ФормированеОписанийИНаименований

// Формирование описания шага на клиенте
&НаКлиенте
Функция СцТ_СформироватьОписаниеШага_НаКлиенте(Краткое = Ложь)
	
	Если ФормаОткрытаПодВнешнимУправлением Тогда
		Если Краткое Тогда
			ВозвращаемоеОписание = ДШ_Наименование;
		Иначе
			ВозвращаемоеОписание = ДШ_Автоописание;
		КонецЕсли;
		
	Иначе
		Если Краткое Тогда
			Если ОА_ТипШага = ""Воспроизвести"" Тогда
				ВозвращаемоеОписание = СцТ_ГлавнаяФорма.СцТ_ПолучитьОписаниеШага_Воспроизвести(Неопределено, Истина, СцТ_РодительУзла);
			Иначе
				ВозвращаемоеОписание = СцТ_ГлавнаяФорма.СцТ_ПолучитьОписаниеШага_СравнитьСЭталоном(Неопределено, Истина, СцТ_РодительУзла);
			КонецЕсли;
			
		Иначе
				
			Если СцТ_РодительУзла <> Неопределено Тогда
				ТипМД = СцТ_РодительУзла.ТипМетаданных;
				СинонимМД = СцТ_РодительУзла.ПредставлениеИмениМетаданных;
			Иначе
				ТипМД     = """";
				СинонимМД = """";
			КонецЕсли;
			
			ВозвращаемоеОписание = СцТ_СформироватьОписаниеШага_НаСервере(ТипМД, СинонимМД);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВозвращаемоеОписание;
	
КонецФункции

&НаСервере
Функция СцТ_СформироватьОписаниеШага_НаСервере(ТипМД, СинонимМД)
	
	МодульОбъекта = РеквизитФормыВЗначение(""Объект"");
	ДеревоЗначенийШага = РеквизитФормыВЗначение(""ДеревоЗначения"");
	
	Если ОА_ТипШага = ""Воспроизвести"" Тогда
		
		ВозвращаемоеЗначение = МодульОбъекта.СцТ_ПолучитьОписаниеШага_Воспроизвести_НаСервере(
			ТипМД,
			СинонимМД,
			ДеревоЗначенийШага);
		
	Иначе
		
		ВозвращаемоеЗначение = МодульОбъекта.СцТ_ПолучитьОписаниеШага_СравнитьСЭталоном_НаСервере(
			ТипМД,
			СинонимМД,
			ДеревоЗначенийШага);
			
	КонецЕсли;
		
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

&НаКлиенте
Процедура СцТ_ОбновитьНаименование_НаКлиенте(Принудительно = Ложь)
	
	Если НЕ НаименованиеШагаИзмененоВручную ИЛИ Принудительно Тогда
		ДШ_Наименование = СцТ_СформироватьОписаниеШага_НаКлиенте(Истина);
	КонецЕсли;
	
	Если Принудительно Тогда
		НаименованиеШагаИзмененоВручную = Ложь;
		Модифицированность = Истина;
		// В остальных случаях менять модифицированность не нужно,
		// так как ее должно изменить изменение другого элемента формы
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииРаботыСДеревомЗначения

// Возвращает значение заданного поля в дереве данных
//
// Параметры
//	ДерЗнач              - дерево с данными в котором ведется поиск
//	ИмяПараметра         - имя искомого параметра
//	ЕслиНеНайдено        - что вернуть, если значение не найдено
//	ВозвращаемыйРеквизит - имя колонки, которую нужно вернуть
//	Рекурсивно           - признак рекурсии
// Возвращаемое значение - значение нужного поля найденного узла
&НаСервереБезКонтекста
Функция СцТ_ЗначениеВДереве(
	ДерЗнач,
	ИмяПараметра,
	ЕслиНеНайдено = Неопределено,
	ВозвращаемыйРеквизит = ""Значение"",
	Рекурсивно = Истина)
	
	УзелЗначения = СцТ_НайтиУзелДереваФормы(ДерЗнач, ""Имя"", ИмяПараметра, Рекурсивно);
	Если УзелЗначения = Неопределено Тогда
		Возврат ЕслиНеНайдено;
	Иначе
		Возврат УзелЗначения[ВозвращаемыйРеквизит];
	КонецЕсли;
	
КонецФункции

// Поиск нужного узла в дереве данных
//
// Параметры
//	ДеревоФормы       - дерево, в котором ведется поиск
//	Реквизит          - имя поля в котором ведется поиск
//	ЗначениеРеквизита - значение в поле
//	Рекурсивно        - признак рекурсивного поиска
// Возвращаемое значение - найденный узел
&НаСервереБезКонтекста
Функция СцТ_НайтиУзелДереваФормы(
	ДеревоФормы,
	Реквизит,
	ЗначениеРеквизита,
	Рекурсивно = Ложь)
	
	Если ДеревоФормы = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Для каждого Узел Из ДеревоФормы.ПолучитьЭлементы() Цикл
		Если Узел[Реквизит] = ЗначениеРеквизита Тогда
			Возврат Узел;
		КонецЕсли;
		Если Рекурсивно Тогда
			НайденыйУзел = СцТ_НайтиУзелДереваФормы(Узел, Реквизит, ЗначениеРеквизита, Истина);
			Если НайденыйУзел <> Неопределено Тогда
				Возврат НайденыйУзел;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Заполнение дерева значения данными из структуры
//
// параметры
//	ДеревоФормы - заполняемое дерево
//	ДеревоСтруктур - структура с данными
&НаСервереБезКонтекста
Процедура СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(ДеревоФормы, ДеревоСтруктур)
	
	СтрокиДереваФормы = ДеревоФормы.ПолучитьЭлементы();
	Для каждого СтрокаДереваСтруктур Из ДеревоСтруктур.ИСТЗ_Строки Цикл
		СтрокаДереваФормы = СтрокиДереваФормы.Добавить();
		Для каждого КлючЗначение Из СтрокаДереваСтруктур Цикл
			Если КлючЗначение.Ключ <> ""ИСТЗ_Строки"" Тогда
				СтрокаДереваФормы[КлючЗначение.Ключ] = КлючЗначение.Значение;
			КонецЕсли;
		КонецЦикла;
		СцТ_ЗаполнитьДеревоФормыИзДереваСтруктур(СтрокаДереваФормы, СтрокаДереваСтруктур);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПреобразоватьЗначенияВДереве(ВеткаДерева, ДляОтображения = Истина)
	
	Для каждого СтрокаДерева Из ВеткаДерева.Строки Цикл
		
		Если ДляОтображения Тогда
			СтрокаДерева.Значение = ЗначениеИзСтрокиВнутр(СтрокаДерева.Значение);
		Иначе
			СтрокаДерева.Значение = ЗначениеВСтрокуВнутр(СтрокаДерева.Значение);
		КонецЕсли;
		
		ПреобразоватьЗначенияВДереве(СтрокаДерева, ДляОтображения);
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область ДополнительныеПроцедурыИФункции

// Обновление картинок на закладках
// Вызывается посредством обработки ожидания, чтобы форма нормально закрывалась после редактирования
&НаКлиенте
Процедура СцТ_ОбновитьЗаголовкиЗакладок()
	
	Элементы.Страница_РедактируемоеОписание.Картинка = ?(
		ПустаяСтрока(ДШ_Описание),
		Новый Картинка,
		БиблиотекаКартинок.РежимПросмотраСпискаСписок);
	
	Элементы.Страница_Комментарий.Картинка = ?(
		ПустаяСтрока(ДШ_Комментарий),
		Новый Картинка,
		БиблиотекаКартинок.РежимПросмотраСпискаСписок);
	
КонецПроцедуры


// Формирование представление существующего шага
// параметры
// РодительскийШаг - указатель на данные родительского шага.
// НЕ может быть Неопределено
&НаКлиенте
Процедура ОтобразитьПредставлениеСуществующегоРодительскогоШага(РодительскийШаг)
	
	ПредставлениеГруппы = НСтр(""ru = 'Шаг №%1 """"%2""""'"");
	ПредставлениеГруппы = СтрЗаменить(
		ПредставлениеГруппы,
		""%1"",
		Формат(РодительскийШаг.НомерШага, ""ЧГ=0""));
	
	ПредставлениеГруппы = СтрЗаменить(
		ПредставлениеГруппы,
		""%2"",
		РодительскийШаг.Наименование);
	
КонецПроцедуры

// Вывод сообщения пользователю
//
// Параметры
// ТекстСообщения - отображаемый текст
// Отказ - ссылка на переменную отказ в вызываемой процедуре
// ПолеДанных - поле, которое должно получить фокус
&НаКлиенте
Процедура СцТ_СообщитьПользователю(ТекстСообщения, Отказ = Неопределено, ПолеДанных = """")
	
	Отказ = Истина;
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Поле  = ПолеДанных;
	Сообщение.Сообщить();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюПеременнойОшибки(УпрФорма)
	
	Если УпрФорма.ДействиеПриОшибке = ""Остановить"" Тогда
		УпрФорма.Элементы.СтраницыПеременнойОшибки.ТекущаяСтраница = УпрФорма.Элементы.СтраницыПеременнойОшибки_Пустая;
	Иначе
		УпрФорма.Элементы.СтраницыПеременнойОшибки.ТекущаяСтраница = УпрФорма.Элементы.СтраницыПеременнойОшибки_Заполненная;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ОбработатьВыборЗначенияВТаблицеНаСервере(ВозвращеннаяСтруктураДанных)
	
	МодульОбработки = РеквизитФормыВЗначение(""Объект"");
	ОписаниеВыбранногоЗначения = МодульОбработки.СцТ_ПолучитьОписаниеЗначения(
		ВозвращеннаяСтруктураДанных.ВыбранноеЗначение);
		
	Если ОписаниеВыбранногоЗначения.ТипЗначения = ""Ссылка"" Тогда
		// Нужно добавить структуру идентификации в таблицу ссылок шага
		
		// МСИ - массив структур идентификации
		МСИ = МодульОбработки.СцТ_ПреобразоватьДанныеФормыТаблицыСсылокШагаВСтруктуру(ТаблицаСсылокШага);
		
		МодульОбработки.СцТ_ДобавитьИлиИзменитьСтруктуруИдентификации(
			ВозвращеннаяСтруктураДанных.ВыбранноеЗначение,
			МСИ,
			ВозвращеннаяСтруктураДанных.ТипМД,
			ВозвращеннаяСтруктураДанных.ИмяМД,
			ВозвращеннаяСтруктураДанных.СинонимМД,
			АдресТаблицыКлючей,
			ОписаниеВыбранногоЗначения.ВнутрЗначение);
			
		// Обратное преобразование МСИ в таблицу ссылок шага
		МодульОбработки.СцТ_ЗаполнитьТаблицуИдентификацииФормыПоДаннымМассива(ТаблицаСсылокШага, МСИ);
		
	КонецЕсли;
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить(""ТипЗначения""  , ОписаниеВыбранногоЗначения.ТипЗначения);
	СтруктураОтвета.Вставить(""Значение""     , ОписаниеВыбранногоЗначения.ВнутрЗначение);
	СтруктураОтвета.Вставить(""Представление"", ОписаниеВыбранногоЗначения.Представление);
	
	Возврат СтруктураОтвета;
	
	
	
	
	//Если ВозвращеннаяСтруктураДанных.ТипМД = ""Перечисления"" Тогда
	//	
	//	МассивЗначений = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().ЗначенияПеречисления;
	//	НужноеИмя = """";
	//	Для каждого ЗначениеПеречисления Из МассивЗначений ЦИкл
	//		ПолноеИмяПредопределенного = ""Перечисление."" + ВозвращеннаяСтруктураДанных.ИмяМД + ""."" + ЗначениеПеречисления.Имя;
	//		Если ПредопределенноеЗначение(ПолноеИмяПредопределенного) = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение Тогда
	//			НужноеИмя = ПолноеИмяПредопределенного;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	СтруктураСтроки.Вставить(""ТипЗначения""  , ""Предопределенное"");
	//	СтруктураСтроки.Вставить(""Значение""     , НужноеИмя);
	//	СтруктураСтроки.Вставить(""Представление"", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
	//	
	//Иначе
	//	Попытка
	//		Предопределенное = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Предопределенное;
	//	Исключение
	//		Предопределенное = Ложь;
	//	КонецПопытки;
	//	
	//	Если Предопределенное Тогда
	//		
	//		ИмяМ = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().Имя;
	//		
	//		
	//		Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""Справочник"";
	//			
	//		ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""Документ"";
	//			
	//		ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""ПланСчетов"";
	//			
	//		ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""ПланВидовХарактеристик"";
	//			
	//		ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""ПланВидовРасчета"";
	//			
	//		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""Перечисление"";
	//			
	//		ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""БизнесПроцесс"";
	//			
	//		ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипЗнч(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение)) Тогда
	//			ТМД = ""Задача"";
	//			
	//		Иначе
	//			ТМД = """";
	//			
	//		КонецЕсли;
	//		
	//		Если ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Пустая() Тогда
	//			ВнутрЗначение = ТМД + ""."" + ИмяМ + "".ПустоеЗначение"";
	//		Иначе
	//			МассивИменПредопределенных = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.Метаданные().ПолучитьИменаПредопределенных();
	//			НужноеИмя = """";
	//			Для каждого ИмяПредопределенного Из МассивИменПредопределенных ЦИкл
	//				ПолноеИмяПредопределенного = ТМД + ""."" + ИмяМ + ""."" + ИмяПредопределенного;
	//				Если ПредопределенноеЗначение(ПолноеИмяПредопределенного) = ВозвращеннаяСтруктураДанных.ВыбранноеЗначение Тогда
	//					НужноеИмя = ПолноеИмяПредопределенного;
	//					Прервать;
	//				КонецЕсли;
	//			КонецЦикла;
	//			
	//			ВнутрЗначение = НужноеИмя;
	//		КонецЕсли;
	//		ТипЗначения = ""Предопределенное"";
	//		
	//		СтруктураСтроки.Вставить(""ТипЗначения""  , ""Предопределенное"");
	//		СтруктураСтроки.Вставить(""Значение""     , ВнутрЗначение);
	//		СтруктураСтроки.Вставить(""Представление"", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
	//		
	//	Иначе
	//		ИдентификаторСсылки = Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение.УникальныйИдентификатор());
	//		
	//		МодульОбработки = РеквизитФормыВЗначение(""Объект"");
	//		
	//		// МСИ - массив структур идентификации
	//		МСИ = МодульОбработки.СцТ_ПреобразоватьДанныеФормыТаблицыСсылокШагаВСтруктуру(ТаблицаСсылокШага);
	//		
	//		МодульОбработки.СцТ_ДобавитьИлиИзменитьСтруктуруИдентификации(
	//			ВозвращеннаяСтруктураДанных.ВыбранноеЗначение,
	//			МСИ,
	//			ВозвращеннаяСтруктураДанных.ТипМД,
	//			ВозвращеннаяСтруктураДанных.ИмяМД,
	//			ВозвращеннаяСтруктураДанных.СинонимМД,
	//			АдресТаблицыКлючей,
	//			ИдентификаторСсылки);
	//			
	//		// Обратное преобразование МСИ в таблицу ссылок шага
	//		МодульОбработки.СцТ_ЗаполнитьТаблицуИдентификацииФормыПоДаннымМассива(ТаблицаСсылокШага, МТИ);
	//		
	//		СтруктураСтроки.Вставить(""ТипЗначения""  , ""Ссылка"");
	//		СтруктураСтроки.Вставить(""Значение""     , ИдентификаторСсылки);
	//		СтруктураСтроки.Вставить(""Представление"", Строка(ВозвращеннаяСтруктураДанных.ВыбранноеЗначение));
	//	КонецЕсли;
	//	
	//КонецЕсли;
	//
	//Возврат СтруктураСтроки;
	
КонецФункции

&НаКлиенте
Процедура УстановитьТипЗначенияПоля(ТекущийТип, ДанныеСтроки)
	
	Если ТекущийТип = ""Число"" Тогда
		ОписаниеТипов = Новый ОписаниеТипов(""Число"");
		
	ИначеЕсли ТекущийТип = ""Дата"" Тогда
		ОписаниеТипов = Новый ОписаниеТипов(""Дата"");
		
	ИначеЕсли ТекущийТип = ""Булево"" Тогда
		ОписаниеТипов = Новый ОписаниеТипов(""Булево"");
		
	Иначе
		
		ОписаниеТипов = Новый ОписаниеТипов(""Строка"");
		
	КонецЕсли;
	
	ДанныеСтроки.Значение = ОписаниеТипов.ПривестиЗначение(ДанныеСтроки.Значение);
	
	Элементы.ТР_Значение.ОграничениеТипа = ОписаниеТипов;
	
	Элементы.ТР_Значение.ВыбиратьТип     = Ложь;
	Элементы.ТР_Значение.КнопкаВыбора    = Ложь;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьПользовательскоеОписание()
	
	ТекстОписания = ДШ_Описание;
	
	Если НЕ ДШ_СкрытьАвтоописание Тогда
		ДШ_Автоописание = СцТ_СформироватьОписаниеШага_НаКлиенте();
		ТекстОписания = СцТ_ГлавнаяФорма.СцТ_ДобавитьПодстроку(ТекстОписания, ДШ_Автоописание, Символы.ПС);
	КонецЕсли;
	
	ПользовательскоеОписание = ТекстОписания;
	
КонецПроцедуры

&НаСервере
Функция СцТ_ПоместитьНастройкуРеквизитовВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(РеквизитФормыВЗначение(""ДеревоЗначения""), УникальныйИдентификатор);
	
КонецФункции



// Обновление отображения формы в соответствии с настройкой
//
// Параметры
// АдресХранилища - адрес хранения настройки
&НаСервере
Процедура СцТ_ОбновитьОтображениеВСоответствииСНастройкой(АдресХранилища)
	
	ДеревоНастройки = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	ДеревоЗначенияНаСервере = РеквизитФормыВЗначение(""ДеревоЗначения"");
	
	СцТ_ОбновитьНастройкиТаблицыРеквизитов(ДеревоНастройки, ДеревоЗначенияНаСервере);
	СцТ_ОбновитьНастройкиТабличныхЧастей(ДеревоНастройки, ДеревоЗначенияНаСервере);
	Модифицированность = Истина;
	
	ЗначениеВРеквизитФормы(ДеревоЗначенияНаСервере, ""ДеревоЗначения"");
	
КонецПроцедуры

// Обновление настроек таблицы отображения реквизитов
//
// Параметры
// ДеревоДанных - дерево хранения данных
&НаСервере
Процедура СцТ_ОбновитьНастройкиТаблицыРеквизитов(ДеревоНастройки, ДеревоСДанными)
	
	РеквизитыИзменились = Ложь;
	
	УзелРеквизитов_Настройка = ДеревоНастройки.Строки.Найти(""Реквизиты"", ""Имя"");
	УзелРеквизитов_Данные    = ДеревоСДанными.Строки.Найти(""Реквизиты"", ""Имя"");
	
	
	Если УзелРеквизитов_Настройка = Неопределено ИЛИ УзелРеквизитов_Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ УзелРеквизитов_Настройка.Активность Тогда
		УзелРеквизитов_Данные.Активность = Ложь;
		
		Элементы.СтраницыДанных_Реквизиты.Доступность = Ложь;
		Элементы.СтраницыДанных_Реквизиты.Заголовок   = НСтр(""ru = 'Реквизиты (не активны)'"");
	Иначе
		УзелРеквизитов_Данные.Активность = Истина;
		
		Элементы.СтраницыДанных_Реквизиты.Доступность = Истина;
		Элементы.СтраницыДанных_Реквизиты.Заголовок   = НСтр(""ru = 'Реквизиты'"");
	КонецЕсли;
	
	Для каждого СтрокаРеквизита_Настройка Из УзелРеквизитов_Настройка.Строки Цикл
		
		СтрокаДанных = УзелРеквизитов_Данные.Строки.Найти(СтрокаРеквизита_Настройка.Имя, ""Имя"");
		
		Если СтрокаДанных = Неопределено Тогда
			// Такого быть не должно
			Продолжить;
		КонецЕсли;
		
		Индекс_Данные = УзелРеквизитов_Данные.Строки.Индекс(СтрокаДанных);
		Индекс_Настройки = УзелРеквизитов_Настройка.Строки.Индекс(СтрокаРеквизита_Настройка);
		
		Дельта = Индекс_Настройки - Индекс_Данные;
		
		Если Дельта <> 0 Тогда
			УзелРеквизитов_Данные.Строки.Сдвинуть(СтрокаДанных, Дельта);
		КонецЕсли;
		
		
		Если СтрокаДанных.Активность <> СтрокаРеквизита_Настройка.Активность
			ИЛИ СтрокаДанных.Действие <> СтрокаРеквизита_Настройка.Действие
			ИЛИ Дельта <> 0 Тогда
			
			СтрокаДанных.Активность = СтрокаРеквизита_Настройка.Активность;
			СтрокаДанных.Действие   = СтрокаРеквизита_Настройка.Действие;
			
			// Изменение отображения
			ПараметрОтбора = Новый Структура(""Имя"", СтрокаРеквизита_Настройка.Имя);
			МассивОтобранныхСтрок = ТаблицаРеквизитов.НайтиСтроки(ПараметрОтбора);
			
			Если МассивОтобранныхСтрок.Количество() > 0 Тогда
				РедактируемаяСтрока = МассивОтобранныхСтрок[0];
			Иначе
				// Такого не должно быть - это рассогласование
				Продолжить;
			КонецЕсли;
			
			Если Дельта <> 0 Тогда
				ТаблицаРеквизитов.Сдвинуть(РедактируемаяСтрока, Дельта);
			КонецЕсли;
			
			РедактируемаяСтрока.Действие   = СтрокаРеквизита_Настройка.Действие;
			РедактируемаяСтрока.Активность = СтрокаРеквизита_Настройка.Активность;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Обновление настроек табличных частей
//
// Параметры
// ДеревоНастройки - дерево с настройками
&НаСервере
Процедура СцТ_ОбновитьНастройкиТабличныхЧастей(ДеревоНастройки, ДеревоДанных)
	
	УзелТЧ_Данные    = ДеревоДанных.Строки.Найти(""ТабличныеЧасти"", ""Имя"");
	УзелТЧ_Настройки = ДеревоНастройки.Строки.Найти(""ТабличныеЧасти"", ""Имя"");
	
	Если УзелТЧ_Данные = Неопределено ИЛИ УзелТЧ_Настройки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого ОписаниеТЧ_Данные Из УзелТЧ_Данные.Строки Цикл
		
		ОписаниеТЧ_Настройки = УзелТЧ_Настройки.Строки.Найти(ОписаниеТЧ_Данные.Имя, ""Имя"");
		Если ОписаниеТЧ_Настройки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		// Управление закладками
		ИмяСтраницы = ""Страница_"" + ОписаниеТЧ_Данные.Имя;
		СтраницаСТаблицей = Элементы[ИмяСтраницы];
		
		Если ОписаниеТЧ_Данные.Активность <> ОписаниеТЧ_Настройки.Активность Тогда
			
			ОписаниеТЧ_Данные.Активность = ОписаниеТЧ_Настройки.Активность;
			СтраницаСТаблицей.Видимость = ОписаниеТЧ_Данные.Активность;
			
		КонецЕсли;
		
		ИндексТаблицы_Данные    = УзелТЧ_Данные.Строки.Индекс(ОписаниеТЧ_Данные);
		ИндексТаблицы_Настройка = УзелТЧ_Настройки.Строки.Индекс(ОписаниеТЧ_Настройки);
		
		Если ИндексТаблицы_Данные <> ИндексТаблицы_Настройка Тогда
			
			// Изменение положения в дереве
			Дельта = ИндексТаблицы_Настройка - ИндексТаблицы_Данные;
			
			Если Дельта <> 0 Тогда
				УзелТЧ_Данные.Строки.Сдвинуть(ОписаниеТЧ_Данные, Дельта);
				ЕстьИзменения = Истина;
			КонецЕсли;
			
			// Изменение положения на форме
			Если ИндексТаблицы_Настройка > ИндексТаблицы_Данные тогда
				ИндексТаблицы_Настройка = ИндексТаблицы_Настройка + 1;
			КонецЕсли;
			
			// Поиск нужного элемента. Первая страница (реквизитов) не считается
			ИндексЭлемента = -1;
			Местоположение = Неопределено;
			Для каждого Страница Из Элементы.СтраницыСтруктурыОбъекта.ПодчиненныеЭлементы Цикл
				Если ИндексЭлемента = ИндексТаблицы_Настройка Тогда
					Местоположение = Страница;
					Прервать;
				КонецЕсли;
				ИндексЭлемента = ИндексЭлемента + 1;
			КонецЦикла;
			
			Если Местоположение <> Неопределено Тогда
				Элементы.Переместить(СтраницаСТаблицей, Элементы.СтраницыСтруктурыОбъекта, Местоположение);
			КонецЕсли;
			
		КонецЕсли;
		
		СцТ_ОбновитьНастройкиТаблицы(ОписаниеТЧ_Настройки, ОписаниеТЧ_Данные);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СцТ_ОбновитьНастройкиТаблицы(УзелТаблицы_Настройка, УзелТаблицы_Данные)
	
	УзелШапки_Данные = УзелТаблицы_Данные.Строки.Найти(""ШапкаТаблицы"", ""Имя"", Истина);
	
	Если УзелШапки_Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьИзменения = Ложь;
	Для каждого СтрокаНастройки Из УзелТаблицы_Настройка.Строки Цикл
		
		СтрокаДанных = УзелШапки_Данные.Строки.Найти(СтрокаНастройки.Имя, ""Имя"");
		
		Если СтрокаДанных = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Индекс_Настройка = УзелТаблицы_Настройка.Строки.Индекс(СтрокаНастройки);
		Индекс_Данные    = УзелШапки_Данные.Строки.Индекс(СтрокаДанных);
		
		Дельта = Индекс_Настройка - Индекс_Данные;
		
		Если Дельта <> 0 Тогда
			УзелШапки_Данные.Строки.Сдвинуть(СтрокаДанных, Дельта);
			ЕстьИзменения = Истина;
		КонецЕсли;
		
		Если    СтрокаДанных.Активность <> СтрокаНастройки.Активность
			ИЛИ СтрокаДанных.Действие <> СтрокаНастройки.Действие Тогда
			
			СтрокаДанных.Активность = СтрокаНастройки.Активность;
			СтрокаДанных.Действие   = СтрокаНастройки.Действие;
			
			ЕстьИзменения = Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьИзменения Тогда
		// Таблицу нужно перерисовать
		СцТ_ЗаполнитьТаблицуЗначениями(УзелТаблицы_Данные);
	КонецЕсли;
	
КонецПроцедуры



// Подготовка данных для визуального сравнения двух таблиц
//
// Параметры
// Знач ПараметрыДляПоискаОбъекта - структура параметров родительского шага, для поиска объекта или записи ИБ
//	Знач ИмяТаблицы - имя таблицы
//	Знач АдресТаблицыСсылок - адрес таблицы ссылок сценария для поиска объекта или записи ИБ
//	Знач ГлобальныеПараметры - структура глобальны параметров для определения истинных значений параметров
//	ТекстСообщения  - возвращаемое сообщение об ошибках в случае неудачи
&НаСервере
Функция СцТ_ПодготовитьДанныеДляВизуальногоСравненияТаблицНаСервере(
	Знач ПараметрыДляПоискаОбъекта,
	Знач ИмяТаблицы,
	Знач АдресТаблицыСсылок,
	Знач ГлобальныеПараметры,
	ТекстСообщения = """")
	
	Если ПараметрыДляПоискаОбъекта.ТипМД = ""РегистрыСведений"" Тогда
		// ТЧ нету
		Возврат Неопределено;
	КонецЕсли;
	
	МодульЭтойОбработки = РеквизитФормыВЗначение(""Объект"");
	
	ОбъектИлиЗапись = МодульЭтойОбработки.ПолучитьОбъектИлиЗаписьПоСтруктуреПоиска(
		ПараметрыДляПоискаОбъекта,
		АдресТаблицыСсылок,
		ГлобальныеПараметры);
	
	Если ОбъектИлиЗапись = Неопределено Тогда
		ТекстСообщения = НСтр(""ru = 'Не удалось найти объект или запись в информационной базе.'"");
		Возврат Неопределено;
	КонецЕсли;
	
	// ***************************
	// Построение эталонной таблицы
	
	ДеревоНаСервере = РеквизитФормыВЗначение(""ДеревоЗначения"");
	УзелТаблиц = ДеревоНаСервере.Строки.Найти(""ТабличныеЧасти"", ""Имя"");
	
	Если УзелТаблиц = Неопределено Тогда
		ТекстСообщения = НСтр(""ru = 'Не удалось найти узел табличных частей в структуре данных шага.'"");
		Возврат Неопределено;
	КонецЕсли;
	
	УзелТаблицы = УзелТаблиц.Строки.Найти(ИмяТаблицы, ""Имя"");
	
	Если УзелТаблицы = Неопределено Тогда
		ТекстСообщения = НСтр(""ru = 'Не удалось найти узел таблицы %1 в структуре данных шага.'"");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, ""%1"", ИмяТаблицы);
		Возврат Неопределено;
	КонецЕсли;
	
	МассивИсключений    = Новый Массив;
	МассивКлючевыхПолей = Новый Массив;
	
	// Вместо таблицы ссылок нужно передать таблицу ссылок шага
	АдрВременнойТаблСсылок = ПолучитьАдресТаблицыСсылокШагаДляВычисленияИстинныхЗначений();
	
	ЭталоннаяТаблица = МодульЭтойОбработки.СцТ_СформироватьТаблицуПоУзлуОписанияТаблицы(
		УзелТаблицы,
		МассивИсключений,
		МассивКлючевыхПолей,
		АдрВременнойТаблСсылок,
		ГлобальныеПараметры,
		ТекстСообщения);
		
	// ***************************
	// Построение тестируемой таблицы
	ТестоваяТаблица = ОбъектИлиЗапись[УзелТаблицы.Имя].Выгрузить();
	
	ТипОбъекта = ""СравниваемаяТабличнаяЧасть"";
	
	МодульЭтойОбработки.СцТ_ПреобразоватьВТаблицеХранилищеЗначенияВСтроку(ТестоваяТаблица);
	
	// Возвращаемая структура
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить(""АдресЭталоннойТЗ"",
		ПоместитьВоВременноеХранилище(ЭталоннаяТаблица, УникальныйИдентификатор));
	СтруктураОтвета.Вставить(""АдресТестовойТЗ"",
		ПоместитьВоВременноеХранилище(ТестоваяТаблица , УникальныйИдентификатор));
	СтруктураОтвета.Вставить(""МассивИсключений""   , МассивИсключений);
	СтруктураОтвета.Вставить(""МассивКлючевыхПолей"", МассивКлючевыхПолей);
	СтруктураОтвета.Вставить(""ТипОбъекта""         , ТипОбъекта);
	СтруктураОтвета.Вставить(""ИмяТаблицы""         , ИмяТаблицы);
	
	Возврат СтруктураОтвета;
	
КонецФункции

// Подготовка данных для визуального сравнения таблицы реквизитов шапки
//
// Параметры
// Знач ПараметрыДляПоискаОбъекта - структура параметров родительского шага, для поиска объекта или записи ИБ
//	Знач АдресТаблицыСсылок - адрес таблицы ссылок сценария для поиска объекта или записи ИБ
//	Знач ГлобальныеПараметры - структура глобальны параметров для определения истинных значений параметров
//	ТекстСообщения  - возвращаемое сообщение об ошибках в случае неудачи
&НаСервере
Функция СцТ_ПодготовитьДанныеДляСравненияРеквизитовШапки_НаСервере(
	Знач ПараметрыДляПоискаОбъекта,
	Знач АдрестаблицыСсылок,
	Знач ГлобальныеПараметры,
	ТекстСообщения = """")
	
	МодульЭтойОбработки = РеквизитФормыВЗначение(""Объект"");
	
	// ***********************************
	// Подготовка эталонной таблицы
	
	// В отличие от табличных частей, истинные значения, которых хранятся
	// только в дереве значений, в данном случае, истинная таблица - на форме
	ЭталоннаяТаблица_НаСервере = РеквизитФормыВЗначение(""ТаблицаРеквизитов"");
	
	Для каждого Колонка Из ЭталоннаяТаблица_НаСервере.Колонки Цикл
		Если ПустаяСтрока(Колонка.Заголовок) Тогда
			Колонка.Заголовок = Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	
	// В сравнении участвуют только активные строки
	КоличествоСтрок = ЭталоннаяТаблица_НаСервере.Количество();
	Для ОбратныйИндекс = 1 По КоличествоСтрок Цикл
		ОчереднаяСтрока = ЭталоннаяТаблица_НаСервере[КоличествоСтрок - ОбратныйИндекс];
		Если НЕ ОчереднаяСтрока.Активность Тогда
			ЭталоннаяТаблица_НаСервере.Удалить(ОчереднаяСтрока);
		КонецЕсли;
	КонецЦикла;
	
	// Вычисление истинных значений
	
	// Вместо таблицы ссылок нужно передать таблицу ссылок шага
	АдрВременнойТаблСсылок = ПолучитьАдресТаблицыСсылокШагаДляВычисленияИстинныхЗначений();
	
	ЭталоннаяТаблица_НаСервере.Колонки.Добавить(""ИстинноеЗначение"");
	Для каждого СтрТаблицы Из ЭталоннаяТаблица_НаСервере Цикл
		СтрТаблицы.ИстинноеЗначение = МодульЭтойОбработки.СцТ_ПолучитьЗначение_НаСервере(
			СтрТаблицы.Значение,
			АдрВременнойТаблСсылок,
			СтрТаблицы.ТипУзла,
			ГлобальныеПараметры);
	КонецЦикла;
	
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""Значение"");
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""ТипУзла"");
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""Действие"");
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""Кл"");
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""Активность"");
	
	ЭталоннаяТаблица_НаСервере.Колонки.Добавить(""Значение"");
	ЭталоннаяТаблица_НаСервере.ЗагрузитьКолонку(ЭталоннаяТаблица_НаСервере.ВыгрузитьКолонку(""ИстинноеЗначение""), ""Значение"");
	
	ЭталоннаяТаблица_НаСервере.Колонки.Удалить(""ИстинноеЗначение"");
	
	// ***********************************
	// Подготовка тестируемой таблицы
	
	ТестоваяТаблица_НаСервере = ЭталоннаяТаблица_НаСервере.Скопировать();
	
	ТестоваяТаблица_НаСервере.ЗаполнитьЗначения(Неопределено, ""Значение, Представление"");
	
	// Для поиска объекта или записи ИБ нужно передать истинную таблицу ссылок
	// так как вычисление выполняется по родительскому шагу
	ОбъектИлиЗапись = МодульЭтойОбработки.ПолучитьОбъектИлиЗаписьПоСтруктуреПоиска(
		ПараметрыДляПоискаОбъекта,
		АдресТаблицыСсылок,
		ГлобальныеПараметры);
		
	Если ОбъектИлиЗапись = Неопределено Тогда
		ТекстСообщения = НСтр(""ru = 'Не найден объект или запись информационной базы'"");
		Возврат Неопределено;
	КонецЕсли;
	
	Для каждого СтрРеквизита Из ТестоваяТаблица_НаСервере Цикл
		
		Попытка
			ИстинноеЗначение = ОбъектИлиЗапись[СтрРеквизита.Имя];
		Исключение
			ИстинноеЗначение = Неопределено;
		КонецПопытки;
		
		Если ТипЗнч(ИстинноеЗначение) = Тип(""ХранилищеЗначения"") Тогда
			СтрРеквизита.Значение = XMLСтрока(ИстинноеЗначение);
		Иначе
			СтрРеквизита.Значение = ИстинноеЗначение;
		КонецЕсли;
		
		СтрРеквизита.Представление = Строка(ИстинноеЗначение);
		
	КонецЦикла;
	
	// Сформируем масив имен колонок - исключений (сравнение по которым проводить не нужно)
	МассивИсключений = Новый Массив;
	
	// Сформируем массив ключевых полей с учетом исключений
	МассивКлючевыхПолей = Новый Массив;
	МассивКлючевыхПолей.Добавить(""Имя"");
	
	// Формирование возвращаемой структуры данных
	
	СтруктураОтвета = Новый Структура;
	СтруктураОтвета.Вставить(""АдресЭталоннойТЗ"",
		ПоместитьВоВременноеХранилище(
			ЭталоннаяТаблица_НаСервере,
			УникальныйИдентификатор));
		
	СтруктураОтвета.Вставить(""АдресТестовойТЗ"",
		ПоместитьВоВременноеХранилище(
			ТестоваяТаблица_НаСервере,
			УникальныйИдентификатор));
		
	СтруктураОтвета.Вставить(""МассивИсключений""    , МассивИсключений);
	СтруктураОтвета.Вставить(""МассивКлючевыхПолей"" , МассивКлючевыхПолей);
	СтруктураОтвета.Вставить(""ТипОбъекта""          , ""Реквизиты"");
	
	Возврат СтруктураОтвета;
	
КонецФункции

// Сохранение во временное хранилище таблицы ссылок шага
// для вычисления истинных значений ссылочного типа в шаге
&НаСервере
Функция ПолучитьАдресТаблицыСсылокШагаДляВычисленияИстинныхЗначений()
	
	ТаблицаСсылокНаСервере = РеквизитФормыВЗначение(""ТаблицаСсылокШага"");
	
	// Преобразование таблицы ссылок шага к формату хранимой таблицы ссылок
	ТаблицаСсылокНаСервере.Колонки.Добавить(""Ссылка"");
	ТаблицаСсылокНаСервере.ЗагрузитьКолонку(ТаблицаСсылокНаСервере.ВыгрузитьКолонку(""СтрокаИдентификатора""), ""Ссылка"");
	ТаблицаСсылокНаСервере.Колонки.Добавить(""СоответствиеСсылок"");
	ТаблицаСсылокНаСервере.Колонки.Добавить(""ТипМетаданных"");
	ТаблицаСсылокНаСервере.ЗагрузитьКолонку(ТаблицаСсылокНаСервере.ВыгрузитьКолонку(""ТипМД""), ""ТипМетаданных"");
	ТаблицаСсылокНаСервере.Колонки.Добавить(""ИмяМетаданных"");
	ТаблицаСсылокНаСервере.ЗагрузитьКолонку(ТаблицаСсылокНаСервере.ВыгрузитьКолонку(""ИмяМД""), ""ИмяМетаданных"");
	
	АдрВременнойТаблСсылок = ПоместитьВоВременноеХранилище(ТаблицаСсылокНаСервере, Новый УникальныйИдентификатор);
	
	Возврат АдрВременнойТаблСсылок;
	
КонецФункции

&НаКлиенте
Функция ОпределитьИмяТекущейТаблицы()
	
	ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыСтруктурыОбъекта.ТекущаяСтраница;
	
	Если ТекущаяСтраницаСтруктурыДанных = Неопределено
		ИЛИ ТекущаяСтраницаСтруктурыДанных = Элементы.СтраницыДанных_Реквизиты Тогда
		
		Возврат Неопределено;
	КонецЕсли;
	
	ИмяТекущейСтраницы = ТекущаяСтраницаСтруктурыДанных.Имя;
	// Имя у страницы формализованное и состоит иЗ префикса ""Страница_"" и имени таблицы
	
	ИмяТаблицы = СтрЗаменить(ИмяТекущейСтраницы, ""Страница_"", """");
	
	Возврат ИмяТаблицы;
	
КонецФункции

&НаКлиенте
Функция ОпределитьНомерТекущейСтрокиВТабличномДокументе(ИмяТаблицы)
	
	ИмяТекущейОбласти = Элементы[""СцТ_Таблица_"" + ИмяТаблицы].ТекущаяОбласть.Имя;
	
	КоличествоСимволов = СтрДлина(ИмяТекущейОбласти);
	Если КоличествоСимволов = 0 Тогда
		НомерТекущейСтроки = 0;
	Иначе          
		НомерТекущейСтроки_Строкой = """";
		ЕстьНачалоСтроки = Ложь;
		Для Индекс = 1 ПО КоличествоСимволов Цикл
			ТекущийСимвол = ВРег(Сред(ИмяТекущейОбласти, Индекс, 1));
			Если НЕ ЕстьНачалоСтроки И ТекущийСимвол = ""R"" Тогда
				ЕстьНачалоСтроки = Истина;
			ИначеЕсли ЕстьНачалоСтроки И (ТекущийСимвол = ""C"" ИЛИ ТекущийСимвол = "":"") Тогда
				ЕстьНачалоСтроки = Ложь;
				Прервать;
			ИначеЕсли ЕстьНачалоСтроки И НЕ(ТекущийСимвол = ""C"" ИЛИ ТекущийСимвол = "":"") Тогда
				НомерТекущейСтроки_Строкой = НомерТекущейСтроки_Строкой + ТекущийСимвол;
				
				// Иначе просто переход к следующему символу
			КонецЕсли;
			
		КонецЦикла;
		
		НомерТекущейСтроки_Строкой = СтрЗаменить(НомерТекущейСтроки_Строкой, "" "", """");
		НомерТекущейСтроки_Строкой = СтрЗаменить(НомерТекущейСтроки_Строкой, Символ(160), """");
		
		Если ПустаяСтрока(НомерТекущейСтроки_Строкой) Тогда
			НомерТекущейСтроки = 0;
		Иначе
			Попытка
				НомерТекущейСтроки = Число(НомерТекущейСтроки_Строкой);
			Исключение
				НомерТекущейСтроки = 0;
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НомерТекущейСтроки;
	
КонецФункции


&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьУзелШапкиТаблицы(УзелТаблицы)
	
	УзелШапки           = Неопределено;
	
	Для каждого УзелДерева Из УзелТаблицы.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ""ШапкаТаблицы"" Тогда
			УзелШапки = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат УзелШапки;
	
КонецФункции

&НаКлиенте
Функция ОпределитьУзелТаблицыВДереве(ИмяТаблицы)
	
	УзелТЧ = Неопределено;
	Для каждого УзелДерева Из ДеревоЗначения.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ""ТабличныеЧасти"" Тогда
			УзелТЧ = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если УзелТЧ = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УзелТаблицы = Неопределено;
	Для каждого УзелДерева Из УзелТЧ.ПолучитьЭлементы() Цикл
		Если УзелДерева.Имя = ИмяТаблицы Тогда
			УзелТаблицы = УзелДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат УзелТаблицы;
	
КонецФункции


&НаСервере
Процедура СцТ_ЗаполнитьТаблицуДанныхЗначениями(ИД_Таблицы, ИмяТаблицы)
	
	Попытка
		ТД = ЭтотОбъект[""СцТ_Таблица_"" + ИмяТаблицы];
	Исключение
		Возврат;
	КонецПопытки;
	
	УзелТаблицы = ДеревоЗначения.НайтиПоИдентификатору(ИД_Таблицы);
	
	ТД.Очистить();
	
	// Заполнение шапки
	СписокКолонок = Новый СписокЗначений;
	
	УзелШапкиТаблицы = ПолучитьУзелШапкиТаблицы(УзелТаблицы);
	Если УзелШапкиТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Добавление колонок таблицы
	
	// Вывод ячеек шапки
	НомерКолонки = 1;
	Для каждого СтрокаРеквизита Из УзелШапкиТаблицы.ПолучитьЭлементы() Цикл
		Если СтрокаРеквизита.Активность Тогда
			СписокКолонок.Добавить(СтрокаРеквизита.Имя, СтрокаРеквизита.Синоним);
			
			АдресЯчейки = ""R1C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(НомерКолонки, ""ЧГ=0""));
			
			Ячейка = ТД.Область(АдресЯчейки);
			Ячейка.Текст = СтрокаРеквизита.Синоним;
			НомерКолонки = НомерКолонки + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Оформление колонок
	Если НомерКолонки > 1 Тогда
		
		ШиринаКолонки = Окр(160/НомерКолонки, 0);
		
		Если ШиринаКолонки < 14 Тогда
			ШиринаКолонки = 14;
		КонецЕсли;
		
		Для П=1 По НомерКолонки - 1 Цикл
			АдресЯчейки = ""C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(П, ""ЧГ=0""));
			
			Ячейка = ТД.Область(АдресЯчейки);
			
			Ячейка.ШиринаКолонки = ШиринаКолонки;
			
			Ячейка.ГраницаСправа = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
			Ячейка.ГраницаСлева  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
			
			АдресЯчейки = ""R1C%2"";
			АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(П, ""ЧГ=0""));
			Ячейка = ТД.Область(АдресЯчейки);
			
			Ячейка.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 3); 
			Ячейка.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 3);
			
			Ячейка.ЦветФона = Новый Цвет(215,215,215);
			
		КонецЦикла;
	КонецЕсли;
	
	// Заполнение значениями оставшейся части таблицы
	НомерСтроки = 2;
	Для каждого УзелСтроки Из УзелТаблицы.ПолучитьЭлементы() Цикл
		
		Если УзелСтроки.Имя = ""ШапкаТаблицы"" Тогда
			Продолжить;
		КонецЕсли;
		
		НомерКолонки = 1;
		Для каждого ЭлементСписка Из СписокКолонок Цикл
			// Цикл выполняется по списку колонок, который содержит только отображаемые колонки
			// Отсортированные в нужном порядке
			
			ТекстЯчейки = """";
			УзелКолонки = Неопределено;
			Для каждого УзелДерева Из УзелСтроки.ПолучитьЭлементы() Цикл
				Если УзелДерева.Имя = ЭлементСписка.Значение Тогда
					УзелКолонки = УзелДерева;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УзелКолонки <> Неопределено Тогда
				АдресЯчейки = ""R%1C%2"";
				АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%1"", Формат(НомерСтроки , ""ЧГ=0""));
				АдресЯчейки = СтрЗаменить(АдресЯчейки, ""%2"", Формат(НомерКолонки, ""ЧГ=0""));
				
				Ячейка = ТД.Область(АдресЯчейки);
				
				Ячейка.Текст = УзелКолонки.Представление;
				Ячейка.ГраницаСнизу  = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
				Ячейка.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная); 
				
			КонецЕсли;
			// Номер колонки нужно увеличить независимо от того,
			// Нашли или нет текущий узел - иначе собъются колонки
			НомерКолонки = НомерКолонки + 1;
			
		КонецЦикла;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла; 
	
КонецПроцедуры


&НаКлиенте
Процедура СцТ_ПрименитьНастройкиКлючей(ДанныеКлючей)
	
	УзелТаблиц = СцТ_ГлавнаяФорма.СцТ_НайтиУзелДереваФормы(ДеревоЗначения, ""Имя"", ""ТабличныеЧасти"");
	
	Если УзелТаблиц = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелТаблицы = СцТ_ГлавнаяФорма.СцТ_НайтиУзелДереваФормы(УзелТаблиц, ""Имя"", ДанныеКлючей.ИмяТаблицы);
	Если УзелТаблицы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелШапки = СцТ_ГлавнаяФорма.СцТ_НайтиУзелДереваФормы(УзелТаблицы, ""Имя"", ""ШапкаТаблицы"");
	
	Если УзелШапки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого УзелКолонки Из УзелШапки.ПолучитьЭлементы() Цикл
		
		ИмяКолонкиВРег = ВРег(УзелКолонки.Имя);
		
		Если ДанныеКлючей.Ключи.Найти(ИмяКолонкиВРег) <> Неопределено Тогда
			УзелКолонки.Действие = ""Ключ"";
		ИначеЕсли УзелКолонки.Действие = ""Ключ"" Тогда
			УзелКолонки.Действие = ""Проверить"";
		КонецЕсли;
		
		УзелКолонки.Активность = (ДанныеКлючей.АктивностьКолонок[ИмяКолонкиВРег] = Истина);
		
		ЭлементФормы = Элементы.Найти(""ИСТЗ_Таблица"" + ДанныеКлючей.ИмяТаблицы + УзелКолонки.Имя);
		Если ЭлементФормы <> Неопределено Тогда
			
			ЭлементФормы.Видимость = УзелКолонки.Активность;
			Если УзелКолонки.Действие = ""Проверить"" Тогда
				ЭлементФормы.ЦветФонаЗаголовка   = WebЦвета.ЗеленыйЛес;
				ЭлементФормы.ЦветТекстаЗаголовка = WebЦвета.Белый;
				ЭлементФормы.ШрифтЗаголовка = Новый Шрифт;
			ИначеЕсли УзелКолонки.Действие = ""Сведения"" Тогда
				ЭлементФормы.ЦветФонаЗаголовка   = WebЦвета.ГрифельноСерый;
				ЭлементФормы.ЦветТекстаЗаголовка = WebЦвета.Белый;
				ЭлементФормы.ШрифтЗаголовка      = Новый Шрифт;
			ИначеЕсли УзелКолонки.Действие = ""Ключ"" Тогда
				ЭлементФормы.ЦветФонаЗаголовка   = WebЦвета.РыжеватоКоричневый;
				ЭлементФормы.ЦветТекстаЗаголовка = WebЦвета.Белый;
				ЭлементФормы.ШрифтЗаголовка = Новый Шрифт(, , Истина);
			Иначе
				ЭлементФормы.ЦветФонаЗаголовка   = Новый Цвет;
				ЭлементФормы.ЦветТекстаЗаголовка = Новый Цвет;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры




#КонецОбласти

#КонецОбласти

",
{4,36,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ce4daf12-db98-4c61-b8f1-c944e90b3899}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ОА_НомерШага",
{1,1,
{"ru","№"}
},
{"Pattern",
{"N",6,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"ДШ_Наименование",
{1,1,
{"ru","Наименование"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ОА_ТипШага",
{1,1,
{"ru","Тип шага"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ДШ_ТипМетаданных",
{1,1,
{"ru","Тип"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{6},0,"ДШ_ИмяМетаданных",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{7},0,"ДШ_Автоописание",
{1,1,
{"ru","Автоописание"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ДШ_Описание",
{1,1,
{"ru","Описание"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"ДШ_СкрытьАвтоописание",
{1,1,
{"ru","Скрыть автоописание"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"ОА_Активность",
{1,1,
{"ru","Активность"}
},
{"Pattern",
{"N"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{13},0,"ДШ_ПредставлениеОбъекта",
{1,1,
{"ru","Представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{14},0,"ДШ_ВыполнитьВручную",
{1,1,
{"ru","Выполнить вручную"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{17},0,"ДШ_Комментарий",
{1,1,
{"ru","Комментарий"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{19},0,"ДШ_ИмяФормы",
{1,1,
{"ru","Имя формы"}
},
{"Pattern",
{"S",100,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{20},0,"ДШ_ПредставлениеИмениМетаданных",
{1,1,
{"ru","Синоним"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{34},0,"ДеревоЗначения",
{1,1,
{"ru","Дерево значения"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,9,
{5,1,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Синоним",
{1,1,
{"ru","Синоним"}
},
{"Pattern",
{"S",150,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Активность",
{1,1,
{"ru","Активность"}
},
{"Pattern",
{"N",1,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"#",280f5f0e-9c8a-49cc-bf6d-4d296cc17a63},
{"#",5a49abd5-936d-4f46-8499-9cb204efe378},
{"B"},
{"#",741ae838-6e42-4ac0-b6a4-17e5604b0669},
{"#",872f7198-7083-4e3e-b57e-a2a9802c769e},
{"S"},
{"D"},
{"N",32,4,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"Представление",
{1,1,
{"ru","Представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Действие",
{1,1,
{"ru","Действие"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Скрипт",
{1,1,
{"ru","Скрипт"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ТипУзла",
{1,1,
{"ru","Тип узла"}
},
{"Pattern",
{"S",50,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"Кл",
{1,1,
{"ru","Кл"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{56},0,"ДШ_ОбСсылка",
{1,1,
{"ru","Ссылка (Идентификатор)"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{69},0,"ПредставлениеГруппы",
{1,1,
{"ru","Группа"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{29},0,"ПутьКФормам",
{1,1,
{"ru","Путь к формам"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{45},0,"НаименованиеШагаИзмененоВручную",
{1,1,
{"ru","Наименование шага изменено вручную"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{144},0,"ДШ_ЗаголовокФормы",
{1,1,
{"ru","Заголовок формы"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{145},0,"ОА_ОписательПоложенияШагаВДереве",
{1,1,
{"ru","О а описатель положения шага в дереве"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{146},0,"ОА_ЭтоНовый",
{1,1,
{"ru","О а это новый"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{149},0,"ОА_СтруктураДанныхШага",
{1,1,
{"ru","О а структура данных шага"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{150},0,"АдресКартинкиКомментария",
{1,1,
{"ru","Адрес картинки комментария"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{151},0,"ДШ_ДанныеКартинки",
{1,1,
{"ru","Д ш данные картинки"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{152},0,"ДействиеПриОшибке",
{1,1,
{"ru","Действие при ошибке"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{153},0,"ИмяПеременнойРеузльтатаВыполнения",
{1,1,
{"ru","Результат присвоить переменной с именем"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,0,
{0,0},
{0,0}
},
{9,
{154},0,"ПользовательскоеОписание",
{1,1,
{"ru","Пользовательское описание"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{155},0,"ТаблицаСсылокШага",
{1,1,
{"ru","Таблица ссылок шага"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,8,
{5,1,0,"СтрокаИдентификатора",
{1,1,
{"ru","Строка идентификатора"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Представление",
{1,1,
{"ru","Представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ТипМД",
{1,1,
{"ru","Тип МД"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ИмяМД",
{1,1,
{"ru","Имя МД"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"СинонимМД",
{1,1,
{"ru","Синоним МД"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"СтруктураИдентификации",
{1,1,
{"ru","Структура идентификации"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ПоискПоЗапросу",
{1,1,
{"ru","Поиск по запросу"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ТекстЗапроса",
{1,1,
{"ru","Текст запроса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{156},0,"АдресТаблицыКлючей",
{1,1,
{"ru","Адрес таблицы ключей"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{157},0,"ТаблицаРеквизитов",
{1,1,
{"ru","Таблица реквизитов"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,1,0,8,
{5,1,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Синоним",
{1,1,
{"ru","Синоним"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"B"},
{"S"},
{"D"},
{"N",14,4,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Представление",
{1,1,
{"ru","Представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ТипУзла",
{1,1,
{"ru","Тип"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Действие",
{1,1,
{"ru","Действие"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Кл",
{1,1,
{"ru","Кл"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"Активность",
{1,1,
{"ru","Активность"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{158},0,"АдресНастроек",
{1,1,
{"ru","Адрес настроек"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{159},0,"АдресТаблицыСсылок",
{1,1,
{"ru","Адрес таблицы ссылок"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{160},0,"ВариантЗаписи",
{1,1,
{"ru","Вариант записи"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{161},0,"ФормаОткрытаПодВнешнимУправлением",
{1,1,
{"ru","Форма открыта под внешним управлением"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},1,
{0,
{2,
{155},
{6}
},4,
{5,1,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Представление",
{1,1,
{"ru","Представление"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Значение",
{1,1,
{"ru","Значение"}
},
{"Pattern",
{"B"},
{"S"},
{"D"},
{"N",15,2,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"СокрТипЗначения",
{1,1,
{"ru","Сокр тип значения"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0}
},5,"ТаблицаРеквизитов.Действие","ТаблицаРеквизитов.Действие",
{2,
{22},
{6}
},
{1,
{22}
},"ТаблицаРеквизитов.Активность","ТаблицаРеквизитов.Активность",
{2,
{22},
{8}
},
{1,
{22}
},"ТаблицаРеквизитов.ЭлементНеСодержитДанные","ТаблицаРеквизитов.ЭлементНеСодержитДанные",
{2,
{22},
{12}
},
{1,
{22}
},"ТаблицаРеквизитов.НеПроверятьЗначение","ТаблицаРеквизитов.НеПроверятьЗначение",
{2,
{22},
{11}
},
{1,
{22}
},"НЭСвойстваЭлемента.Активность","НЭСвойстваЭлемента.Активность",
{2,
{78},
{1}
},
{1,
{78}
},
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxjb25kaXRp
b25hbEFwcGVhcmFuY2U+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC30LjR
gtC+0LLQkNC60YLQuNCy0L3QvtGB0YLRjDwvZmllbGQ+DQoJCQkJPC9pdGVtPg0K
CQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC4
0LfQuNGC0L7QstCY0LzRjzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJCTxpdGVt
Pg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC40LfQuNGC0L7Q
stCh0LjQvdC+0L3QuNC8PC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQkJPGl0ZW0+
DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy0LjQt9C40YLQvtCy
0JfQvdCw0YfQtdC90LjQtTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJCTxpdGVt
Pg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC40LfQuNGC0L7Q
stCf0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1PC9maWVsZD4NCgkJCQk8L2l0ZW0+
DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy
0LjQt9C40YLQvtCy0KHQutGA0LjQv9GCPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJ
CQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy0LjQ
t9C40YLQvtCy0JTQtdC50YHRgtCy0LjQtTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0K
CQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBl
PSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJk
Y3Njb3I6RmllbGQiPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC30LjRgtC+0LIu
0JTQtdC50YHRgtCy0LjQtTwvbGVmdD4NCgkJCQkJPGNvbXBhcmlzb25UeXBlPkVx
dWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpz
dHJpbmciPtCf0YDQvtCy0LXRgNC40YLRjDwvcmlnaHQ+DQoJCQkJPC9pdGVtPg0K
CQkJPC9maWx0ZXI+DQoJCQk8YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0g
eHNpOnR5cGU9IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29y
OnBhcmFtZXRlcj7QptCy0LXRgtCi0LXQutGB0YLQsDwvZGNzY29yOnBhcmFtZXRl
cj4NCgkJCQkJPGRjc2Nvcjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+IzMz
OTk2NjwvZGNzY29yOnZhbHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2Fw
cGVhcmFuY2U+DQoJCTwvaXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0K
CQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC4
0LfQuNGC0L7QstCQ0LrRgtC40LLQvdC+0YHRgtGMPC9maWVsZD4NCgkJCQk8L2l0
ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQ
utCy0LjQt9C40YLQvtCy0JjQvNGPPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQkJ
PGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy0LjQt9C4
0YLQvtCy0KHQuNC90L7QvdC40Lw8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC30LjR
gtC+0LLQl9C90LDRh9C10L3QuNC1PC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQkJ
PGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy0LjQt9C4
0YLQvtCy0JfQvdCw0YfQtdC90LjQtTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJ
CTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC40LfQ
uNGC0L7QstCf0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1PC9maWVsZD4NCgkJCQk8
L2l0ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg
0LXQutCy0LjQt9C40YLQvtCy0KHQutGA0LjQv9GCPC9maWVsZD4NCgkJCQk8L2l0
ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQ
utCy0LjQt9C40YLQvtCy0JTQtdC50YHRgtCy0LjQtTwvZmllbGQ+DQoJCQkJPC9p
dGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhz
aTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0
eXBlPSJkY3Njb3I6RmllbGQiPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC30LjR
gtC+0LIu0JTQtdC50YHRgtCy0LjQtTwvbGVmdD4NCgkJCQkJPGNvbXBhcmlzb25U
eXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0IHhzaTp0eXBl
PSJ4czpzdHJpbmciPtCh0LLQtdC00LXQvdC40Y88L3JpZ2h0Pg0KCQkJCTwvaXRl
bT4NCgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2Nvcjpp
dGVtIHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRj
c2NvcjpwYXJhbWV0ZXI+0KbQstC10YLQotC10LrRgdGC0LA8L2Rjc2NvcjpwYXJh
bWV0ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3Ii
PiMwMDAwRkY8L2Rjc2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJ
PC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlv
bj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0KDQtdC6
0LLQuNC30LjRgtC+0LLQkNC60YLQuNCy0L3QvtGB0YLRjDwvZmllbGQ+DQoJCQkJ
PC9pdGVtPg0KCQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQ
oNC10LrQstC40LfQuNGC0L7QstCY0LzRjzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0K
CQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC4
0LfQuNGC0L7QstCh0LjQvdC+0L3QuNC8PC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJ
CQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg0LXQutCy0LjQ
t9C40YLQvtCy0JfQvdCw0YfQtdC90LjQtTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0K
CQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC4
0LfQuNGC0L7QstCf0YDQtdC00YHRgtCw0LLQu9C10L3QuNC1PC9maWVsZD4NCgkJ
CQk8L2l0ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQ
sNCg0LXQutCy0LjQt9C40YLQvtCy0KHQutGA0LjQv9GCPC9maWVsZD4NCgkJCQk8
L2l0ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QotCw0LHQu9C40YbQsNCg
0LXQutCy0LjQt9C40YLQvtCy0JTQtdC50YHRgtCy0LjQtTwvZmllbGQ+DQoJCQkJ
PC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVt
IHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhz
aTp0eXBlPSJkY3Njb3I6RmllbGQiPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC3
0LjRgtC+0LIu0JDQutGC0LjQstC90L7RgdGC0Yw8L2xlZnQ+DQoJCQkJCTxjb21w
YXJpc29uVHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCTxyaWdodCB4
c2k6dHlwZT0ieHM6Ym9vbGVhbiI+ZmFsc2U8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4N
CgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVt
IHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2Nv
cjpwYXJhbWV0ZXI+0KbQstC10YLQotC10LrRgdGC0LA8L2Rjc2NvcjpwYXJhbWV0
ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiND
MEMwQzA8L2Rjc2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9h
cHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4N
CgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQ
uNC30LjRgtC+0LLQndC10J/RgNC+0LLQtdGA0Y/RgtGM0JfQvdCw0YfQtdC90LjQ
tTwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+
0KLQsNCx0LvQuNGG0LDQoNC10LrQstC40LfQuNGC0L7QstCX0L3QsNGH0LXQvdC4
0LU8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCTwvc2VsZWN0aW9uPg0KCQkJPGZp
bHRlcj4NCgkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUNvbXBhcmlzb24i
Pg0KCQkJCQk8bGVmdCB4c2k6dHlwZT0iZGNzY29yOkZpZWxkIj7QotCw0LHQu9C4
0YbQsNCg0LXQutCy0LjQt9C40YLQvtCyLtCt0LvQtdC80LXQvdGC0J3QtdCh0L7Q
tNC10YDQttC40YLQlNCw0L3QvdGL0LU8L2xlZnQ+DQoJCQkJCTxjb21wYXJpc29u
VHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCTxyaWdodCB4c2k6dHlw
ZT0ieHM6Ym9vbGVhbiI+dHJ1ZTwvcmlnaHQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9m
aWx0ZXI+DQoJCQk8YXBwZWFyYW5jZT4NCgkJCQk8ZGNzY29yOml0ZW0geHNpOnR5
cGU9IlNldHRpbmdzUGFyYW1ldGVyVmFsdWUiPg0KCQkJCQk8ZGNzY29yOnBhcmFt
ZXRlcj7QntGC0L7QsdGA0LDQttCw0YLRjDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJ
CQkJPGRjc2Nvcjp2YWx1ZSB4c2k6dHlwZT0ieHM6Ym9vbGVhbiI+ZmFsc2U8L2Rj
c2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNl
Pg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRl
bT4NCgkJCQkJPGZpZWxkPtCi0LDQsdC70LjRhtCw0KDQtdC60LLQuNC30LjRgtC+
0LLQl9C90LDRh9C10L3QuNC1PC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQk8L3Nl
bGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRl
ckl0ZW1Db21wYXJpc29uIj4NCgkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpG
aWVsZCI+0KLQsNCx0LvQuNGG0LDQoNC10LrQstC40LfQuNGC0L7Qsi7QndC10J/R
gNC+0LLQtdGA0Y/RgtGM0JfQvdCw0YfQtdC90LjQtTwvbGVmdD4NCgkJCQkJPGNv
bXBhcmlzb25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0
IHhzaTp0eXBlPSJ4czpib29sZWFuIj50cnVlPC9yaWdodD4NCgkJCQk8L2l0ZW0+
DQoJCQk8L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRl
bSB4c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Nj
b3I6dXNlPmZhbHNlPC9kY3Njb3I6dXNlPg0KCQkJCQk8ZGNzY29yOnBhcmFtZXRl
cj7QlNC+0YHRgtGD0L/QvdC+0YHRgtGMPC9kY3Njb3I6cGFyYW1ldGVyPg0KCQkJ
CQk8ZGNzY29yOnZhbHVlIHhzaTp0eXBlPSJ4czpib29sZWFuIj5mYWxzZTwvZGNz
Y29yOnZhbHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQkJPGRjc2NvcjppdGVt
IHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2Nv
cjpwYXJhbWV0ZXI+0J7RgtC+0LHRgNCw0LbQsNGC0Yw8L2Rjc2NvcjpwYXJhbWV0
ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InhzOmJvb2xlYW4iPmZh
bHNlPC9kY3Njb3I6dmFsdWU+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBw
ZWFyYW5jZT4NCgkJPC9pdGVtPg0KCQk8aXRlbT4NCgkJCTxzZWxlY3Rpb24+DQoJ
CQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QndCt0KHQstC+0LnRgdGC0LLQsNCt0LvQ
tdC80LXQvdGC0LA8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCTwvc2VsZWN0aW9u
Pg0KCQkJPGZpbHRlcj4NCgkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUNv
bXBhcmlzb24iPg0KCQkJCQk8bGVmdCB4c2k6dHlwZT0iZGNzY29yOkZpZWxkIj7Q
ndCt0KHQstC+0LnRgdGC0LLQsNCt0LvQtdC80LXQvdGC0LAu0JDQutGC0LjQstC9
0L7RgdGC0Yw8L2xlZnQ+DQoJCQkJCTxjb21wYXJpc29uVHlwZT5FcXVhbDwvY29t
cGFyaXNvblR5cGU+DQoJCQkJCTxyaWdodCB4c2k6dHlwZT0ieHM6Ym9vbGVhbiI+
ZmFsc2U8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVyPg0KCQkJPGFw
cGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJTZXR0aW5nc1Bh
cmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+0KbQstC10YLQ
otC10LrRgdGC0LA8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJCQkJCTxkY3Njb3I6dmFs
dWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiM5OTk5OTk8L2Rjc2Nvcjp2YWx1ZT4N
CgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+
DQoJPC9jb25kaXRpb25hbEFwcGVhcmFuY2U+DQo8L1NldHRpbmdzPg==}
},
{0,13,
{0,"ДанныеШага",
{"Pattern"},0},
{0,"ОписательПоложенияШагаВДереве",
{"Pattern"},0},
{0,"ЭтоНовый",
{"Pattern",
{"B"}
},0},
{0,"ТолькоПросмотр",
{"Pattern",
{"B"}
},0},
{0,"ТипШага",
{"Pattern",
{"S"}
},0},
{0,"НомерШага",
{"Pattern",
{"N",10,0,1}
},0},
{0,"Активность",
{"Pattern",
{"S"}
},0},
{0,"СтруктураДанныхШага",
{"Pattern"},0},
{0,"АдресТаблицыКлючей",
{"Pattern",
{"S"}
},0},
{0,"АдресТаблицыСсылок",
{"Pattern",
{"S"}
},0},
{0,"ВыполнятьПреобразованиеСсылочныхТипов",
{"Pattern",
{"B"}
},0},
{0,"ОткрытаПодВнешнимУправлением",
{"Pattern",
{"B"}
},0},
{0,"РежимСовместимости838",
{"Pattern",
{"B"}
},0}
},
{0,14,
{7,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьИЗакрытьФорму",
{1,1,
{"ru","Применить и закрыть"}
},
{1,1,
{"ru","Применить изменения и закрыть форму"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,e6fc55a0-3d58-4b15-bdd3-717453929598},"",-1,-1,1,0,""},"СохранитьИЗакрытьФорму",2,0,0,
{0,0},1,0},
{7,
{27,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОбновитьАвтоназвание",
{1,1,
{"ru","Сформировать наименование автоматически"}
},
{1,1,
{"ru","Обновить автоназвание шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,fc4f29e0-d168-4fe0-8e64-e982fabf2595},"",-1,-1,1,0,""},"ОбновитьАвтоназвание",3,0,0,
{0,0},1,0},
{7,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПрименитьИзменения",
{1,1,
{"ru","Применить изменения"}
},
{1,1,
{"ru","Применить изменения"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,818ab7d0-4654-4542-bd5e-fd9d1352b5a1},"",-1,-1,1,0,""},"ПрименитьИзменения",3,0,0,
{0,0},1,0},
{7,
{30,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ХранимыеДанныеШага",
{1,1,
{"ru","Хранимые данные шага"}
},
{1,1,
{"ru","Хранимые данные шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ХранимыеДанныеШага",3,0,0,
{0,0},1,0},
{7,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СравнитьВизуально",
{1,1,
{"ru","Сравнить  визуально"}
},
{1,1,
{"ru","Сравнить визуально"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СравнитьВизуально",3,0,0,
{0,0},1,0},
{7,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СтруктураИдентификацииТаблицы",
{1,1,
{"ru","Структура идентификации"}
},
{1,1,
{"ru","Структура идентификации таблицы"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СтруктураИдентификацииТаблицы",3,0,0,
{0,0},1,0},
{7,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СравнитьТаблицуВизуально",
{1,1,
{"ru","Сравнить таблицу визуально"}
},
{1,1,
{"ru","Сравнить таблицу визуально"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СравнитьТаблицуВизуально",3,0,0,
{0,0},1,0},
{7,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НастроитьРеквизиты",
{1,1,
{"ru","Настроить реквизиты"}
},
{1,1,
{"ru","Настроить реквизиты"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НастроитьРеквизиты",3,0,0,
{0,0},1,0},
{7,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьСтрокуТаблицы",
{1,1,
{"ru","Добавить"}
},
{1,1,
{"ru","Добавить строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,977e831a-0e73-4d60-af51-091a6fa8612e},"",-1,-1,1,0,""},"ДобавитьСтрокуТаблицы",2,0,0,
{0,0},1,0},
{7,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УдалитьПоследнююСтроку",
{1,1,
{"ru","Удалить"}
},
{1,1,
{"ru","Удалить строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,60643198-e4b2-4c39-9de1-53cca3fff382},"",-1,-1,1,0,""},"УдалитьПоследнююСтроку",1,0,0,
{0,0},1,0},
{7,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СкопироватьСтрокуТаблицы",
{1,1,
{"ru","Копировать строку"}
},
{1,1,
{"ru","Копировать текущую строку"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,f6532868-30b9-44ab-803c-78f0f0b06b02},"",-1,-1,1,0,""},"СкопироватьСтрокуТаблицы",1,0,0,
{0,0},1,0},
{7,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереместитьВверх",
{1,1,
{"ru","Вверх"}
},
{1,1,
{"ru","Переместить вверх"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-3},"",-1,-1,1,0,""},"ПереместитьВверх",3,0,0,
{0,0},1,0},
{7,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПереместитьВниз",
{1,1,
{"ru","Вниз"}
},
{1,1,
{"ru","Переместить вниз"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-4},"",-1,-1,1,0,""},"ПереместитьВниз",1,0,0,
{0,0},1,0},
{7,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыбратьОбъектИБ",
{1,1,
{"ru","Выбрать объект"}
},
{1,1,
{"ru","Выбрать объект информационной базы"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{-1},"",-1,-1,1,0,""},"ВыбратьОбъектИБ",2,0,0,
{0,0},1,0}
},
{0,0},
{0,0},0,0}